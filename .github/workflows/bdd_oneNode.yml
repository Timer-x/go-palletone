name: One Node BDD
on: [push]
jobs:
  OneNodeBDD:
    name: One node bdd
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

      - name: Build gptn 
        run: |
            go build -mod=vendor ./cmd/gptn

      - name: Run gptn
        run: |
            mkdir bdd/GasToken/node
            cp gptn bdd/GasToken/node
            cp gptn bdd/node
            cd bdd/node
            chmod +x gptn
            python init.py
            nohup ./gptn &
            sleep 15
            netstat -ap | grep gptn

      - name: Run blacklist bdd
        run: |
            cd bdd/blacklist;
            ./blacklist_test.sh 2 

      - name: Run exchange bdd
        if: always()
        run: |
            cd bdd/exchange
            chmod +x ./exchange_test.sh
            ./exchange_test.sh BYC LYC

      - name: Run contract testcases bdd
        if: always()
        run: | 
            cd bdd/contract/testcases
            chmod +x ./test_start.sh
            ./test_start.sh

      - name: Run contract transfercases bdd
        if: always()
        run: |
            cd bdd/contract/transfercases
            chmod +x ./test_start.sh
            ./test_start.sh

      - name: Run testcase createTrans bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/createTrans -i normal ./bdd/testcase/createTrans

      - name: Run testcase crt20Contract bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/crt20Contract -i normal ./bdd/testcase/crt20Contract

      - name: Run testcase crt721Seqence bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/crt721Seqence -i normal ./bdd/testcase/crt721Seqence

      - name: Run testcase crt721UDID bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/crt721UDID -i normal ./bdd/testcase/crt721UDID

      - name: Run testcase voteContract bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/voteContract -i normal ./bdd/testcase/voteContract

      - name: Run hdWallet bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/hdWallet ./bdd/hdWallet

      - name: Run testcases bdd
        if: always()
        run: |
            killall -9 gptn
            cd bdd/GasToken
            chmod +x ./init_gas_token.sh
            ./init_gas_token.sh
            sleep 15
            python -m robot.run -d ./logs/testcases ./testcases

      - name: Upload to Ftp
        if: always()
        run: |
            killall -9 gptn
            zip -j bdd/logs/oneNode_log.zip bdd/node/log/*
            zip -j bdd/logs/gasToken_log.zip bdd/GasToken/node/log/*
            cd bdd
            chmod +x ./upload2Ftp.sh ./targz_node.sh
            ./targz_node.sh oneNode
            ./upload2Ftp.sh ${{secrets.FTP_PWD}} "Actions-"${GITHUB_REF##*/} ${GITHUB_SHA} $PWD/logs 
            
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: bddLogs
          path: bdd/logs

  OneNodeBDD_PACKET_BDD:
    name: Packet contract bdd
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

      - name: Build gptn 
        run: |
            go build -mod=vendor ./cmd/gptn

      - name: Run gptn
        run: |
            cp gptn bdd/node
            cd bdd/node
            chmod +x gptn
            python init.py
            nohup ./gptn &
            sleep 15
            netstat -ap | grep gptn

      - name: Run packet bdd
        run: |
            python -m robot.run -d ./bdd/logs/packet ./bdd/packet

      - name: Upload to Ftp
        if: always()
        run: |
            killall -9 gptn
            zip -j bdd/logs/oneNodePacket_log.zip bdd/node/log/*
            cd bdd
            chmod +x ./upload2Ftp.sh ./targz_node.sh
            ./targz_node.sh oneNodePacket
            ./upload2Ftp.sh ${{secrets.FTP_PWD}} "Actions-"${GITHUB_REF##*/} ${GITHUB_SHA} $PWD/logs

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: packetbddLogs
          path: bdd/logs

  OneNodeBDD_DEPOSIT_BDD:
    name: Deposit contract bdd
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

      - name: Build gptn 
        run: |
            go build -mod=vendor ./cmd/gptn

      - name: Run gptn
        run: |
            cp gptn bdd/node
            cd bdd/node
            chmod +x gptn
            python init.py
            nohup ./gptn &
            sleep 15
            netstat -ap | grep gptn

      - name: Run deposit bdd
        run: |
            cd bdd/dct
            ./deposit_test.sh 13

      - name: Upload to Ftp
        if: always()
        run: |
            killall -9 gptn
            zip -j bdd/logs/oneNodeDeposit_log.zip bdd/node/log/*
            cd bdd
            chmod +x ./upload2Ftp.sh ./targz_node.sh
            ./targz_node.sh oneNodeDeposit
            ./upload2Ftp.sh ${{secrets.FTP_PWD}} "Actions-"${GITHUB_REF##*/} ${GITHUB_SHA} $PWD/logs

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: depositbddLogs
          path: bdd/logs
