name: NO_GAS_BDDS
on: [push]
jobs:
  onenodebdd:
    name: onenodebdd
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

      - name: Build and run gptn
        run: |
            cp -r bdd2/* bdd/
            go build -mod=vendor ./cmd/gptn
            mkdir bdd/GasToken/node
            cp gptn bdd/GasToken/node
            cp gptn bdd/node
            cd bdd/node
            chmod +x gptn
            python init.py
            chmod +x ./withoutGas1.sh
            ./withoutGas1.sh
            nohup ./gptn &
            sleep 15
            netstat -ap | grep gptn

      - name: Run blacklist bdd
        run: |
            cd bdd/blacklist;
            ./blacklist_test.sh 2 

      - name: Run exchange bdd
        if: always()
        run: |
            cd bdd/exchange
            chmod +x ./exchange_test.sh
            ./exchange_test.sh BYC LYC

      - name: Run contract testcases bdd
        if: always()
        run: | 
            cd bdd/contract/testcases
            chmod +x ./test_start.sh
            ./test_start.sh

      - name: Run contract transfercases bdd
        if: always()
        run: |
            cd bdd/contract/transfercases
            chmod +x ./test_start.sh
            ./test_start.sh

      - name: Run testcase createTrans bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/createTrans -i normal ./bdd/testcase/createTrans

      - name: Run testcase crt20Contract bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/crt20Contract -i normal ./bdd/testcase/crt20Contract

      - name: Run testcase crt721Seqence bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/crt721Seqence -i normal ./bdd/testcase/crt721Seqence

      - name: Run testcase crt721UDID bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/crt721UDID -i normal ./bdd/testcase/crt721UDID

      - name: Run testcase voteContract bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/voteContract -i normal ./bdd/testcase/voteContract

      - name: Run hdWallet bdd
        if: always()
        run: |
            python -m robot.run -d ./bdd/logs/hdWallet ./bdd/hdWallet

      - name: Run testcases bdd
        if: always()
        run: |
            killall -9 gptn
            cd bdd/GasToken
            chmod +x ./init_gas_token.sh
            ./init_gas_token.sh
            sleep 15
            python -m robot.run -d ./logs/testcases ./testcases

      - name: Upload to ftp
        if: always()
        run: |
            killall -9 gptn
            zip -j bdd/logs/oneNode_log.zip bdd/node/log/*
            zip -j bdd/logs/gasToken_log.zip bdd/GasToken/node/log/*
            cd bdd
            chmod +x ./upload2Ftp.sh ./targz_node.sh
            ./targz_node.sh oneNode
            ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs 
            
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: bddLogs
          path: bdd/logs

  packetbdd:
    name: packetbdd
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

      - name: Build and run gptn
        run: |
            cp -r bdd2/* bdd/
            go build -mod=vendor ./cmd/gptn
            cp gptn bdd/node
            cd bdd/node
            chmod +x gptn
            python init.py
            chmod +x ./withoutGas1.sh
            ./withoutGas1.sh
            nohup ./gptn &
            sleep 15
            netstat -ap | grep gptn

      - name: Run packet bdd
        run: |
            python -m robot.run -d ./bdd/logs/packet ./bdd/packet

      - name: Upload to ftp
        if: always()
        run: |
            killall -9 gptn
            zip -j bdd/logs/oneNodePacket_log.zip bdd/node/log/*
            cd bdd
            chmod +x ./upload2Ftp.sh ./targz_node.sh
            ./targz_node.sh oneNodePacket
            ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: packetbddLogs
          path: bdd/logs

  depositbdd:
    name: depositbdd
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

      - name: Build and run gptn 
        run: |
            cp -r bdd2/* bdd/
            go build -mod=vendor ./cmd/gptn
            cp gptn bdd/node
            cd bdd/node
            chmod +x gptn
            python init.py
            chmod +x ./withoutGas1.sh
            ./withoutGas1.sh
            nohup ./gptn &
            sleep 15
            netstat -ap | grep gptn

      - name: Run deposit bdd
        run: |
            cd bdd/dct
            ./deposit_test.sh 13

      - name: Upload to ftp
        if: always()
        run: |
            killall -9 gptn
            zip -j bdd/logs/oneNodeDeposit_log.zip bdd/node/log/*
            cd bdd
            chmod +x ./upload2Ftp.sh ./targz_node.sh
            ./targz_node.sh oneNodeDeposit
            ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: depositbddLogs
          path: bdd/logs

  applicationbdd:
    name: applicationbdd
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

    - name: Build and run gptn
      run: |
           cp -r bdd2/* bdd/
           go build -mod=vendor ./cmd/gptn
           mkdir bdd/application/node
           cp gptn bdd/application/node
           cd ./bdd/application
           chmod +x ./init.sh
           ./init.sh
           sleep 15

    - name: Run Application bdd
      run: |
           cd ./bdd/application
           python -m robot.run -d ../logs/application .

    - name: Upload to ftp
      if: always()
      run: |
          killall -9 gptn
          zip -j bdd/logs/application_log.zip bdd/application/node/log/*
          cd bdd
          chmod +x ./upload2Ftp.sh ./targz_node.sh
          ./targz_node.sh application
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: applicationLogs
        path: bdd/logs

  mediatorbdd:
    name: mediatorbdd
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
            sudo -H pip install --upgrade pip
            sudo -H pip install robotframework==2.8.5
            sudo -H pip install requests
            sudo -H pip install robotframework-requests
            sudo -H pip install demjson
            sudo -H pip install pexpect
            sudo -H apt-get install expect
            sudo -H apt-get install lftp

    - name: Build and run gptn
      run: |
           cp -r bdd2/* bdd/
           go build -mod=vendor ./cmd/gptn
           mkdir bdd/mediator-vote/node
           cp gptn bdd/mediator-vote/node
           cd ./bdd/mediator-vote
           chmod +x ./init.sh
           ./init.sh
           sleep 15

    - name: Run Mediator Vote
      run: |
           cd ./bdd/mediator-vote
           python -m robot.run -d ../logs/mediatorVote .

    - name: Upload to ftp
      if: always()
      run: |
          killall -9 gptn
          zip -j bdd/logs/mediator_log.zip bdd/mediator-vote/node/log/*
          cd bdd
          chmod +x ./upload2Ftp.sh ./targz_node.sh
          ./targz_node.sh mediatorVote
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: mediatorLogs
        path: bdd/logs

  multiplenodesbdd:
    name: multiplenodesbdd
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
 
    - name: Install dependencies
      run: |
          sudo -H pip install --upgrade pip
          sudo -H pip install robotframework==2.8.5
          sudo -H pip install requests
          sudo -H pip install robotframework-requests
          sudo -H pip install demjson
          sudo -H pip install pexpect
          sudo -H apt-get install expect
          sudo -H apt-get install lftp

    - name: Build and run gptn
      run: |
          cp -r bdd2/* bdd/
          go build -mod=vendor ./cmd/gptn
          cd bdd/node
          chmod -R +x *
          sudo -H chmod +w /etc/hosts
          sudo -H sed -i 's/127.0.0.1 localhost/127.0.0.1/g' /etc/hosts
          sudo -H sed -i '$a0.0.0.0 localhost' /etc/hosts
          ./launchMultipleNodes.sh
          netstat -ap | grep gptn
          grep "mediator_interval" node1/ptn-genesis.json
          grep "maintenance_skip_slots" node1/ptn-genesis.json

    - name: Run multiple nodes bdd
      run: |
          python -m robot.run -d ./bdd/logs/zMulti-node -i normal ./bdd/testcase/zMulti-node

    - name: Run light bdd
      if: always()
      run: |
        cd bdd/light
        chmod +x ./bddstart.sh
        ./bddstart.sh
        
    - name: Upload to ftp
      if: always()
      run: |
          killall -9 gptn
          zip -j bdd/logs/zMulti-node_log.zip bdd/logs/zMulti-node/*
          zip -j bdd/logs/light.zip bdd/logs/light/*
          cd bdd
          chmod +x ./upload2Ftp.sh ./targz_node.sh
          ./targz_node.sh multiNode
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: multipleLogs
        path: bdd/logs

  contractpaybdd:
    name: UserContract-contractpaybdd
    runs-on: ubuntu-latest
    steps:

    - name: Install dependencies
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install robotframework==2.8.5
        sudo -H pip install requests
        sudo -H pip install robotframework-requests
        sudo -H pip install demjson
        sudo -H pip install pexpect
        sudo -H apt-get install expect
        sudo -H apt-get install lftp

    - name: Build and run gptn
      run: |
          cd $HOME
          mkdir gopath
          cd gopath
          export GOPATH=$pwd
          mkdir -p src/github.com/palletone
          cd src/github.com/palletone
          git clone -b ${GITHUB_REF##*/} https://github.com/palletone/go-palletone.git
          cd go-palletone
          sudo mkdir -p /home/runner/go/src/github.com/palletone/go-palletone
          sudo cp -r * /home/runner/go/src/github.com/palletone/go-palletone/
          cp -r bdd2/* bdd/
          go build -mod=vendor ./cmd/gptn
          docker images
          gptnVersion=`./gptn version|grep ^Version|awk '{print $2}'|awk -F '-' '{print $1}'`
          cat /proc/sys/net/ipv4/ip_forward
          sudo ./jurySec.sh
          sudo cat /etc/docker/daemon.json
          cd ./cmd/deployment
          cp ../../bdd/node/withoutGas.sh .
          chmod +x ./withoutGas.sh
          chmod +x ./deploy.sh
          chmod +x ./start.sh
          chmod +x editConfig.sh
          docker network create gptn-net
          docker pull palletone/goimg
          docker tag palletone/goimg palletone/goimg:$gptnVersion
          docker network ls
          docker images
          ./deploy.sh 3 3
          ./editConfig.sh 3 3
          ./withoutGas.sh
          ./start.sh 3
          sleep 30
    - name: Run contractpay bdd
      run: |
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          python -m robot.run -d ./bdd/logs/contractpay -i contractpay ./bdd/UserContract/Testcases

    - name: Upload to ftp
      if: always()
      run: |
          killall -9 gptn
          cd $HOME/gopath/src/github.com/palletone/go-palletone 
          zip -j bdd/logs/uc3-3_reports_contractpay.zip bdd/logs/contractpay/*
          zip -r -l -o bdd/logs/uc3-3_logs_contractpay.zip cmd/deployment/node1/log cmd/deployment/node1/nohup.out cmd/deployment/node2/log cmd/deployment/node2/nohup.out cmd/deployment/node3/log cmd/deployment/node3/nohup.out
          cd bdd
          chmod +x ./upload2Ftp.sh 
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: contractpayLogs
        path: /home/runner/gopath/src/github.com/palletone/go-palletone/bdd/logs

  testshimuc1bdd:
    name: UserContract-testshimuc1bdd
    runs-on: ubuntu-latest
    steps:

    - name: Install dependencies
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install robotframework==2.8.5
        sudo -H pip install requests
        sudo -H pip install robotframework-requests
        sudo -H pip install demjson
        sudo -H pip install pexpect
        sudo -H apt-get install expect
        sudo -H apt-get install lftp

    - name: Build and run gptn
      run: |
          cd $HOME
          mkdir gopath
          cd gopath
          export GOPATH=$pwd
          mkdir -p src/github.com/palletone
          cd src/github.com/palletone
          git clone -b ${GITHUB_REF##*/} https://github.com/palletone/go-palletone.git
          cd go-palletone
          sudo mkdir -p /home/runner/go/src/github.com/palletone/go-palletone
          sudo cp -r * /home/runner/go/src/github.com/palletone/go-palletone/
          cp -r bdd2/* bdd/
          go build -mod=vendor ./cmd/gptn
          docker images
          gptnVersion=`./gptn version|grep ^Version|awk '{print $2}'|awk -F '-' '{print $1}'`
          cat /proc/sys/net/ipv4/ip_forward
          sudo ./jurySec.sh
          sudo cat /etc/docker/daemon.json
          cd ./cmd/deployment
          cp ../../bdd/node/withoutGas.sh .
          chmod +x ./withoutGas.sh
          chmod +x ./deploy.sh
          chmod +x ./start.sh
          chmod +x editConfig.sh
          docker network create gptn-net
          docker pull palletone/goimg
          docker tag palletone/goimg palletone/goimg:$gptnVersion
          docker network ls
          docker images
          ./deploy.sh 3 3
          ./editConfig.sh 3 3
          ./withoutGas.sh
          ./start.sh 3
          sleep 30
    - name: Run testshimuc1 bdd
      run: |
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          python -m robot.run -d ./bdd/logs/testshimuc1 -i testshimuc1 ./bdd/UserContract/Testcases

    - name: Upload to ftp
      if: always()
      run: |
          killall -9 gptn
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          zip -j bdd/logs/uc3-3_reports_testshimuc1.zip bdd/logs/testshimuc1/*
          zip -r -l -o bdd/logs/uc3-3_logs_testshimuc1.zip cmd/deployment/node1/log cmd/deployment/node1/nohup.out cmd/deployment/node2/log cmd/deployment/node2/nohup.out cmd/deployment/node3/log cmd/deployment/node3/nohup.out
          cd bdd
          chmod +x ./upload2Ftp.sh 
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: testshimuc1Logs
        path: /home/runner/gopath/src/github.com/palletone/go-palletone/bdd/logs

  tracebdd:
    name: UserContract-tracebdd
    runs-on: ubuntu-latest
    steps:

    - name: Install dependencies
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install robotframework==2.8.5
        sudo -H pip install requests
        sudo -H pip install robotframework-requests
        sudo -H pip install demjson
        sudo -H pip install pexpect
        sudo -H apt-get install expect
        sudo -H apt-get install lftp

    - name: Build and run gptn
      run: |
          cd $HOME
          mkdir gopath
          cd gopath
          export GOPATH=$pwd
          mkdir -p src/github.com/palletone
          cd src/github.com/palletone
          git clone -b ${GITHUB_REF##*/} https://github.com/palletone/go-palletone.git
          cd go-palletone
          sudo mkdir -p /home/runner/go/src/github.com/palletone/go-palletone
          sudo cp -r * /home/runner/go/src/github.com/palletone/go-palletone/
          cp -r bdd2/* bdd/
          go build -mod=vendor ./cmd/gptn
          docker images
          gptnVersion=`./gptn version|grep ^Version|awk '{print $2}'|awk -F '-' '{print $1}'`
          cat /proc/sys/net/ipv4/ip_forward
          sudo ./jurySec.sh
          sudo cat /etc/docker/daemon.json
          cd ./cmd/deployment
          cp ../../bdd/node/withoutGas.sh .
          chmod +x ./withoutGas.sh
          chmod +x ./deploy.sh
          chmod +x ./start.sh
          chmod +x editConfig.sh
          docker network create gptn-net
          docker pull palletone/goimg
          docker tag palletone/goimg palletone/goimg:$gptnVersion
          docker network ls
          docker images
          ./deploy.sh 3 3
          ./editConfig.sh 3 3
          ./withoutGas.sh
          ./start.sh 3
          sleep 30
    - name: Run trace contract bdd
      run: |
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          python -m robot.run -d ./bdd/logs/trace -i trace ./bdd/UserContract/Testcases

    - name: Upload to ftp
      if: always()
      run: |
          killall -9 gptn
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          zip -j bdd/logs/uc3-3_reports_tract.zip bdd/logs/trace/*
          zip -r -l -o bdd/logs/uc3-3_logs_trace.zip cmd/deployment/node1/log cmd/deployment/node1/nohup.out cmd/deployment/node2/log cmd/deployment/node2/nohup.out cmd/deployment/node3/log cmd/deployment/node3/nohup.out
          cd bdd
          chmod +x ./upload2Ftp.sh 
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "NoGas-"${GITHUB_REF##*/} ${GITHUB_RUN_NUMBER} $PWD/logs

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: traceLogs
        path: /home/runner/gopath/src/github.com/palletone/go-palletone/bdd/logs
