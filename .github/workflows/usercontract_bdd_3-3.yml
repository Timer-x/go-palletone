name: UserContractBDD
on: push
jobs:
  job1:
    name: contractpayBDD
    runs-on: ubuntu-latest
    steps:

    - name: Install
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install robotframework==2.8.5
        sudo -H pip install requests
        sudo -H pip install robotframework-requests
        sudo -H pip install demjson
        sudo -H pip install pexpect
        sudo -H apt-get install expect
        sudo -H apt-get install lftp

    - name: Build Gptn
      run: |
          cd $HOME
          mkdir gopath
          cd gopath
          export GOPATH=$pwd
          mkdir -p src/github.com/palletone
          cd src/github.com/palletone
          git clone -b ${GITHUB_REF##*/} https://github.com/palletone/go-palletone.git
          cd go-palletone
          sudo mkdir -p /home/runner/go/src/github.com/palletone/go-palletone
          sudo cp -r * /home/runner/go/src/github.com/palletone/go-palletone/
          go build -mod=vendor ./cmd/gptn
          docker images
          gptnVersion=`./gptn version|grep ^Version|awk '{print $2}'|awk -F '-' '{print $1}'`
          cat /proc/sys/net/ipv4/ip_forward
          sudo ./jurySec.sh
          sudo cat /etc/docker/daemon.json
          cd ./cmd/deployment
          chmod +x ./deploy.sh
          chmod +x ./start.sh
          chmod +x editConfig.sh
          docker network create gptn-net
          docker pull palletone/goimg
          docker tag palletone/goimg palletone/goimg:$gptnVersion
          docker network ls
          docker images
          ./deploy.sh 3 3
          ./editConfig.sh 3 3
          ./start.sh 3
          sleep 30
          cd ../../
          python -m robot.run -d ./bdd/logs/contractpay -i contractpay ./bdd/UserContract/Testcases

    - name: Upload to Ftp
      if: always()
      run: |
          killall -9 gptn
          cd $HOME/gopath/src/github.com/palletone/go-palletone 
          zip -j bdd/logs/uc3-3_reports_contractpay.zip bdd/logs/contractpay/*
          zip -r -l -o bdd/logs/uc3-3_logs_contractpay.zip cmd/deployment/node1/log cmd/deployment/node1/nohup.out cmd/deployment/node2/log cmd/deployment/node2/nohup.out cmd/deployment/node3/log cmd/deployment/node3/nohup.out
          cd bdd
          chmod +x ./upload2Ftp.sh 
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "Actions-"${GITHUB_REF##*/} ${GITHUB_SHA} $PWD/logs

    - name: Upload
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: contractpayLogs
        path: /home/runner/gopath/src/github.com/palletone/go-palletone/bdd/logs

  job2:
    name: testshimuc1BDD
    runs-on: ubuntu-latest
    steps:

    - name: Install
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install robotframework==2.8.5
        sudo -H pip install requests
        sudo -H pip install robotframework-requests
        sudo -H pip install demjson
        sudo -H pip install pexpect
        sudo -H apt-get install expect
        sudo -H apt-get install lftp

    - name: Build Gptn
      run: |
          cd $HOME
          mkdir gopath
          cd gopath
          export GOPATH=$pwd
          mkdir -p src/github.com/palletone
          cd src/github.com/palletone
          git clone -b ${GITHUB_REF##*/} https://github.com/palletone/go-palletone.git
          cd go-palletone
          sudo mkdir -p /home/runner/go/src/github.com/palletone/go-palletone
          sudo cp -r * /home/runner/go/src/github.com/palletone/go-palletone/
          go build -mod=vendor ./cmd/gptn
          docker images
          gptnVersion=`./gptn version|grep ^Version|awk '{print $2}'|awk -F '-' '{print $1}'`
          cat /proc/sys/net/ipv4/ip_forward
          sudo ./jurySec.sh
          sudo cat /etc/docker/daemon.json
          cd ./cmd/deployment
          chmod +x ./deploy.sh
          chmod +x ./start.sh
          chmod +x editConfig.sh
          docker network create gptn-net
          docker pull palletone/goimg
          docker tag palletone/goimg palletone/goimg:$gptnVersion
          docker network ls
          docker images
          ./deploy.sh 3 3
          ./editConfig.sh 3 3
          ./start.sh 3
          sleep 30
          cd ../../
          python -m robot.run -d ./bdd/logs/testshimuc1 -i testshimuc1 ./bdd/UserContract/Testcases

    - name: Upload to Ftp
      if: always()
      run: |
          killall -9 gptn
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          zip -j bdd/logs/uc3-3_reports_testshimuc1.zip bdd/logs/testshimuc1/*
          zip -r -l -o bdd/logs/uc3-3_logs_testshimuc1.zip cmd/deployment/node1/log cmd/deployment/node1/nohup.out cmd/deployment/node2/log cmd/deployment/node2/nohup.out cmd/deployment/node3/log cmd/deployment/node3/nohup.out
          cd bdd
          chmod +x ./upload2Ftp.sh 
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "Actions-"${GITHUB_REF##*/} ${GITHUB_SHA} $PWD/logs

    - name: Upload
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: testshimuc1Logs
        path: /home/runner/gopath/src/github.com/palletone/go-palletone/bdd/logs

  job3:
    name: traceBDD
    runs-on: ubuntu-latest
    steps:

    - name: Install
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install robotframework==2.8.5
        sudo -H pip install requests
        sudo -H pip install robotframework-requests
        sudo -H pip install demjson
        sudo -H pip install pexpect
        sudo -H apt-get install expect
        sudo -H apt-get install lftp

    - name: Build Gptn
      run: |
          cd $HOME
          mkdir gopath
          cd gopath
          export GOPATH=$pwd
          mkdir -p src/github.com/palletone
          cd src/github.com/palletone
          git clone -b ${GITHUB_REF##*/} https://github.com/palletone/go-palletone.git
          cd go-palletone
          sudo mkdir -p /home/runner/go/src/github.com/palletone/go-palletone
          sudo cp -r * /home/runner/go/src/github.com/palletone/go-palletone/
          go build -mod=vendor ./cmd/gptn
          docker images
          gptnVersion=`./gptn version|grep ^Version|awk '{print $2}'|awk -F '-' '{print $1}'`
          cat /proc/sys/net/ipv4/ip_forward
          sudo ./jurySec.sh
          sudo cat /etc/docker/daemon.json
          cd ./cmd/deployment
          chmod +x ./deploy.sh
          chmod +x ./start.sh
          chmod +x editConfig.sh
          docker network create gptn-net
          docker pull palletone/goimg
          docker tag palletone/goimg palletone/goimg:$gptnVersion
          docker network ls
          docker images
          ./deploy.sh 3 3
          ./editConfig.sh 3 3
          ./start.sh 3
          sleep 30
          cd ../../
          python -m robot.run -d ./bdd/logs/trace -i trace ./bdd/UserContract/Testcases

    - name: Upload to Ftp
      if: always()
      run: |
          killall -9 gptn
          cd $HOME/gopath/src/github.com/palletone/go-palletone
          zip -j bdd/logs/uc3-3_reports_tract.zip bdd/logs/trace/*
          zip -r -l -o bdd/logs/uc3-3_logs_trace.zip cmd/deployment/node1/log cmd/deployment/node1/nohup.out cmd/deployment/node2/log cmd/deployment/node2/nohup.out cmd/deployment/node3/log cmd/deployment/node3/nohup.out
          cd bdd
          chmod +x ./upload2Ftp.sh 
          ./upload2Ftp.sh ${{secrets.FTP_PWD}} "Actions-"${GITHUB_REF##*/} ${GITHUB_SHA} $PWD/logs

    - name: Upload
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: traceLogs
        path: /home/runner/gopath/src/github.com/palletone/go-palletone/bdd/logs
