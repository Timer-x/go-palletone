<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20191120 21:53:58.022" generator="Robot 2.8.5 (Python 2.7.12 on linux2)">
<suite source="/home/zhichunqi/gowork/src/github.com/palletone/go-palletone/bdd/dct/deposit_test_cases/DepositContractTest.robot" id="s1" name="DepositContractTest">
<test id="s1-t1" name="Business_01">
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.138" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:53:58.138" starttime="20191120 21:53:58.138"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:53:58.139" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:53:58.139" starttime="20191120 21:53:58.139"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:53:58.139" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:53:58.139" starttime="20191120 21:53:58.139"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.140" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:53:58.140" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.140" starttime="20191120 21:53:58.140"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.143" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:53:58.144" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.144" starttime="20191120 21:53:58.140"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.144" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20191120 21:53:58.144" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:53:58.144" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20191120 21:53:58.144" starttime="20191120 21:53:58.144"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:53:58.145" starttime="20191120 21:53:58.145"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:53:58.146" level="INFO">${res} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:53:58.145" starttime="20191120 21:53:58.145"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.146" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:53:58.146" starttime="20191120 21:53:58.146"></status>
</kw>
<msg timestamp="20191120 21:53:58.146" level="INFO">${result} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:53:58.146" starttime="20191120 21:53:58.138"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.146" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:53:58.146" starttime="20191120 21:53:58.146"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.147" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:53:58.147" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:53:58.147" starttime="20191120 21:53:58.147"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.148" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:53:58.148" starttime="20191120 21:53:58.147"></status>
</kw>
<msg timestamp="20191120 21:53:58.148" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:53:58.148" starttime="20191120 21:53:58.137"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.148" level="INFO">10000</msg>
<status status="PASS" endtime="20191120 21:53:58.148" starttime="20191120 21:53:58.148"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>10000</arg>
</arguments>
<msg timestamp="20191120 21:53:58.149" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.149" starttime="20191120 21:53:58.149"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.150" level="INFO">${two} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM']</msg>
<status status="PASS" endtime="20191120 21:53:58.150" starttime="20191120 21:53:58.150"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:53:58.151" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:53:58.151" starttime="20191120 21:53:58.151"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:53:58.152" level="INFO">${data} = {'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:53:58.152" starttime="20191120 21:53:58.152"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.152" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:53:58.153" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.153" starttime="20191120 21:53:58.152"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.155" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:53:58.155" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.155" starttime="20191120 21:53:58.153"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.156" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{}}
 </msg>
<msg timestamp="20191120 21:53:58.156" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:53:58.156" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {}}</msg>
<status status="PASS" endtime="20191120 21:53:58.156" starttime="20191120 21:53:58.156"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:53:58.156" starttime="20191120 21:53:58.156"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:53:58.157" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:53:58.157" starttime="20191120 21:53:58.157"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.157" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:53:58.157" starttime="20191120 21:53:58.157"></status>
</kw>
<msg timestamp="20191120 21:53:58.158" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:53:58.157" starttime="20191120 21:53:58.151"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.158" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:53:58.158" starttime="20191120 21:53:58.158"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.158" level="INFO">Length is 0</msg>
<msg timestamp="20191120 21:53:58.158" level="INFO">${len} = 0</msg>
<status status="PASS" endtime="20191120 21:53:58.158" starttime="20191120 21:53:58.158"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.159" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20191120 21:53:58.159" starttime="20191120 21:53:58.159"></status>
</kw>
<msg timestamp="20191120 21:53:58.159" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20191120 21:53:58.159" starttime="20191120 21:53:58.149"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.160" level="INFO">0</msg>
<status status="PASS" endtime="20191120 21:53:58.160" starttime="20191120 21:53:58.159"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191120 21:53:58.160" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.160" starttime="20191120 21:53:58.160"></status>
</kw>
<kw type="kw" name="${result} = applyBecomeMediatorParams.applyBecomeMediator">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>${m1_pubkey}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyBecomeMediator</arg>
<arg>{\"applyInfo\":\"xxx...\",\"account\":\"${mediatorAddr}\",\"initPubKey\":\"2SvBCoCHWA8Zg2Q8v2onmaTeZj6YmWLbp6mzoCZeDwiUcmuqFwd8fZXCfdmEhTodbWaSJ8T7MvjQiZkn4S9VTQnKDrEkETt84Sr58vmjVdhdXNjjzqn8j6oHzvduxGo4UjWB66wd1GFXKoz5XD8hcPDzCyGVqZLjb7wu2pkJxeG1Mt3\",\"node\":\"pnode://4bdc1c533f6e3700a0a6cc346bf2364eace58a10d8a782762c8d2b27cf4d96c25827c82a15684d348e88722b259f31abcccd4d0eaae0f52eeb85e1eb5342b862@127.0.0.1:30303\",\"public_key\":\"${pubkey}\"}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.162" level="INFO">${one} = [u'ApplyBecomeMediator', u'{"applyInfo":"xxx...","account":"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS","initPubKey":"2SvBCoCHWA8Zg2Q8v2onmaTeZj6YmWLbp6mzoCZeDwiUcmuqFwd8fZXCfdmEhTodbWaSJ8T7MvjQiZkn4S9VTQnKD...</msg>
<status status="PASS" endtime="20191120 21:53:58.162" starttime="20191120 21:53:58.161"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.163" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'0', u'1', [u'ApplyBecomeMediator', u'{"applyInfo":"xxx...","account":"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS","initPubKe...</msg>
<status status="PASS" endtime="20191120 21:53:58.162" starttime="20191120 21:53:58.162"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyBecomeMediator</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:53:58.164" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:53:58.164" starttime="20191120 21:53:58.164"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:53:58.164" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'0', u'1', [u'ApplyBecomeMediator', u'{"applyInfo":"xxx...","account":"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"...</msg>
<status status="PASS" endtime="20191120 21:53:58.164" starttime="20191120 21:53:58.164"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.165" level="INFO">Creating Session using : alias=ApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:53:58.165" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.165" starttime="20191120 21:53:58.165"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.169" level="INFO">Post Request using : alias=ApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "0", "1", ["ApplyBecomeMediator", "{\"applyInfo\":\"xxx...\",\"account\":\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\",\"initPubKey\":\"2SvBCoCHWA8Zg2Q8v2onmaTeZj6YmWLbp6mzoCZeDwiUcmuqFwd8fZXCfdmEhTodbWaSJ8T7MvjQiZkn4S9VTQnKDrEkETt84Sr58vmjVdhdXNjjzqn8j6oHzvduxGo4UjWB66wd1GFXKoz5XD8hcPDzCyGVqZLjb7wu2pkJxeG1Mt3\",\"node\":\"pnode://4bdc1c533f6e3700a0a6cc346bf2364eace58a10d8a782762c8d2b27cf4d96c25827c82a15684d348e88722b259f31abcccd4d0eaae0f52eeb85e1eb5342b862@127.0.0.1:30303\",\"public_key\":\"02d5d955ab78a00878ceab2e892f5e274a6dcdf848b40a78f2a2b7163e20f035b0\"}"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:53:58.169" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:53:58.169" starttime="20191120 21:53:58.165"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.170" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d"}
 </msg>
<msg timestamp="20191120 21:53:58.170" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:53:58.170" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d'}</msg>
<status status="PASS" endtime="20191120 21:53:58.170" starttime="20191120 21:53:58.169"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:53:58.171" starttime="20191120 21:53:58.170"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:53:58.171" level="INFO">${res} = 25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d</msg>
<status status="PASS" endtime="20191120 21:53:58.171" starttime="20191120 21:53:58.171"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:53:58.172" level="INFO">25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d</msg>
<status status="PASS" endtime="20191120 21:53:58.172" starttime="20191120 21:53:58.171"></status>
</kw>
<msg timestamp="20191120 21:53:58.172" level="INFO">${result} = 25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d</msg>
<status status="PASS" endtime="20191120 21:53:58.172" starttime="20191120 21:53:58.163"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:04.173" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:04.173" starttime="20191120 21:53:58.172"></status>
</kw>
<msg timestamp="20191120 21:54:04.174" level="INFO">${result} = 25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d</msg>
<status status="PASS" endtime="20191120 21:54:04.174" starttime="20191120 21:53:58.161"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.175" level="INFO">25447f1c5774151ce2780714cdeb5697c472c6ef9c9502127e30cae47b75e15d</msg>
<status status="PASS" endtime="20191120 21:54:04.175" starttime="20191120 21:54:04.175"></status>
</kw>
<kw type="kw" name="${addressMap1} = getBecomeMediatorApplyListParams.getBecomeMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<msg timestamp="20191120 21:54:04.178" level="INFO">${one} = [u'GetBecomeMediatorApplyList']</msg>
<status status="PASS" endtime="20191120 21:54:04.178" starttime="20191120 21:54:04.178"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.180" level="INFO">${two} = [[u'GetBecomeMediatorApplyList']]</msg>
<status status="PASS" endtime="20191120 21:54:04.180" starttime="20191120 21:54:04.179"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:04.184" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:04.184" starttime="20191120 21:54:04.183"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:04.185" level="INFO">${data} = {'params': [[u'GetBecomeMediatorApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:04.185" starttime="20191120 21:54:04.184"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.186" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:04.187" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:04.187" starttime="20191120 21:54:04.186"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.197" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetBecomeMediatorApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:04.197" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:04.197" starttime="20191120 21:54:04.188"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.198" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true}"}
 </msg>
<msg timestamp="20191120 21:54:04.198" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:04.198" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}'}</msg>
<status status="PASS" endtime="20191120 21:54:04.198" starttime="20191120 21:54:04.197"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:04.199" starttime="20191120 21:54:04.198"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:04.199" level="INFO">${res} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:04.199" starttime="20191120 21:54:04.199"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.200" level="INFO">{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:04.200" starttime="20191120 21:54:04.199"></status>
</kw>
<msg timestamp="20191120 21:54:04.200" level="INFO">${result} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:04.200" starttime="20191120 21:54:04.180"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.200" level="INFO">To JSON using : content={"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true} </msg>
<msg timestamp="20191120 21:54:04.200" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:04.200" level="INFO">${addressMap} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:04.200" starttime="20191120 21:54:04.200"></status>
</kw>
<msg timestamp="20191120 21:54:04.201" level="INFO">${addressMap1} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:04.201" starttime="20191120 21:54:04.176"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap1}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.201" level="INFO">{u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:04.201" starttime="20191120 21:54:04.201"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap1}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:04.202" starttime="20191120 21:54:04.202"></status>
</kw>
<kw type="kw" name="${result} = handleForApplyBecomeMediatorParams.handleForApplyBecomeMediator">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr_01}</arg>
<arg>Ok</arg>
</arguments>
<kw type="kw" name="${基金会处理申请所需参数 } = handleForApplyBecomeMediatorParams.基金会处理申请所需参数">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForApplyBecomeMediator</arg>
<arg>${mediatorAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.206" level="INFO">${one} = [u'HandleForApplyBecomeMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']</msg>
<status status="PASS" endtime="20191120 21:54:04.206" starttime="20191120 21:54:04.205"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.206" level="INFO">${two} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'0', u'1', [u'HandleForApplyBecomeMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:04.206" starttime="20191120 21:54:04.206"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${two}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.207" level="INFO">[u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'0', u'1', [u'HandleForApplyBecomeMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:04.207" starttime="20191120 21:54:04.207"></status>
</kw>
<msg timestamp="20191120 21:54:04.207" level="INFO">${基金会处理申请所需参数 } = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'0', u'1', [u'HandleForApplyBecomeMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:04.207" starttime="20191120 21:54:04.204"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyBecomeMediator</arg>
<arg>${基金会处理申请所需参数 }</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:04.208" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:04.208" starttime="20191120 21:54:04.208"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:04.209" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'0', u'1', [u'HandleForApplyBecomeMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']], 'jsonrpc': u'...</msg>
<status status="PASS" endtime="20191120 21:54:04.209" starttime="20191120 21:54:04.208"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.209" level="INFO">Creating Session using : alias=HandleForApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:04.209" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:04.210" starttime="20191120 21:54:04.209"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.214" level="INFO">Post Request using : alias=HandleForApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"params": ["P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "0", "1", ["HandleForApplyBecomeMediator", "P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "Ok"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:04.214" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:04.214" starttime="20191120 21:54:04.210"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.215" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53"}
 </msg>
<msg timestamp="20191120 21:54:04.215" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:04.215" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53'}</msg>
<status status="PASS" endtime="20191120 21:54:04.215" starttime="20191120 21:54:04.215"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:04.216" starttime="20191120 21:54:04.216"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:04.217" level="INFO">${res} = 520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53</msg>
<status status="PASS" endtime="20191120 21:54:04.216" starttime="20191120 21:54:04.216"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:04.217" level="INFO">520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53</msg>
<status status="PASS" endtime="20191120 21:54:04.217" starttime="20191120 21:54:04.217"></status>
</kw>
<msg timestamp="20191120 21:54:04.217" level="INFO">${result} = 520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53</msg>
<status status="PASS" endtime="20191120 21:54:04.217" starttime="20191120 21:54:04.207"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:10.220" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:10.220" starttime="20191120 21:54:04.218"></status>
</kw>
<msg timestamp="20191120 21:54:10.222" level="INFO">${result} = 520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53</msg>
<status status="PASS" endtime="20191120 21:54:10.221" starttime="20191120 21:54:04.203"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.224" level="INFO">520e59b813fe970b2df93d0d5e880cf970a7a3077cdafda403294c30ee36ba53</msg>
<status status="PASS" endtime="20191120 21:54:10.224" starttime="20191120 21:54:10.223"></status>
</kw>
<kw type="kw" name="${addressMap2} = getAgreeForBecomeMediatorListParams.getAgreeForBecomeMediatorList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<msg timestamp="20191120 21:54:10.229" level="INFO">${one} = [u'GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" endtime="20191120 21:54:10.229" starttime="20191120 21:54:10.228"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.231" level="INFO">${two} = [[u'GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" endtime="20191120 21:54:10.231" starttime="20191120 21:54:10.230"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:10.236" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:10.236" starttime="20191120 21:54:10.235"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:10.238" level="INFO">${data} = {'params': [[u'GetAgreeForBecomeMediatorList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:10.238" starttime="20191120 21:54:10.237"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.240" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:10.241" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:10.241" starttime="20191120 21:54:10.239"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.256" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"params": [["GetAgreeForBecomeMediatorList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:10.256" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:10.256" starttime="20191120 21:54:10.242"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.257" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true}"}
 </msg>
<msg timestamp="20191120 21:54:10.257" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:10.257" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}'}</msg>
<status status="PASS" endtime="20191120 21:54:10.257" starttime="20191120 21:54:10.256"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:10.258" starttime="20191120 21:54:10.258"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:10.259" level="INFO">${res} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:10.259" starttime="20191120 21:54:10.259"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.260" level="INFO">{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:10.260" starttime="20191120 21:54:10.259"></status>
</kw>
<msg timestamp="20191120 21:54:10.260" level="INFO">${result} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:10.260" starttime="20191120 21:54:10.232"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.261" level="INFO">To JSON using : content={"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true} </msg>
<msg timestamp="20191120 21:54:10.261" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:10.261" level="INFO">${addressMap} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:10.261" starttime="20191120 21:54:10.260"></status>
</kw>
<msg timestamp="20191120 21:54:10.261" level="INFO">${addressMap2} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:10.261" starttime="20191120 21:54:10.226"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap2}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.262" level="INFO">{u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:10.262" starttime="20191120 21:54:10.261"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap2}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:10.263" starttime="20191120 21:54:10.262"></status>
</kw>
<kw type="kw" name="${result} = mediatorPayToDepositContractParams.mediatorPayToDepositContract">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>30</arg>
</arguments>
<kw type="kw" name="${Mediator交付保证金所需参数} = mediatorPayToDepositContractParams.Mediator交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<msg timestamp="20191120 21:54:10.265" level="INFO">${one} = [u'MediatorPayToDepositContract']</msg>
<status status="PASS" endtime="20191120 21:54:10.265" starttime="20191120 21:54:10.265"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.266" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'30', u'1', [u'MediatorPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:54:10.266" starttime="20191120 21:54:10.265"></status>
</kw>
<msg timestamp="20191120 21:54:10.266" level="INFO">${Mediator交付保证金所需参数} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'30', u'1', [u'MediatorPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:54:10.266" starttime="20191120 21:54:10.264"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:10.267" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:10.267" starttime="20191120 21:54:10.267"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:10.267" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'30', u'1', [u'MediatorPayToDepositContract']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvo...</msg>
<status status="PASS" endtime="20191120 21:54:10.267" starttime="20191120 21:54:10.267"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.268" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:10.268" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:10.268" starttime="20191120 21:54:10.268"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.272" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "30", "1", ["MediatorPayToDepositContract"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:10.272" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:10.272" starttime="20191120 21:54:10.268"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.273" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"d455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83"}
 </msg>
<msg timestamp="20191120 21:54:10.273" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:10.273" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'd455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83'}</msg>
<status status="PASS" endtime="20191120 21:54:10.273" starttime="20191120 21:54:10.272"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:10.274" starttime="20191120 21:54:10.274"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:10.275" level="INFO">${res} = d455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83</msg>
<status status="PASS" endtime="20191120 21:54:10.275" starttime="20191120 21:54:10.275"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:10.275" level="INFO">d455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83</msg>
<status status="PASS" endtime="20191120 21:54:10.275" starttime="20191120 21:54:10.275"></status>
</kw>
<msg timestamp="20191120 21:54:10.276" level="INFO">${result} = d455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83</msg>
<status status="PASS" endtime="20191120 21:54:10.275" starttime="20191120 21:54:10.266"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:16.277" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:16.277" starttime="20191120 21:54:10.276"></status>
</kw>
<msg timestamp="20191120 21:54:16.277" level="INFO">${result} = d455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83</msg>
<status status="PASS" endtime="20191120 21:54:16.277" starttime="20191120 21:54:10.263"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.278" level="INFO">d455f4750d3619cf0c8c14743e48d30cbe437cbbb86c0cbe1061a25a3dd68f83</msg>
<status status="PASS" endtime="20191120 21:54:16.278" starttime="20191120 21:54:16.278"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.279" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:54:16.279" starttime="20191120 21:54:16.279"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:16.281" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:16.281" starttime="20191120 21:54:16.281"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:16.281" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:16.281" starttime="20191120 21:54:16.281"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.282" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:16.282" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.282" starttime="20191120 21:54:16.282"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.285" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:16.285" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.285" starttime="20191120 21:54:16.283"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.286" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"9998"}}
 </msg>
<msg timestamp="20191120 21:54:16.286" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:16.286" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'9998'}}</msg>
<status status="PASS" endtime="20191120 21:54:16.286" starttime="20191120 21:54:16.285"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:16.286" starttime="20191120 21:54:16.286"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:16.287" level="INFO">${res} = {u'PTN': u'9998'}</msg>
<status status="PASS" endtime="20191120 21:54:16.287" starttime="20191120 21:54:16.287"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.287" level="INFO">{u'PTN': u'9998'}</msg>
<status status="PASS" endtime="20191120 21:54:16.287" starttime="20191120 21:54:16.287"></status>
</kw>
<msg timestamp="20191120 21:54:16.288" level="INFO">${result} = {u'PTN': u'9998'}</msg>
<status status="PASS" endtime="20191120 21:54:16.287" starttime="20191120 21:54:16.280"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.288" level="INFO">{u'PTN': u'9998'}</msg>
<status status="PASS" endtime="20191120 21:54:16.288" starttime="20191120 21:54:16.288"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.288" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:54:16.288" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:54:16.288" starttime="20191120 21:54:16.288"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.289" level="INFO">${amount} = 9998</msg>
<status status="PASS" endtime="20191120 21:54:16.289" starttime="20191120 21:54:16.289"></status>
</kw>
<msg timestamp="20191120 21:54:16.289" level="INFO">${amount} = 9998</msg>
<status status="PASS" endtime="20191120 21:54:16.289" starttime="20191120 21:54:16.278"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.290" level="INFO">9998</msg>
<status status="PASS" endtime="20191120 21:54:16.290" starttime="20191120 21:54:16.290"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>9998</arg>
</arguments>
<msg timestamp="20191120 21:54:16.291" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.291" starttime="20191120 21:54:16.291"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.292" level="INFO">${two} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM']</msg>
<status status="PASS" endtime="20191120 21:54:16.292" starttime="20191120 21:54:16.292"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:16.294" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:16.294" starttime="20191120 21:54:16.293"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:16.294" level="INFO">${data} = {'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:16.294" starttime="20191120 21:54:16.294"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.295" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:16.295" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.295" starttime="20191120 21:54:16.294"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.299" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:16.299" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.299" starttime="20191120 21:54:16.295"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.299" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{}}
 </msg>
<msg timestamp="20191120 21:54:16.299" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:16.300" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {}}</msg>
<status status="PASS" endtime="20191120 21:54:16.299" starttime="20191120 21:54:16.299"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:16.300" starttime="20191120 21:54:16.300"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:16.300" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:54:16.300" starttime="20191120 21:54:16.300"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.301" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:16.301" starttime="20191120 21:54:16.301"></status>
</kw>
<msg timestamp="20191120 21:54:16.301" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:54:16.301" starttime="20191120 21:54:16.293"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.301" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:16.301" starttime="20191120 21:54:16.301"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.302" level="INFO">Length is 0</msg>
<msg timestamp="20191120 21:54:16.302" level="INFO">${len} = 0</msg>
<status status="PASS" endtime="20191120 21:54:16.302" starttime="20191120 21:54:16.302"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.302" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20191120 21:54:16.302" starttime="20191120 21:54:16.302"></status>
</kw>
<msg timestamp="20191120 21:54:16.303" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20191120 21:54:16.303" starttime="20191120 21:54:16.291"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.303" level="INFO">0</msg>
<status status="PASS" endtime="20191120 21:54:16.303" starttime="20191120 21:54:16.303"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191120 21:54:16.304" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.304" starttime="20191120 21:54:16.304"></status>
</kw>
<kw type="kw" name="${addressMap3} = getListForMediatorCandidateParams.getListForMediatorCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:16.306" level="INFO">${one} = [u'GetListForMediatorCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:16.305" starttime="20191120 21:54:16.305"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.306" level="INFO">${two} = [[u'GetListForMediatorCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:16.306" starttime="20191120 21:54:16.306"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:16.308" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:16.307" starttime="20191120 21:54:16.307"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:16.308" level="INFO">${data} = {'params': [[u'GetListForMediatorCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:16.308" starttime="20191120 21:54:16.308"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.309" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:16.309" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.309" starttime="20191120 21:54:16.308"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.314" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForMediatorCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:16.314" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.314" starttime="20191120 21:54:16.309"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.315" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:16.315" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:16.315" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:54:16.315" starttime="20191120 21:54:16.314"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:16.315" starttime="20191120 21:54:16.315"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:16.316" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:54:16.316" starttime="20191120 21:54:16.316"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.316" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:16.316" starttime="20191120 21:54:16.316"></status>
</kw>
<msg timestamp="20191120 21:54:16.316" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:54:16.316" starttime="20191120 21:54:16.307"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.317" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:16.317" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:16.317" level="INFO">${addressMap} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:54:16.317" starttime="20191120 21:54:16.317"></status>
</kw>
<msg timestamp="20191120 21:54:16.317" level="INFO">${addressMap3} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:54:16.317" starttime="20191120 21:54:16.305"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap3}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.318" level="INFO">{u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True}</msg>
<status status="PASS" endtime="20191120 21:54:16.318" starttime="20191120 21:54:16.318"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${addressMap3}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:16.319" starttime="20191120 21:54:16.318"></status>
</kw>
<kw type="kw" name="${result} = mediatorPayToDepositContractParams.mediatorPayToDepositContract">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>${medDepositAmount}</arg>
</arguments>
<kw type="kw" name="${Mediator交付保证金所需参数} = mediatorPayToDepositContractParams.Mediator交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<msg timestamp="20191120 21:54:16.321" level="INFO">${one} = [u'MediatorPayToDepositContract']</msg>
<status status="PASS" endtime="20191120 21:54:16.321" starttime="20191120 21:54:16.320"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.321" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'50', u'1', [u'MediatorPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:54:16.321" starttime="20191120 21:54:16.321"></status>
</kw>
<msg timestamp="20191120 21:54:16.322" level="INFO">${Mediator交付保证金所需参数} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'50', u'1', [u'MediatorPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:54:16.322" starttime="20191120 21:54:16.320"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:16.323" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:16.323" starttime="20191120 21:54:16.323"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:16.324" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'50', u'1', [u'MediatorPayToDepositContract']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvo...</msg>
<status status="PASS" endtime="20191120 21:54:16.323" starttime="20191120 21:54:16.323"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.324" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:16.324" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.324" starttime="20191120 21:54:16.324"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.329" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "50", "1", ["MediatorPayToDepositContract"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:16.330" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:16.330" starttime="20191120 21:54:16.325"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.331" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9"}
 </msg>
<msg timestamp="20191120 21:54:16.331" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:16.331" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9'}</msg>
<status status="PASS" endtime="20191120 21:54:16.331" starttime="20191120 21:54:16.330"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:16.332" starttime="20191120 21:54:16.332"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:16.332" level="INFO">${res} = 2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9</msg>
<status status="PASS" endtime="20191120 21:54:16.332" starttime="20191120 21:54:16.332"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:16.333" level="INFO">2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9</msg>
<status status="PASS" endtime="20191120 21:54:16.333" starttime="20191120 21:54:16.333"></status>
</kw>
<msg timestamp="20191120 21:54:16.333" level="INFO">${result} = 2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9</msg>
<status status="PASS" endtime="20191120 21:54:16.333" starttime="20191120 21:54:16.322"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:22.334" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:22.335" starttime="20191120 21:54:16.333"></status>
</kw>
<msg timestamp="20191120 21:54:22.336" level="INFO">${result} = 2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9</msg>
<status status="PASS" endtime="20191120 21:54:22.336" starttime="20191120 21:54:16.319"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.339" level="INFO">2d63bf7ac57f607907a0005af28f34a9f39bff710e19b3bd4c505f799a1a99c9</msg>
<status status="PASS" endtime="20191120 21:54:22.339" starttime="20191120 21:54:22.338"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.345" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:54:22.345" starttime="20191120 21:54:22.344"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.350" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.350" starttime="20191120 21:54:22.349"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.353" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:22.352" starttime="20191120 21:54:22.351"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.355" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.356" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.356" starttime="20191120 21:54:22.354"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.368" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.369" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.369" starttime="20191120 21:54:22.358"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.372" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"9947"}}
 </msg>
<msg timestamp="20191120 21:54:22.372" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.373" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'9947'}}</msg>
<status status="PASS" endtime="20191120 21:54:22.373" starttime="20191120 21:54:22.371"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.374" starttime="20191120 21:54:22.374"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.375" level="INFO">${res} = {u'PTN': u'9947'}</msg>
<status status="PASS" endtime="20191120 21:54:22.375" starttime="20191120 21:54:22.374"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.375" level="INFO">{u'PTN': u'9947'}</msg>
<status status="PASS" endtime="20191120 21:54:22.375" starttime="20191120 21:54:22.375"></status>
</kw>
<msg timestamp="20191120 21:54:22.375" level="INFO">${result} = {u'PTN': u'9947'}</msg>
<status status="PASS" endtime="20191120 21:54:22.375" starttime="20191120 21:54:22.346"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.376" level="INFO">{u'PTN': u'9947'}</msg>
<status status="PASS" endtime="20191120 21:54:22.376" starttime="20191120 21:54:22.376"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.376" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:54:22.376" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:54:22.376" starttime="20191120 21:54:22.376"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.378" level="INFO">${amount} = 9947</msg>
<status status="PASS" endtime="20191120 21:54:22.377" starttime="20191120 21:54:22.377"></status>
</kw>
<msg timestamp="20191120 21:54:22.378" level="INFO">${amount} = 9947</msg>
<status status="PASS" endtime="20191120 21:54:22.378" starttime="20191120 21:54:22.340"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.378" level="INFO">9947</msg>
<status status="PASS" endtime="20191120 21:54:22.378" starttime="20191120 21:54:22.378"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>9947</arg>
</arguments>
<msg timestamp="20191120 21:54:22.379" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.379" starttime="20191120 21:54:22.379"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.380" level="INFO">${two} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM']</msg>
<status status="PASS" endtime="20191120 21:54:22.380" starttime="20191120 21:54:22.380"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.381" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.381" starttime="20191120 21:54:22.381"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.382" level="INFO">${data} = {'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:22.382" starttime="20191120 21:54:22.382"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.382" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.383" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.383" starttime="20191120 21:54:22.382"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.386" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.386" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.386" starttime="20191120 21:54:22.383"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.387" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"50"}}
 </msg>
<msg timestamp="20191120 21:54:22.387" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.387" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'50'}}</msg>
<status status="PASS" endtime="20191120 21:54:22.387" starttime="20191120 21:54:22.386"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.387" starttime="20191120 21:54:22.387"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.388" level="INFO">${res} = {u'PTN': u'50'}</msg>
<status status="PASS" endtime="20191120 21:54:22.388" starttime="20191120 21:54:22.387"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.388" level="INFO">{u'PTN': u'50'}</msg>
<status status="PASS" endtime="20191120 21:54:22.388" starttime="20191120 21:54:22.388"></status>
</kw>
<msg timestamp="20191120 21:54:22.388" level="INFO">${result} = {u'PTN': u'50'}</msg>
<status status="PASS" endtime="20191120 21:54:22.388" starttime="20191120 21:54:22.381"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.389" level="INFO">{u'PTN': u'50'}</msg>
<status status="PASS" endtime="20191120 21:54:22.389" starttime="20191120 21:54:22.388"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.389" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:54:22.389" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:54:22.389" starttime="20191120 21:54:22.389"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.390" level="INFO">${amount} = 50</msg>
<status status="PASS" endtime="20191120 21:54:22.390" starttime="20191120 21:54:22.389"></status>
</kw>
<msg timestamp="20191120 21:54:22.391" level="INFO">${amount} = 50</msg>
<status status="PASS" endtime="20191120 21:54:22.391" starttime="20191120 21:54:22.379"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.392" level="INFO">50</msg>
<status status="PASS" endtime="20191120 21:54:22.392" starttime="20191120 21:54:22.391"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>50</arg>
</arguments>
<msg timestamp="20191120 21:54:22.393" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.393" starttime="20191120 21:54:22.392"></status>
</kw>
<kw type="kw" name="${addressMap3} = getListForMediatorCandidateParams.getListForMediatorCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:22.394" level="INFO">${one} = [u'GetListForMediatorCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:22.394" starttime="20191120 21:54:22.394"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.394" level="INFO">${two} = [[u'GetListForMediatorCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:22.394" starttime="20191120 21:54:22.394"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.396" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.395" starttime="20191120 21:54:22.395"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.396" level="INFO">${data} = {'params': [[u'GetListForMediatorCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:22.396" starttime="20191120 21:54:22.396"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.397" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.397" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.397" starttime="20191120 21:54:22.396"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.402" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForMediatorCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.402" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.402" starttime="20191120 21:54:22.397"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.403" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:22.403" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.403" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKVi...</msg>
<status status="PASS" endtime="20191120 21:54:22.403" starttime="20191120 21:54:22.402"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.403" starttime="20191120 21:54:22.403"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.404" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vv...</msg>
<status status="PASS" endtime="20191120 21:54:22.404" starttime="20191120 21:54:22.404"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.404" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:22.404" starttime="20191120 21:54:22.404"></status>
</kw>
<msg timestamp="20191120 21:54:22.405" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vv...</msg>
<status status="PASS" endtime="20191120 21:54:22.404" starttime="20191120 21:54:22.395"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.405" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:22.405" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.405" level="INFO">${addressMap} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3...</msg>
<status status="PASS" endtime="20191120 21:54:22.405" starttime="20191120 21:54:22.405"></status>
</kw>
<msg timestamp="20191120 21:54:22.405" level="INFO">${addressMap3} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3...</msg>
<status status="PASS" endtime="20191120 21:54:22.405" starttime="20191120 21:54:22.393"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap3}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.406" level="INFO">{u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True}</msg>
<status status="PASS" endtime="20191120 21:54:22.406" starttime="20191120 21:54:22.406"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap3}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.407" starttime="20191120 21:54:22.407"></status>
</kw>
<kw type="kw" name="${resul} = getListForJuryCandidateParams.getListForJuryCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:22.409" level="INFO">${one} = [u'GetListForJuryCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:22.409" starttime="20191120 21:54:22.408"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.409" level="INFO">${two} = [[u'GetListForJuryCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:22.409" starttime="20191120 21:54:22.409"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.411" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.411" starttime="20191120 21:54:22.410"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.411" level="INFO">${data} = {'params': [[u'GetListForJuryCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:22.411" starttime="20191120 21:54:22.411"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.412" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.412" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.412" starttime="20191120 21:54:22.412"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.417" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForJuryCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.417" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.417" starttime="20191120 21:54:22.413"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.418" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:22.418" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.418" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKVi...</msg>
<status status="PASS" endtime="20191120 21:54:22.418" starttime="20191120 21:54:22.418"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.419" starttime="20191120 21:54:22.418"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.419" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vv...</msg>
<status status="PASS" endtime="20191120 21:54:22.419" starttime="20191120 21:54:22.419"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.419" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:22.419" starttime="20191120 21:54:22.419"></status>
</kw>
<msg timestamp="20191120 21:54:22.420" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vv...</msg>
<status status="PASS" endtime="20191120 21:54:22.420" starttime="20191120 21:54:22.409"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.420" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:22.420" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.420" level="INFO">${addressMap} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3...</msg>
<status status="PASS" endtime="20191120 21:54:22.420" starttime="20191120 21:54:22.420"></status>
</kw>
<msg timestamp="20191120 21:54:22.420" level="INFO">${resul} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3...</msg>
<status status="PASS" endtime="20191120 21:54:22.420" starttime="20191120 21:54:22.408"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${resul}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.421" starttime="20191120 21:54:22.421"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.422" level="INFO">{u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True}</msg>
<status status="PASS" endtime="20191120 21:54:22.422" starttime="20191120 21:54:22.421"></status>
</kw>
<kw type="kw" name="${mDeposit} = getMediatorDepositWithAddrParams.getMediatorDepositWithAddr">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<kw type="kw" name="${11} = getMediatorDepositWithAddrParams.获取某个节点的账户">
<doc></doc>
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetMediatorDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.425" level="INFO">${one} = [u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:54:22.425" starttime="20191120 21:54:22.425"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.426" level="INFO">${two} = [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']]</msg>
<status status="PASS" endtime="20191120 21:54:22.426" starttime="20191120 21:54:22.426"></status>
</kw>
<msg timestamp="20191120 21:54:22.426" level="INFO">${11} = [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']]</msg>
<status status="PASS" endtime="20191120 21:54:22.426" starttime="20191120 21:54:22.423"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetMediatorDeposit</arg>
<arg>${11}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.427" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.427" starttime="20191120 21:54:22.427"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.428" level="INFO">${data} = {'params': [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:22.428" starttime="20191120 21:54:22.428"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.428" level="INFO">Creating Session using : alias=GetMediatorDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.429" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.429" starttime="20191120 21:54:22.428"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.435" level="INFO">Post Request using : alias=GetMediatorDeposit, uri=http://127.0.0.1:8545, data={"params": [["GetMediatorDeposit", "P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.435" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.435" starttime="20191120 21:54:22.429"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.435" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"apply_enter_time\":\"2019-11-20 13:53:30 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"2019-11-20 13:54:00 UTC\",\"balance\":\"50\",\"enter_time\":\"2019-11-20 13:54:00 UTC\",\"role\":\"Mediator\"}"}
 </msg>
<msg timestamp="20191120 21:54:22.435" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.436" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":"50","enter_time"...</msg>
<status status="PASS" endtime="20191120 21:54:22.436" starttime="20191120 21:54:22.435"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.436" starttime="20191120 21:54:22.436"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.436" level="INFO">${res} = {"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":"50","enter_time":"2019-11-20 13:54:00 UTC","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:22.436" starttime="20191120 21:54:22.436"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.437" level="INFO">{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":"50","enter_time":"2019-11-20 13:54:00 UTC","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:22.437" starttime="20191120 21:54:22.437"></status>
</kw>
<msg timestamp="20191120 21:54:22.437" level="INFO">${result} = {"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":"50","enter_time":"2019-11-20 13:54:00 UTC","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:22.437" starttime="20191120 21:54:22.426"></status>
</kw>
<kw type="kw" name="${balance} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.437" level="INFO">To JSON using : content={"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":"50","enter_time":"2019-11-20 13:54:00 UTC","role":"Mediator"} </msg>
<msg timestamp="20191120 21:54:22.438" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.438" level="INFO">${balance} = {u'status': u'Approved', u'agree_time': u'2019-11-20 13:54:00 UTC', u'enter_time': u'2019-11-20 13:54:00 UTC', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:53:30 UTC', u'balance': u'50',...</msg>
<status status="PASS" endtime="20191120 21:54:22.438" starttime="20191120 21:54:22.437"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${balance}</arg>
<arg>balance</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.438" starttime="20191120 21:54:22.438"></status>
</kw>
<msg timestamp="20191120 21:54:22.438" level="INFO">${mDeposit} = {u'status': u'Approved', u'agree_time': u'2019-11-20 13:54:00 UTC', u'enter_time': u'2019-11-20 13:54:00 UTC', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:53:30 UTC', u'balance': u'50',...</msg>
<status status="PASS" endtime="20191120 21:54:22.438" starttime="20191120 21:54:22.422"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mDeposit}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.439" level="INFO">{u'status': u'Approved', u'agree_time': u'2019-11-20 13:54:00 UTC', u'enter_time': u'2019-11-20 13:54:00 UTC', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:53:30 UTC', u'balance': u'50', u'apply_quit_time': u''}</msg>
<status status="PASS" endtime="20191120 21:54:22.439" starttime="20191120 21:54:22.439"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Be Equal">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${mDeposit["balance"]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191120 21:54:22.440" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.441" starttime="20191120 21:54:22.440"></status>
</kw>
<kw type="kw" name="GetAllMediators.GetAllMediators">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAllMediator</arg>
</arguments>
<msg timestamp="20191120 21:54:22.443" level="INFO">${one} = [u'GetAllMediator']</msg>
<status status="PASS" endtime="20191120 21:54:22.443" starttime="20191120 21:54:22.442"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.443" level="INFO">${two} = [[u'GetAllMediator']]</msg>
<status status="PASS" endtime="20191120 21:54:22.443" starttime="20191120 21:54:22.443"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAllMediator</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.445" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.445" starttime="20191120 21:54:22.445"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.446" level="INFO">${data} = {'params': [[u'GetAllMediator']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:22.445" starttime="20191120 21:54:22.445"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.446" level="INFO">Creating Session using : alias=GetAllMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.447" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.447" starttime="20191120 21:54:22.446"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.452" level="INFO">Post Request using : alias=GetAllMediator, uri=http://127.0.0.1:8545, data={"params": [["GetAllMediator"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.452" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.452" starttime="20191120 21:54:22.447"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.453" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":{\"apply_enter_time\":\"2019-11-20 13:53:30 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"2019-11-20 13:54:00 UTC\",\"balance\":5000000000,\"enter_time\":\"2019-11-20 13:54:00 UTC\",\"role\":\"Mediator\"},\"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"}}"}
 </msg>
<msg timestamp="20191120 21:54:22.453" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.453" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balanc...</msg>
<status status="PASS" endtime="20191120 21:54:22.453" starttime="20191120 21:54:22.452"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.453" starttime="20191120 21:54:22.453"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.454" level="INFO">${res} = {"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1...</msg>
<status status="PASS" endtime="20191120 21:54:22.454" starttime="20191120 21:54:22.454"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.454" level="INFO">{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":5000000000,"enter_time":"2019-11-20 13:54:00 UTC","role":"Mediator"},"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"}}</msg>
<status status="PASS" endtime="20191120 21:54:22.455" starttime="20191120 21:54:22.454"></status>
</kw>
<msg timestamp="20191120 21:54:22.455" level="INFO">${result} = {"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1...</msg>
<status status="PASS" endtime="20191120 21:54:22.455" starttime="20191120 21:54:22.444"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.455" level="INFO">{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:00 UTC","balance":5000000000,"enter_time":"2019-11-20 13:54:00 UTC","role":"Mediator"},"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"}}</msg>
<status status="PASS" endtime="20191120 21:54:22.455" starttime="20191120 21:54:22.455"></status>
</kw>
<status status="PASS" endtime="20191120 21:54:22.455" starttime="20191120 21:54:22.441"></status>
</kw>
<kw type="kw" name="${result} = applyQuitMediatorParams.applyQuitMediator">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>MediatorApplyQuit</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${apply}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.458" level="INFO">${one} = [u'MediatorApplyQuit']</msg>
<status status="PASS" endtime="20191120 21:54:22.458" starttime="20191120 21:54:22.458"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.459" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'50', u'1', [u'MediatorApplyQuit']]</msg>
<status status="PASS" endtime="20191120 21:54:22.459" starttime="20191120 21:54:22.459"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>${apply}</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:22.461" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:22.461" starttime="20191120 21:54:22.460"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:22.461" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'50', u'1', [u'MediatorApplyQuit']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvoke', 'id': ...</msg>
<status status="PASS" endtime="20191120 21:54:22.461" starttime="20191120 21:54:22.461"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.462" level="INFO">Creating Session using : alias=MediatorApplyQuit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:22.462" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.462" starttime="20191120 21:54:22.461"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.466" level="INFO">Post Request using : alias=MediatorApplyQuit, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "50", "1", ["MediatorApplyQuit"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:22.466" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:22.466" starttime="20191120 21:54:22.462"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.467" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab"}
 </msg>
<msg timestamp="20191120 21:54:22.467" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:22.467" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab'}</msg>
<status status="PASS" endtime="20191120 21:54:22.467" starttime="20191120 21:54:22.466"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:22.467" starttime="20191120 21:54:22.467"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:22.468" level="INFO">${res} = e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab</msg>
<status status="PASS" endtime="20191120 21:54:22.468" starttime="20191120 21:54:22.468"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:22.468" level="INFO">e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab</msg>
<status status="PASS" endtime="20191120 21:54:22.468" starttime="20191120 21:54:22.468"></status>
</kw>
<msg timestamp="20191120 21:54:22.468" level="INFO">${result} = e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab</msg>
<status status="PASS" endtime="20191120 21:54:22.468" starttime="20191120 21:54:22.460"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:28.470" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:28.471" starttime="20191120 21:54:22.469"></status>
</kw>
<msg timestamp="20191120 21:54:28.472" level="INFO">${result} = e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab</msg>
<status status="PASS" endtime="20191120 21:54:28.472" starttime="20191120 21:54:22.456"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.475" level="INFO">e35596a3545ea8bc89ef7b4612b7d2ba8890b2ab00ab001c6b7db11b626d16ab</msg>
<status status="PASS" endtime="20191120 21:54:28.475" starttime="20191120 21:54:28.474"></status>
</kw>
<kw type="kw" name="${addressMap4} = getQuitMediatorApplyListParams.getQuitMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitApplyList</arg>
</arguments>
<msg timestamp="20191120 21:54:28.480" level="INFO">${one} = [u'GetQuitApplyList']</msg>
<status status="PASS" endtime="20191120 21:54:28.480" starttime="20191120 21:54:28.479"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.482" level="INFO">${two} = [[u'GetQuitApplyList']]</msg>
<status status="PASS" endtime="20191120 21:54:28.482" starttime="20191120 21:54:28.481"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:28.489" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:28.488" starttime="20191120 21:54:28.487"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:28.492" level="INFO">${data} = {'params': [[u'GetQuitApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:28.492" starttime="20191120 21:54:28.491"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.494" level="INFO">Creating Session using : alias=GetQuitApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:28.494" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:28.494" starttime="20191120 21:54:28.493"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.501" level="INFO">Post Request using : alias=GetQuitApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetQuitApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:28.501" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:28.501" starttime="20191120 21:54:28.495"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.502" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":{\"role\":\"Mediator\",\"time\":\"2019-11-20 13:54:00 UTC\"}}"}
 </msg>
<msg timestamp="20191120 21:54:28.502" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:28.502" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"role":"Mediator","time":"2019-11-20 13:54:00 UTC"}}'}</msg>
<status status="PASS" endtime="20191120 21:54:28.502" starttime="20191120 21:54:28.502"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:28.503" starttime="20191120 21:54:28.502"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:28.503" level="INFO">${res} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"role":"Mediator","time":"2019-11-20 13:54:00 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:28.503" starttime="20191120 21:54:28.503"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.503" level="INFO">{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"role":"Mediator","time":"2019-11-20 13:54:00 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:28.504" starttime="20191120 21:54:28.503"></status>
</kw>
<msg timestamp="20191120 21:54:28.504" level="INFO">${result} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"role":"Mediator","time":"2019-11-20 13:54:00 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:28.504" starttime="20191120 21:54:28.483"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.504" level="INFO">To JSON using : content={"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"role":"Mediator","time":"2019-11-20 13:54:00 UTC"}} </msg>
<msg timestamp="20191120 21:54:28.504" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:28.504" level="INFO">${addressMap} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': {u'role': u'Mediator', u'time': u'2019-11-20 13:54:00 UTC'}}</msg>
<status status="PASS" endtime="20191120 21:54:28.504" starttime="20191120 21:54:28.504"></status>
</kw>
<msg timestamp="20191120 21:54:28.504" level="INFO">${addressMap4} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': {u'role': u'Mediator', u'time': u'2019-11-20 13:54:00 UTC'}}</msg>
<status status="PASS" endtime="20191120 21:54:28.504" starttime="20191120 21:54:28.476"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap4}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.505" level="INFO">{u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': {u'role': u'Mediator', u'time': u'2019-11-20 13:54:00 UTC'}}</msg>
<status status="PASS" endtime="20191120 21:54:28.505" starttime="20191120 21:54:28.505"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap4}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:28.505" starttime="20191120 21:54:28.505"></status>
</kw>
<kw type="kw" name="${result} = handleForApplyForQuitMediatorParams.handleForApplyForQuitMediator">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr_01}</arg>
<arg>Ok</arg>
<arg>HandleForApplyQuitMediator</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${handle}</arg>
<arg>${mediatorAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.507" level="INFO">${one} = [u'HandleForApplyQuitMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']</msg>
<status status="PASS" endtime="20191120 21:54:28.507" starttime="20191120 21:54:28.506"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.507" level="INFO">${two} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'50', u'1', [u'HandleForApplyQuitMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:28.507" starttime="20191120 21:54:28.507"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>${handle}</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:28.508" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:28.508" starttime="20191120 21:54:28.508"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:28.509" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'50', u'1', [u'HandleForApplyQuitMediator', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS', u'Ok']], 'jsonrpc': u'2...</msg>
<status status="PASS" endtime="20191120 21:54:28.509" starttime="20191120 21:54:28.509"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.509" level="INFO">Creating Session using : alias=HandleForApplyQuitMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:28.510" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:28.510" starttime="20191120 21:54:28.509"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.521" level="INFO">Post Request using : alias=HandleForApplyQuitMediator, uri=http://127.0.0.1:8545, data={"params": ["P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "50", "1", ["HandleForApplyQuitMediator", "P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS", "Ok"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:28.521" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:28.521" starttime="20191120 21:54:28.510"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.523" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe"}
 </msg>
<msg timestamp="20191120 21:54:28.523" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:28.523" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe'}</msg>
<status status="PASS" endtime="20191120 21:54:28.523" starttime="20191120 21:54:28.522"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:28.524" starttime="20191120 21:54:28.523"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:28.524" level="INFO">${res} = bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe</msg>
<status status="PASS" endtime="20191120 21:54:28.524" starttime="20191120 21:54:28.524"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:28.525" level="INFO">bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe</msg>
<status status="PASS" endtime="20191120 21:54:28.525" starttime="20191120 21:54:28.524"></status>
</kw>
<msg timestamp="20191120 21:54:28.525" level="INFO">${result} = bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe</msg>
<status status="PASS" endtime="20191120 21:54:28.525" starttime="20191120 21:54:28.507"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:34.526" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:34.527" starttime="20191120 21:54:28.525"></status>
</kw>
<msg timestamp="20191120 21:54:34.528" level="INFO">${result} = bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe</msg>
<status status="PASS" endtime="20191120 21:54:34.527" starttime="20191120 21:54:28.506"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.530" level="INFO">bbbe9d2cdf27c6f306feb46fb76a7564f2c51251988e548baaccaee4a20471fe</msg>
<status status="PASS" endtime="20191120 21:54:34.530" starttime="20191120 21:54:34.529"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.534" level="INFO">${two} = [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:54:34.533" starttime="20191120 21:54:34.533"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.536" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.536" starttime="20191120 21:54:34.536"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.537" level="INFO">${data} = {'params': [u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.537" starttime="20191120 21:54:34.536"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.538" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.539" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.539" starttime="20191120 21:54:34.538"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.724" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.725" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.725" starttime="20191120 21:54:34.539"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.729" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"9996"}}
 </msg>
<msg timestamp="20191120 21:54:34.730" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.731" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'9996'}}</msg>
<status status="PASS" endtime="20191120 21:54:34.730" starttime="20191120 21:54:34.728"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.733" starttime="20191120 21:54:34.732"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.737" level="INFO">${res} = {u'PTN': u'9996'}</msg>
<status status="PASS" endtime="20191120 21:54:34.736" starttime="20191120 21:54:34.735"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.739" level="INFO">{u'PTN': u'9996'}</msg>
<status status="PASS" endtime="20191120 21:54:34.739" starttime="20191120 21:54:34.738"></status>
</kw>
<msg timestamp="20191120 21:54:34.740" level="INFO">${result} = {u'PTN': u'9996'}</msg>
<status status="PASS" endtime="20191120 21:54:34.740" starttime="20191120 21:54:34.534"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.743" level="INFO">{u'PTN': u'9996'}</msg>
<status status="PASS" endtime="20191120 21:54:34.743" starttime="20191120 21:54:34.741"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.745" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:54:34.745" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:54:34.745" starttime="20191120 21:54:34.744"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.748" level="INFO">${amount} = 9996</msg>
<status status="PASS" endtime="20191120 21:54:34.748" starttime="20191120 21:54:34.747"></status>
</kw>
<msg timestamp="20191120 21:54:34.749" level="INFO">${amount} = 9996</msg>
<status status="PASS" endtime="20191120 21:54:34.749" starttime="20191120 21:54:34.531"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.751" level="INFO">9996</msg>
<status status="PASS" endtime="20191120 21:54:34.751" starttime="20191120 21:54:34.750"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>9996</arg>
</arguments>
<msg timestamp="20191120 21:54:34.755" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.756" starttime="20191120 21:54:34.754"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.762" level="INFO">${two} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM']</msg>
<status status="PASS" endtime="20191120 21:54:34.761" starttime="20191120 21:54:34.760"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.764" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.764" starttime="20191120 21:54:34.764"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.766" level="INFO">${data} = {'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.765" starttime="20191120 21:54:34.765"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.766" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.767" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.767" starttime="20191120 21:54:34.766"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.773" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.773" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.773" starttime="20191120 21:54:34.767"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.774" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{}}
 </msg>
<msg timestamp="20191120 21:54:34.774" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.774" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {}}</msg>
<status status="PASS" endtime="20191120 21:54:34.774" starttime="20191120 21:54:34.773"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.775" starttime="20191120 21:54:34.775"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.775" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.775" starttime="20191120 21:54:34.775"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.776" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:34.776" starttime="20191120 21:54:34.776"></status>
</kw>
<msg timestamp="20191120 21:54:34.776" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.776" starttime="20191120 21:54:34.762"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.777" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:34.777" starttime="20191120 21:54:34.777"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.778" level="INFO">Length is 0</msg>
<msg timestamp="20191120 21:54:34.778" level="INFO">${len} = 0</msg>
<status status="PASS" endtime="20191120 21:54:34.778" starttime="20191120 21:54:34.777"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.778" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20191120 21:54:34.778" starttime="20191120 21:54:34.778"></status>
</kw>
<msg timestamp="20191120 21:54:34.779" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20191120 21:54:34.778" starttime="20191120 21:54:34.757"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.779" level="INFO">0</msg>
<status status="PASS" endtime="20191120 21:54:34.779" starttime="20191120 21:54:34.779"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${amount}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191120 21:54:34.780" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.780" starttime="20191120 21:54:34.780"></status>
</kw>
<kw type="kw" name="${resul} = getListForJuryCandidateParams.getListForJuryCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:34.781" level="INFO">${one} = [u'GetListForJuryCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:34.781" starttime="20191120 21:54:34.781"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.782" level="INFO">${two} = [[u'GetListForJuryCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:34.782" starttime="20191120 21:54:34.782"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.783" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.783" starttime="20191120 21:54:34.783"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.784" level="INFO">${data} = {'params': [[u'GetListForJuryCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.784" starttime="20191120 21:54:34.783"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.784" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.784" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.784" starttime="20191120 21:54:34.784"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.791" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForJuryCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.792" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.792" starttime="20191120 21:54:34.785"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.792" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:34.793" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.793" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:54:34.793" starttime="20191120 21:54:34.792"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.793" starttime="20191120 21:54:34.793"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.794" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:54:34.794" starttime="20191120 21:54:34.794"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.794" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:34.794" starttime="20191120 21:54:34.794"></status>
</kw>
<msg timestamp="20191120 21:54:34.795" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:54:34.794" starttime="20191120 21:54:34.782"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.795" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:34.795" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.795" level="INFO">${addressMap} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:54:34.795" starttime="20191120 21:54:34.795"></status>
</kw>
<msg timestamp="20191120 21:54:34.795" level="INFO">${resul} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:54:34.795" starttime="20191120 21:54:34.780"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${resul}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.796" starttime="20191120 21:54:34.796"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.796" level="INFO">{u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True}</msg>
<status status="PASS" endtime="20191120 21:54:34.796" starttime="20191120 21:54:34.796"></status>
</kw>
<kw type="kw" name="${mDeposit} = getMediatorDepositWithAddrParams.getMediatorDepositWithAddr">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<kw type="kw" name="${11} = getMediatorDepositWithAddrParams.获取某个节点的账户">
<doc></doc>
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetMediatorDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.798" level="INFO">${one} = [u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:54:34.798" starttime="20191120 21:54:34.798"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.799" level="INFO">${two} = [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']]</msg>
<status status="PASS" endtime="20191120 21:54:34.798" starttime="20191120 21:54:34.798"></status>
</kw>
<msg timestamp="20191120 21:54:34.799" level="INFO">${11} = [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']]</msg>
<status status="PASS" endtime="20191120 21:54:34.799" starttime="20191120 21:54:34.797"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetMediatorDeposit</arg>
<arg>${11}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.800" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.800" starttime="20191120 21:54:34.800"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.800" level="INFO">${data} = {'params': [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.800" starttime="20191120 21:54:34.800"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.801" level="INFO">Creating Session using : alias=GetMediatorDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.801" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.801" starttime="20191120 21:54:34.801"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.808" level="INFO">Post Request using : alias=GetMediatorDeposit, uri=http://127.0.0.1:8545, data={"params": [["GetMediatorDeposit", "P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.808" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.808" starttime="20191120 21:54:34.801"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.808" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"apply_enter_time\":\"2019-11-20 13:53:30 UTC\",\"apply_quit_time\":\"2019-11-20 13:54:00 UTC\",\"status\":\"Quited\",\"agree_time\":\"2019-11-20 13:54:00 UTC\",\"balance\":\"0\",\"enter_time\":\"\",\"role\":\"Mediator\"}"}
 </msg>
<msg timestamp="20191120 21:54:34.808" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.809" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balan...</msg>
<status status="PASS" endtime="20191120 21:54:34.809" starttime="20191120 21:54:34.808"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.809" starttime="20191120 21:54:34.809"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.810" level="INFO">${res} = {"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":"0","enter_time":"","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:34.810" starttime="20191120 21:54:34.809"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.810" level="INFO">{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":"0","enter_time":"","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:34.810" starttime="20191120 21:54:34.810"></status>
</kw>
<msg timestamp="20191120 21:54:34.810" level="INFO">${result} = {"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":"0","enter_time":"","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:34.810" starttime="20191120 21:54:34.799"></status>
</kw>
<kw type="kw" name="${balance} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.811" level="INFO">To JSON using : content={"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":"0","enter_time":"","role":"Mediator"} </msg>
<msg timestamp="20191120 21:54:34.811" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.811" level="INFO">${balance} = {u'status': u'Quited', u'agree_time': u'2019-11-20 13:54:00 UTC', u'enter_time': u'', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:53:30 UTC', u'balance': u'0', u'apply_quit_time': u'201...</msg>
<status status="PASS" endtime="20191120 21:54:34.811" starttime="20191120 21:54:34.811"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${balance}</arg>
<arg>balance</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.812" starttime="20191120 21:54:34.812"></status>
</kw>
<msg timestamp="20191120 21:54:34.812" level="INFO">${mDeposit} = {u'status': u'Quited', u'agree_time': u'2019-11-20 13:54:00 UTC', u'enter_time': u'', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:53:30 UTC', u'balance': u'0', u'apply_quit_time': u'201...</msg>
<status status="PASS" endtime="20191120 21:54:34.812" starttime="20191120 21:54:34.797"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mDeposit}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.812" level="INFO">{u'status': u'Quited', u'agree_time': u'2019-11-20 13:54:00 UTC', u'enter_time': u'', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:53:30 UTC', u'balance': u'0', u'apply_quit_time': u'2019-11-20 13:54:00 UTC'}</msg>
<status status="PASS" endtime="20191120 21:54:34.812" starttime="20191120 21:54:34.812"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mDeposit["balance"]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191120 21:54:34.813" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.813" starttime="20191120 21:54:34.813"></status>
</kw>
<kw type="kw" name="${result} = getBecomeMediatorApplyListParams.getBecomeMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<msg timestamp="20191120 21:54:34.815" level="INFO">${one} = [u'GetBecomeMediatorApplyList']</msg>
<status status="PASS" endtime="20191120 21:54:34.815" starttime="20191120 21:54:34.814"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.816" level="INFO">${two} = [[u'GetBecomeMediatorApplyList']]</msg>
<status status="PASS" endtime="20191120 21:54:34.816" starttime="20191120 21:54:34.815"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.817" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.817" starttime="20191120 21:54:34.817"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.818" level="INFO">${data} = {'params': [[u'GetBecomeMediatorApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.818" starttime="20191120 21:54:34.817"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.818" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.818" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.818" starttime="20191120 21:54:34.818"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.825" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetBecomeMediatorApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.825" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.825" starttime="20191120 21:54:34.819"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.826" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{}"}
 </msg>
<msg timestamp="20191120 21:54:34.826" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.826" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{}'}</msg>
<status status="PASS" endtime="20191120 21:54:34.826" starttime="20191120 21:54:34.826"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.827" starttime="20191120 21:54:34.827"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.827" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.827" starttime="20191120 21:54:34.827"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.828" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:34.828" starttime="20191120 21:54:34.827"></status>
</kw>
<msg timestamp="20191120 21:54:34.828" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.828" starttime="20191120 21:54:34.816"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.828" level="INFO">To JSON using : content={} </msg>
<msg timestamp="20191120 21:54:34.828" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.828" level="INFO">${addressMap} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.828" starttime="20191120 21:54:34.828"></status>
</kw>
<msg timestamp="20191120 21:54:34.829" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.829" starttime="20191120 21:54:34.814"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.829" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:34.829" starttime="20191120 21:54:34.829"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.830" starttime="20191120 21:54:34.829"></status>
</kw>
<kw type="kw" name="${result} = getAgreeForBecomeMediatorListParams.getAgreeForBecomeMediatorList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<msg timestamp="20191120 21:54:34.831" level="INFO">${one} = [u'GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" endtime="20191120 21:54:34.831" starttime="20191120 21:54:34.831"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.831" level="INFO">${two} = [[u'GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" endtime="20191120 21:54:34.831" starttime="20191120 21:54:34.831"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.833" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.832" starttime="20191120 21:54:34.832"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.833" level="INFO">${data} = {'params': [[u'GetAgreeForBecomeMediatorList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.833" starttime="20191120 21:54:34.833"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.833" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.834" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.834" starttime="20191120 21:54:34.833"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.840" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"params": [["GetAgreeForBecomeMediatorList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.841" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.841" starttime="20191120 21:54:34.834"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.842" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true}"}
 </msg>
<msg timestamp="20191120 21:54:34.842" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.842" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}'}</msg>
<status status="PASS" endtime="20191120 21:54:34.842" starttime="20191120 21:54:34.841"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.843" starttime="20191120 21:54:34.842"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.843" level="INFO">${res} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:34.843" starttime="20191120 21:54:34.843"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.843" level="INFO">{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:34.843" starttime="20191120 21:54:34.843"></status>
</kw>
<msg timestamp="20191120 21:54:34.844" level="INFO">${result} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true}</msg>
<status status="PASS" endtime="20191120 21:54:34.844" starttime="20191120 21:54:34.832"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.844" level="INFO">To JSON using : content={"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true} </msg>
<msg timestamp="20191120 21:54:34.844" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.844" level="INFO">${addressMap} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:34.844" starttime="20191120 21:54:34.844"></status>
</kw>
<msg timestamp="20191120 21:54:34.844" level="INFO">${result} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:34.844" starttime="20191120 21:54:34.830"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.845" level="INFO">{u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True}</msg>
<status status="PASS" endtime="20191120 21:54:34.845" starttime="20191120 21:54:34.845"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.845" starttime="20191120 21:54:34.845"></status>
</kw>
<kw type="kw" name="${result} = getListForMediatorCandidateParams.getListForMediatorCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:34.847" level="INFO">${one} = [u'GetListForMediatorCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:34.847" starttime="20191120 21:54:34.846"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.847" level="INFO">${two} = [[u'GetListForMediatorCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:34.847" starttime="20191120 21:54:34.847"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.848" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.848" starttime="20191120 21:54:34.848"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.849" level="INFO">${data} = {'params': [[u'GetListForMediatorCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.849" starttime="20191120 21:54:34.848"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.849" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.849" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.850" starttime="20191120 21:54:34.849"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.854" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForMediatorCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.855" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.855" starttime="20191120 21:54:34.850"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.855" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:34.855" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.855" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:54:34.855" starttime="20191120 21:54:34.855"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.856" starttime="20191120 21:54:34.856"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.856" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:54:34.856" starttime="20191120 21:54:34.856"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.857" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:34.857" starttime="20191120 21:54:34.857"></status>
</kw>
<msg timestamp="20191120 21:54:34.857" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:54:34.857" starttime="20191120 21:54:34.847"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.857" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:34.857" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.858" level="INFO">${addressMap} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:54:34.857" starttime="20191120 21:54:34.857"></status>
</kw>
<msg timestamp="20191120 21:54:34.858" level="INFO">${result} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:54:34.858" starttime="20191120 21:54:34.846"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.858" level="INFO">{u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True}</msg>
<status status="PASS" endtime="20191120 21:54:34.858" starttime="20191120 21:54:34.858"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.859" starttime="20191120 21:54:34.859"></status>
</kw>
<kw type="kw" name="${result} = getQuitMediatorApplyListParams.getQuitMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitApplyList</arg>
</arguments>
<msg timestamp="20191120 21:54:34.860" level="INFO">${one} = [u'GetQuitApplyList']</msg>
<status status="PASS" endtime="20191120 21:54:34.860" starttime="20191120 21:54:34.860"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.860" level="INFO">${two} = [[u'GetQuitApplyList']]</msg>
<status status="PASS" endtime="20191120 21:54:34.860" starttime="20191120 21:54:34.860"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.862" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.861" starttime="20191120 21:54:34.861"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.862" level="INFO">${data} = {'params': [[u'GetQuitApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.862" starttime="20191120 21:54:34.862"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.862" level="INFO">Creating Session using : alias=GetQuitApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.863" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.863" starttime="20191120 21:54:34.862"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.900" level="INFO">Post Request using : alias=GetQuitApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetQuitApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.901" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.901" starttime="20191120 21:54:34.863"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.902" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{}"}
 </msg>
<msg timestamp="20191120 21:54:34.902" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.902" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{}'}</msg>
<status status="PASS" endtime="20191120 21:54:34.902" starttime="20191120 21:54:34.901"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.903" starttime="20191120 21:54:34.903"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.904" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.904" starttime="20191120 21:54:34.904"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.905" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:34.905" starttime="20191120 21:54:34.905"></status>
</kw>
<msg timestamp="20191120 21:54:34.906" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.906" starttime="20191120 21:54:34.861"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.906" level="INFO">To JSON using : content={} </msg>
<msg timestamp="20191120 21:54:34.906" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.907" level="INFO">${addressMap} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.907" starttime="20191120 21:54:34.906"></status>
</kw>
<msg timestamp="20191120 21:54:34.907" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:54:34.907" starttime="20191120 21:54:34.859"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.908" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:54:34.908" starttime="20191120 21:54:34.907"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.909" starttime="20191120 21:54:34.909"></status>
</kw>
<kw type="kw" name="GetAllMediators.GetAllMediators">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAllMediator</arg>
</arguments>
<msg timestamp="20191120 21:54:34.911" level="INFO">${one} = [u'GetAllMediator']</msg>
<status status="PASS" endtime="20191120 21:54:34.911" starttime="20191120 21:54:34.910"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.912" level="INFO">${two} = [[u'GetAllMediator']]</msg>
<status status="PASS" endtime="20191120 21:54:34.911" starttime="20191120 21:54:34.911"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAllMediator</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.913" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.913" starttime="20191120 21:54:34.913"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.914" level="INFO">${data} = {'params': [[u'GetAllMediator']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:34.914" starttime="20191120 21:54:34.913"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.914" level="INFO">Creating Session using : alias=GetAllMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.915" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.915" starttime="20191120 21:54:34.914"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.922" level="INFO">Post Request using : alias=GetAllMediator, uri=http://127.0.0.1:8545, data={"params": [["GetAllMediator"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.922" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.922" starttime="20191120 21:54:34.915"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.923" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":{\"apply_enter_time\":\"2019-11-20 13:53:30 UTC\",\"apply_quit_time\":\"2019-11-20 13:54:00 UTC\",\"status\":\"Quited\",\"agree_time\":\"2019-11-20 13:54:00 UTC\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"}}"}
 </msg>
<msg timestamp="20191120 21:54:34.923" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.923" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balanc...</msg>
<status status="PASS" endtime="20191120 21:54:34.923" starttime="20191120 21:54:34.923"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.924" starttime="20191120 21:54:34.924"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.924" level="INFO">${res} = {"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1...</msg>
<status status="PASS" endtime="20191120 21:54:34.924" starttime="20191120 21:54:34.924"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.925" level="INFO">{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":0,"enter_time":"","role":"Mediator"},"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"}}</msg>
<status status="PASS" endtime="20191120 21:54:34.925" starttime="20191120 21:54:34.925"></status>
</kw>
<msg timestamp="20191120 21:54:34.925" level="INFO">${result} = {"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1...</msg>
<status status="PASS" endtime="20191120 21:54:34.925" starttime="20191120 21:54:34.912"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.925" level="INFO">{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":0,"enter_time":"","role":"Mediator"},"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"}}</msg>
<status status="PASS" endtime="20191120 21:54:34.926" starttime="20191120 21:54:34.925"></status>
</kw>
<status status="PASS" endtime="20191120 21:54:34.926" starttime="20191120 21:54:34.909"></status>
</kw>
<doc>mediator 交付 50 ptn 才可以加入候选列表

mediator节点申请并且进入申请列表-》基金会同意并移除申请列表-》进入同意列表-》节点加入保证金（不够足够）无法进入候选列表-》节点交够保证金-》进入候选列表（自动进入Jury候选列表）-》节点申请退出并且进入退出列表-》基金会同意并移除节点候选列表（Jury候选列表）和退出列表。结果：同意列表包含该地址</doc>
<tags>
</tags>
<status status="PASS" endtime="20191120 21:54:34.926" critical="yes" starttime="20191120 21:53:58.135"></status>
</test>
<test id="s1-t2" name="Business_02">
<kw type="kw" name="${result} = applyBecomeMediatorParams.applyBecomeMediator">
<doc></doc>
<arguments>
<arg>${mediatorAddr_02}</arg>
<arg>${m2_pubkey}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyBecomeMediator</arg>
<arg>{\"applyInfo\":\"xxx...\",\"account\":\"${mediatorAddr}\",\"initPubKey\":\"2SvBCoCHWA8Zg2Q8v2onmaTeZj6YmWLbp6mzoCZeDwiUcmuqFwd8fZXCfdmEhTodbWaSJ8T7MvjQiZkn4S9VTQnKDrEkETt84Sr58vmjVdhdXNjjzqn8j6oHzvduxGo4UjWB66wd1GFXKoz5XD8hcPDzCyGVqZLjb7wu2pkJxeG1Mt3\",\"node\":\"pnode://4bdc1c533f6e3700a0a6cc346bf2364eace58a10d8a782762c8d2b27cf4d96c25827c82a15684d348e88722b259f31abcccd4d0eaae0f52eeb85e1eb5342b862@127.0.0.1:30303\",\"public_key\":\"${pubkey}\"}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.928" level="INFO">${one} = [u'ApplyBecomeMediator', u'{"applyInfo":"xxx...","account":"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2","initPubKey":"2SvBCoCHWA8Zg2Q8v2onmaTeZj6YmWLbp6mzoCZeDwiUcmuqFwd8fZXCfdmEhTodbWaSJ8T7MvjQiZkn4S9VTQnKD...</msg>
<status status="PASS" endtime="20191120 21:54:34.928" starttime="20191120 21:54:34.928"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.929" level="INFO">${two} = [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'1', u'1', [u'ApplyBecomeMediator', u'{"applyInfo":"xxx...","account":"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2","initPubKe...</msg>
<status status="PASS" endtime="20191120 21:54:34.929" starttime="20191120 21:54:34.929"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyBecomeMediator</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:34.930" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:34.930" starttime="20191120 21:54:34.930"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:34.931" level="INFO">${data} = {'params': [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'1', u'1', [u'ApplyBecomeMediator', u'{"applyInfo":"xxx...","account":"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2"...</msg>
<status status="PASS" endtime="20191120 21:54:34.931" starttime="20191120 21:54:34.931"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.931" level="INFO">Creating Session using : alias=ApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:34.932" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.932" starttime="20191120 21:54:34.931"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.957" level="INFO">Post Request using : alias=ApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"params": ["P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2", "P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2", "1", "1", ["ApplyBecomeMediator", "{\"applyInfo\":\"xxx...\",\"account\":\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\",\"initPubKey\":\"2SvBCoCHWA8Zg2Q8v2onmaTeZj6YmWLbp6mzoCZeDwiUcmuqFwd8fZXCfdmEhTodbWaSJ8T7MvjQiZkn4S9VTQnKDrEkETt84Sr58vmjVdhdXNjjzqn8j6oHzvduxGo4UjWB66wd1GFXKoz5XD8hcPDzCyGVqZLjb7wu2pkJxeG1Mt3\",\"node\":\"pnode://4bdc1c533f6e3700a0a6cc346bf2364eace58a10d8a782762c8d2b27cf4d96c25827c82a15684d348e88722b259f31abcccd4d0eaae0f52eeb85e1eb5342b862@127.0.0.1:30303\",\"public_key\":\"02c4592582329771b04edd3effc46487492fbe8aa0c712471a31e2f330c62c0c99\"}"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:34.957" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:34.957" starttime="20191120 21:54:34.932"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.958" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15"}
 </msg>
<msg timestamp="20191120 21:54:34.958" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:34.958" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15'}</msg>
<status status="PASS" endtime="20191120 21:54:34.958" starttime="20191120 21:54:34.957"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:34.959" starttime="20191120 21:54:34.958"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:34.964" level="INFO">${res} = 2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15</msg>
<status status="PASS" endtime="20191120 21:54:34.963" starttime="20191120 21:54:34.963"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:34.964" level="INFO">2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15</msg>
<status status="PASS" endtime="20191120 21:54:34.964" starttime="20191120 21:54:34.964"></status>
</kw>
<msg timestamp="20191120 21:54:34.964" level="INFO">${result} = 2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15</msg>
<status status="PASS" endtime="20191120 21:54:34.964" starttime="20191120 21:54:34.929"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:40.965" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:40.966" starttime="20191120 21:54:34.964"></status>
</kw>
<msg timestamp="20191120 21:54:40.967" level="INFO">${result} = 2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15</msg>
<status status="PASS" endtime="20191120 21:54:40.967" starttime="20191120 21:54:34.927"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:40.971" level="INFO">2fcaa6f5fe217f27c69ba6e6ca8282ab0a25df5c4a93cfe3c3c271f64f0b3b15</msg>
<status status="PASS" endtime="20191120 21:54:40.971" starttime="20191120 21:54:40.970"></status>
</kw>
<kw type="kw" name="${addressMap1} = getBecomeMediatorApplyListParams.getBecomeMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<msg timestamp="20191120 21:54:40.976" level="INFO">${one} = [u'GetBecomeMediatorApplyList']</msg>
<status status="PASS" endtime="20191120 21:54:40.976" starttime="20191120 21:54:40.975"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:40.979" level="INFO">${two} = [[u'GetBecomeMediatorApplyList']]</msg>
<status status="PASS" endtime="20191120 21:54:40.979" starttime="20191120 21:54:40.978"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:40.984" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:40.984" starttime="20191120 21:54:40.983"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:40.987" level="INFO">${data} = {'params': [[u'GetBecomeMediatorApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:40.987" starttime="20191120 21:54:40.986"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:40.989" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:40.990" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:40.991" starttime="20191120 21:54:40.988"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.007" level="INFO">Post Request using : alias=GetBecomeMediatorApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetBecomeMediatorApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:41.008" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:41.007" starttime="20191120 21:54:40.992"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.009" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":true}"}
 </msg>
<msg timestamp="20191120 21:54:41.009" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:41.009" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}'}</msg>
<status status="PASS" endtime="20191120 21:54:41.009" starttime="20191120 21:54:41.008"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:41.010" starttime="20191120 21:54:41.009"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:41.010" level="INFO">${res} = {"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:54:41.010" starttime="20191120 21:54:41.010"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.011" level="INFO">{"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:54:41.011" starttime="20191120 21:54:41.011"></status>
</kw>
<msg timestamp="20191120 21:54:41.011" level="INFO">${result} = {"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:54:41.011" starttime="20191120 21:54:40.980"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.012" level="INFO">To JSON using : content={"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true} </msg>
<msg timestamp="20191120 21:54:41.012" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:41.012" level="INFO">${addressMap} = {u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:41.012" starttime="20191120 21:54:41.012"></status>
</kw>
<msg timestamp="20191120 21:54:41.012" level="INFO">${addressMap1} = {u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:41.012" starttime="20191120 21:54:40.972"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap1}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.013" level="INFO">{u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:41.013" starttime="20191120 21:54:41.013"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap1}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:41.014" starttime="20191120 21:54:41.014"></status>
</kw>
<kw type="kw" name="${result} = handleForApplyBecomeMediatorParams.handleForApplyBecomeMediator">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr_02}</arg>
<arg>Ok</arg>
</arguments>
<kw type="kw" name="${基金会处理申请所需参数 } = handleForApplyBecomeMediatorParams.基金会处理申请所需参数">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForApplyBecomeMediator</arg>
<arg>${mediatorAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.016" level="INFO">${one} = [u'HandleForApplyBecomeMediator', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']</msg>
<status status="PASS" endtime="20191120 21:54:41.016" starttime="20191120 21:54:41.016"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.017" level="INFO">${two} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForApplyBecomeMediator', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:41.017" starttime="20191120 21:54:41.017"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${two}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.017" level="INFO">[u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForApplyBecomeMediator', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:41.017" starttime="20191120 21:54:41.017"></status>
</kw>
<msg timestamp="20191120 21:54:41.018" level="INFO">${基金会处理申请所需参数 } = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForApplyBecomeMediator', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:41.018" starttime="20191120 21:54:41.015"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForApplyBecomeMediator</arg>
<arg>${基金会处理申请所需参数 }</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:41.019" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:41.019" starttime="20191120 21:54:41.018"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:41.019" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForApplyBecomeMediator', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']], 'jsonrpc': u'...</msg>
<status status="PASS" endtime="20191120 21:54:41.019" starttime="20191120 21:54:41.019"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.020" level="INFO">Creating Session using : alias=HandleForApplyBecomeMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:41.020" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:41.020" starttime="20191120 21:54:41.019"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.025" level="INFO">Post Request using : alias=HandleForApplyBecomeMediator, uri=http://127.0.0.1:8545, data={"params": ["P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "1", "1", ["HandleForApplyBecomeMediator", "P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2", "Ok"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:41.025" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:41.025" starttime="20191120 21:54:41.020"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.026" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0"}
 </msg>
<msg timestamp="20191120 21:54:41.026" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:41.026" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0'}</msg>
<status status="PASS" endtime="20191120 21:54:41.026" starttime="20191120 21:54:41.025"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:41.027" starttime="20191120 21:54:41.027"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:41.028" level="INFO">${res} = b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0</msg>
<status status="PASS" endtime="20191120 21:54:41.028" starttime="20191120 21:54:41.027"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:41.028" level="INFO">b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0</msg>
<status status="PASS" endtime="20191120 21:54:41.028" starttime="20191120 21:54:41.028"></status>
</kw>
<msg timestamp="20191120 21:54:41.029" level="INFO">${result} = b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0</msg>
<status status="PASS" endtime="20191120 21:54:41.029" starttime="20191120 21:54:41.018"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:47.030" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:47.031" starttime="20191120 21:54:41.029"></status>
</kw>
<msg timestamp="20191120 21:54:47.032" level="INFO">${result} = b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0</msg>
<status status="PASS" endtime="20191120 21:54:47.032" starttime="20191120 21:54:41.014"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.033" level="INFO">b964513e38f626e74da8cde5244361fcc0617ef82e9a465ca52aa463666934f0</msg>
<status status="PASS" endtime="20191120 21:54:47.033" starttime="20191120 21:54:47.033"></status>
</kw>
<kw type="kw" name="${addressMap2} = getAgreeForBecomeMediatorListParams.getAgreeForBecomeMediatorList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<msg timestamp="20191120 21:54:47.036" level="INFO">${one} = [u'GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" endtime="20191120 21:54:47.036" starttime="20191120 21:54:47.036"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.037" level="INFO">${two} = [[u'GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" endtime="20191120 21:54:47.037" starttime="20191120 21:54:47.037"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:47.039" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:47.039" starttime="20191120 21:54:47.039"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:47.040" level="INFO">${data} = {'params': [[u'GetAgreeForBecomeMediatorList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:47.040" starttime="20191120 21:54:47.039"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.040" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:47.041" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:47.041" starttime="20191120 21:54:47.040"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.047" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"params": [["GetAgreeForBecomeMediatorList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:47.048" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:47.047" starttime="20191120 21:54:47.041"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.048" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true,\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":true}"}
 </msg>
<msg timestamp="20191120 21:54:47.048" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:47.048" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}'}</msg>
<status status="PASS" endtime="20191120 21:54:47.048" starttime="20191120 21:54:47.048"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:47.049" starttime="20191120 21:54:47.049"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:47.050" level="INFO">${res} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:54:47.050" starttime="20191120 21:54:47.049"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.050" level="INFO">{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:54:47.050" starttime="20191120 21:54:47.050"></status>
</kw>
<msg timestamp="20191120 21:54:47.050" level="INFO">${result} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:54:47.050" starttime="20191120 21:54:47.038"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.051" level="INFO">To JSON using : content={"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true} </msg>
<msg timestamp="20191120 21:54:47.051" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:47.051" level="INFO">${addressMap} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:47.051" starttime="20191120 21:54:47.051"></status>
</kw>
<msg timestamp="20191120 21:54:47.051" level="INFO">${addressMap2} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:47.051" starttime="20191120 21:54:47.034"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap2}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.052" level="INFO">{u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:47.052" starttime="20191120 21:54:47.052"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap2}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:47.053" starttime="20191120 21:54:47.052"></status>
</kw>
<kw type="kw" name="${result} = mediatorPayToDepositContractParams.mediatorPayToDepositContract">
<doc></doc>
<arguments>
<arg>${mediatorAddr_02}</arg>
<arg>${medDepositAmount}</arg>
</arguments>
<kw type="kw" name="${Mediator交付保证金所需参数} = mediatorPayToDepositContractParams.Mediator交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MediatorPayToDepositContract</arg>
</arguments>
<msg timestamp="20191120 21:54:47.054" level="INFO">${one} = [u'MediatorPayToDepositContract']</msg>
<status status="PASS" endtime="20191120 21:54:47.054" starttime="20191120 21:54:47.054"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.055" level="INFO">${two} = [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'50', u'1', [u'MediatorPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:54:47.055" starttime="20191120 21:54:47.055"></status>
</kw>
<msg timestamp="20191120 21:54:47.055" level="INFO">${Mediator交付保证金所需参数} = [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'50', u'1', [u'MediatorPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:54:47.055" starttime="20191120 21:54:47.054"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>MediatorPayToDepositContract</arg>
<arg>${Mediator交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:47.056" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:47.056" starttime="20191120 21:54:47.056"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:47.057" level="INFO">${data} = {'params': [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'50', u'1', [u'MediatorPayToDepositContract']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvo...</msg>
<status status="PASS" endtime="20191120 21:54:47.057" starttime="20191120 21:54:47.057"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.057" level="INFO">Creating Session using : alias=MediatorPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:47.058" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:47.058" starttime="20191120 21:54:47.057"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.062" level="INFO">Post Request using : alias=MediatorPayToDepositContract, uri=http://127.0.0.1:8545, data={"params": ["P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "50", "1", ["MediatorPayToDepositContract"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:47.063" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:47.063" starttime="20191120 21:54:47.058"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.063" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9"}
 </msg>
<msg timestamp="20191120 21:54:47.063" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:47.064" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9'}</msg>
<status status="PASS" endtime="20191120 21:54:47.063" starttime="20191120 21:54:47.063"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:47.064" starttime="20191120 21:54:47.064"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:47.065" level="INFO">${res} = 25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9</msg>
<status status="PASS" endtime="20191120 21:54:47.065" starttime="20191120 21:54:47.065"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:47.066" level="INFO">25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9</msg>
<status status="PASS" endtime="20191120 21:54:47.066" starttime="20191120 21:54:47.065"></status>
</kw>
<msg timestamp="20191120 21:54:47.066" level="INFO">${result} = 25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9</msg>
<status status="PASS" endtime="20191120 21:54:47.066" starttime="20191120 21:54:47.055"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:53.068" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:53.069" starttime="20191120 21:54:47.066"></status>
</kw>
<msg timestamp="20191120 21:54:53.070" level="INFO">${result} = 25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9</msg>
<status status="PASS" endtime="20191120 21:54:53.070" starttime="20191120 21:54:47.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.073" level="INFO">25a8317c125c9c5a38b664cd9970b32ee3babea325fe0caa67449d36556031c9</msg>
<status status="PASS" endtime="20191120 21:54:53.073" starttime="20191120 21:54:53.072"></status>
</kw>
<kw type="kw" name="${addressMap3} = getListForMediatorCandidateParams.getListForMediatorCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:53.079" level="INFO">${one} = [u'GetListForMediatorCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:53.079" starttime="20191120 21:54:53.078"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.082" level="INFO">${two} = [[u'GetListForMediatorCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:53.082" starttime="20191120 21:54:53.081"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:53.090" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:53.089" starttime="20191120 21:54:53.088"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:53.092" level="INFO">${data} = {'params': [[u'GetListForMediatorCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:53.092" starttime="20191120 21:54:53.091"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.092" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:53.093" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.093" starttime="20191120 21:54:53.092"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.097" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForMediatorCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:53.098" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.098" starttime="20191120 21:54:53.093"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.098" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:53.098" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.098" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:54:53.098" starttime="20191120 21:54:53.098"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.099" starttime="20191120 21:54:53.099"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:53.100" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs...</msg>
<status status="PASS" endtime="20191120 21:54:53.100" starttime="20191120 21:54:53.099"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.100" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:53.100" starttime="20191120 21:54:53.100"></status>
</kw>
<msg timestamp="20191120 21:54:53.100" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs...</msg>
<status status="PASS" endtime="20191120 21:54:53.100" starttime="20191120 21:54:53.084"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.101" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:53.101" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.101" level="INFO">${addressMap} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9K...</msg>
<status status="PASS" endtime="20191120 21:54:53.101" starttime="20191120 21:54:53.101"></status>
</kw>
<msg timestamp="20191120 21:54:53.101" level="INFO">${addressMap3} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9K...</msg>
<status status="PASS" endtime="20191120 21:54:53.101" starttime="20191120 21:54:53.075"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap3}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.102" level="INFO">{u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:53.102" starttime="20191120 21:54:53.101"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap3}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.102" starttime="20191120 21:54:53.102"></status>
</kw>
<kw type="kw" name="${resul} = getListForJuryCandidateParams.getListForJuryCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<msg timestamp="20191120 21:54:53.103" level="INFO">${one} = [u'GetListForJuryCandidate']</msg>
<status status="PASS" endtime="20191120 21:54:53.103" starttime="20191120 21:54:53.103"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.104" level="INFO">${two} = [[u'GetListForJuryCandidate']]</msg>
<status status="PASS" endtime="20191120 21:54:53.104" starttime="20191120 21:54:53.104"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:53.105" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:53.105" starttime="20191120 21:54:53.105"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:53.105" level="INFO">${data} = {'params': [[u'GetListForJuryCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:53.105" starttime="20191120 21:54:53.105"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.106" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:53.106" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.106" starttime="20191120 21:54:53.106"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.111" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForJuryCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:53.112" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.111" starttime="20191120 21:54:53.107"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.112" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:54:53.112" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.112" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:54:53.112" starttime="20191120 21:54:53.112"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.113" starttime="20191120 21:54:53.113"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:53.113" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs...</msg>
<status status="PASS" endtime="20191120 21:54:53.113" starttime="20191120 21:54:53.113"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.114" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:54:53.114" starttime="20191120 21:54:53.113"></status>
</kw>
<msg timestamp="20191120 21:54:53.114" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs...</msg>
<status status="PASS" endtime="20191120 21:54:53.114" starttime="20191120 21:54:53.104"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.114" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:54:53.114" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.114" level="INFO">${addressMap} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9K...</msg>
<status status="PASS" endtime="20191120 21:54:53.114" starttime="20191120 21:54:53.114"></status>
</kw>
<msg timestamp="20191120 21:54:53.115" level="INFO">${resul} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9K...</msg>
<status status="PASS" endtime="20191120 21:54:53.114" starttime="20191120 21:54:53.103"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${resul}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.115" starttime="20191120 21:54:53.115"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.116" level="INFO">{u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:54:53.116" starttime="20191120 21:54:53.115"></status>
</kw>
<kw type="kw" name="${mDeposit} = getMediatorDepositWithAddrParams.getMediatorDepositWithAddr">
<doc></doc>
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<kw type="kw" name="${11} = getMediatorDepositWithAddrParams.获取某个节点的账户">
<doc></doc>
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetMediatorDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.118" level="INFO">${one} = [u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']</msg>
<status status="PASS" endtime="20191120 21:54:53.118" starttime="20191120 21:54:53.117"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.118" level="INFO">${two} = [[u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']]</msg>
<status status="PASS" endtime="20191120 21:54:53.118" starttime="20191120 21:54:53.118"></status>
</kw>
<msg timestamp="20191120 21:54:53.118" level="INFO">${11} = [[u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']]</msg>
<status status="PASS" endtime="20191120 21:54:53.118" starttime="20191120 21:54:53.117"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetMediatorDeposit</arg>
<arg>${11}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:53.120" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:53.119" starttime="20191120 21:54:53.119"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:53.120" level="INFO">${data} = {'params': [[u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:53.120" starttime="20191120 21:54:53.120"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.120" level="INFO">Creating Session using : alias=GetMediatorDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:53.121" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.121" starttime="20191120 21:54:53.120"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.127" level="INFO">Post Request using : alias=GetMediatorDeposit, uri=http://127.0.0.1:8545, data={"params": [["GetMediatorDeposit", "P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:53.127" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.127" starttime="20191120 21:54:53.121"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.127" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"apply_enter_time\":\"2019-11-20 13:54:30 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"2019-11-20 13:54:30 UTC\",\"balance\":\"50\",\"enter_time\":\"2019-11-20 13:54:30 UTC\",\"role\":\"Mediator\"}"}
 </msg>
<msg timestamp="20191120 21:54:53.127" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.128" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:30 UTC","balance":"50","enter_time"...</msg>
<status status="PASS" endtime="20191120 21:54:53.128" starttime="20191120 21:54:53.127"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.128" starttime="20191120 21:54:53.128"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:53.128" level="INFO">${res} = {"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:30 UTC","balance":"50","enter_time":"2019-11-20 13:54:30 UTC","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:53.128" starttime="20191120 21:54:53.128"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.129" level="INFO">{"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:30 UTC","balance":"50","enter_time":"2019-11-20 13:54:30 UTC","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:53.129" starttime="20191120 21:54:53.129"></status>
</kw>
<msg timestamp="20191120 21:54:53.129" level="INFO">${result} = {"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:30 UTC","balance":"50","enter_time":"2019-11-20 13:54:30 UTC","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:54:53.129" starttime="20191120 21:54:53.119"></status>
</kw>
<kw type="kw" name="${balance} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.130" level="INFO">To JSON using : content={"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Approved","agree_time":"2019-11-20 13:54:30 UTC","balance":"50","enter_time":"2019-11-20 13:54:30 UTC","role":"Mediator"} </msg>
<msg timestamp="20191120 21:54:53.130" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.130" level="INFO">${balance} = {u'status': u'Approved', u'agree_time': u'2019-11-20 13:54:30 UTC', u'enter_time': u'2019-11-20 13:54:30 UTC', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:54:30 UTC', u'balance': u'50',...</msg>
<status status="PASS" endtime="20191120 21:54:53.130" starttime="20191120 21:54:53.129"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${balance}</arg>
<arg>balance</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.130" starttime="20191120 21:54:53.130"></status>
</kw>
<msg timestamp="20191120 21:54:53.130" level="INFO">${mDeposit} = {u'status': u'Approved', u'agree_time': u'2019-11-20 13:54:30 UTC', u'enter_time': u'2019-11-20 13:54:30 UTC', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:54:30 UTC', u'balance': u'50',...</msg>
<status status="PASS" endtime="20191120 21:54:53.130" starttime="20191120 21:54:53.116"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mDeposit}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.131" level="INFO">{u'status': u'Approved', u'agree_time': u'2019-11-20 13:54:30 UTC', u'enter_time': u'2019-11-20 13:54:30 UTC', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:54:30 UTC', u'balance': u'50', u'apply_quit_time': u''}</msg>
<status status="PASS" endtime="20191120 21:54:53.131" starttime="20191120 21:54:53.131"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Be Equal">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${mDeposit["balance"]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191120 21:54:53.131" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.131" starttime="20191120 21:54:53.131"></status>
</kw>
<kw type="kw" name="${result} = applyForForfeitureDepositParams.applyForForfeitureDeposit">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr_02}</arg>
<arg>Mediator</arg>
<arg>nothing to do</arg>
</arguments>
<kw type="kw" name="${lala} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyForForfeitureDeposit</arg>
<arg>${forfeitureAddr}</arg>
<arg>${role}</arg>
<arg>${extra}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.133" level="INFO">${lala} = [u'ApplyForForfeitureDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Mediator', u'nothing to do']</msg>
<status status="PASS" endtime="20191120 21:54:53.133" starttime="20191120 21:54:53.132"></status>
</kw>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${whoApply}</arg>
<arg>${whoApply}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${lala}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.133" level="INFO">${one} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'ApplyForForfeitureDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Mediator', u'nothing to do']]</msg>
<status status="PASS" endtime="20191120 21:54:53.133" starttime="20191120 21:54:53.133"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyForForfeitureDeposit</arg>
<arg>${one}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:53.135" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:53.134" starttime="20191120 21:54:53.134"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:53.135" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'ApplyForForfeitureDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Mediator', u'nothing to...</msg>
<status status="PASS" endtime="20191120 21:54:53.135" starttime="20191120 21:54:53.135"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.136" level="INFO">Creating Session using : alias=ApplyForForfeitureDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:53.136" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.136" starttime="20191120 21:54:53.135"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.140" level="INFO">Post Request using : alias=ApplyForForfeitureDeposit, uri=http://127.0.0.1:8545, data={"params": ["P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "1", "1", ["ApplyForForfeitureDeposit", "P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2", "Mediator", "nothing to do"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:53.140" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:53.140" starttime="20191120 21:54:53.136"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.141" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2"}
 </msg>
<msg timestamp="20191120 21:54:53.141" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:53.141" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2'}</msg>
<status status="PASS" endtime="20191120 21:54:53.141" starttime="20191120 21:54:53.140"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:53.142" starttime="20191120 21:54:53.141"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:53.142" level="INFO">${res} = de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2</msg>
<status status="PASS" endtime="20191120 21:54:53.142" starttime="20191120 21:54:53.142"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:53.142" level="INFO">de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2</msg>
<status status="PASS" endtime="20191120 21:54:53.143" starttime="20191120 21:54:53.142"></status>
</kw>
<msg timestamp="20191120 21:54:53.143" level="INFO">${result} = de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2</msg>
<status status="PASS" endtime="20191120 21:54:53.143" starttime="20191120 21:54:53.134"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:54:59.145" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:54:59.145" starttime="20191120 21:54:53.143"></status>
</kw>
<msg timestamp="20191120 21:54:59.145" level="INFO">${result} = de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2</msg>
<status status="PASS" endtime="20191120 21:54:59.145" starttime="20191120 21:54:53.132"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.146" level="INFO">de70ed567e532c6eae33b851eafa4ee839fdff22f9f88c556ffcdc1cabed90f2</msg>
<status status="PASS" endtime="20191120 21:54:59.146" starttime="20191120 21:54:59.146"></status>
</kw>
<kw type="kw" name="${result} = getListForForfeitureApplicationParams.getListForForfeitureApplication">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForForfeitureApplication</arg>
</arguments>
<msg timestamp="20191120 21:54:59.147" level="INFO">${one} = [u'GetListForForfeitureApplication']</msg>
<status status="PASS" endtime="20191120 21:54:59.147" starttime="20191120 21:54:59.147"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.148" level="INFO">${two} = [[u'GetListForForfeitureApplication']]</msg>
<status status="PASS" endtime="20191120 21:54:59.148" starttime="20191120 21:54:59.147"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForForfeitureApplication</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:59.149" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:59.149" starttime="20191120 21:54:59.149"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:59.149" level="INFO">${data} = {'params': [[u'GetListForForfeitureApplication']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:54:59.149" starttime="20191120 21:54:59.149"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.150" level="INFO">Creating Session using : alias=GetListForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:59.150" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:59.150" starttime="20191120 21:54:59.150"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.168" level="INFO">Post Request using : alias=GetListForForfeitureApplication, uri=http://127.0.0.1:8545, data={"params": [["GetListForForfeitureApplication"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:59.169" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:59.169" starttime="20191120 21:54:59.150"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.171" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":{\"apply_address\":\"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF\",\"forfeiture_role\":\"Mediator\",\"extra\":\"nothing to do\",\"apply_time\":\"2019-11-20 13:54:30 UTC\"}}"}
 </msg>
<msg timestamp="20191120 21:54:59.172" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:59.172" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_address":"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF","forfeiture_role":"Mediator","extra":"nothing to do","apply...</msg>
<status status="PASS" endtime="20191120 21:54:59.172" starttime="20191120 21:54:59.170"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:59.174" starttime="20191120 21:54:59.174"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:59.177" level="INFO">${res} = {"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_address":"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF","forfeiture_role":"Mediator","extra":"nothing to do","apply_time":"2019-11-20 13:54:30 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:59.176" starttime="20191120 21:54:59.176"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.179" level="INFO">{"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_address":"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF","forfeiture_role":"Mediator","extra":"nothing to do","apply_time":"2019-11-20 13:54:30 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:59.180" starttime="20191120 21:54:59.178"></status>
</kw>
<msg timestamp="20191120 21:54:59.181" level="INFO">${result} = {"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_address":"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF","forfeiture_role":"Mediator","extra":"nothing to do","apply_time":"2019-11-20 13:54:30 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:59.181" starttime="20191120 21:54:59.148"></status>
</kw>
<msg timestamp="20191120 21:54:59.182" level="INFO">${result} = {"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_address":"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF","forfeiture_role":"Mediator","extra":"nothing to do","apply_time":"2019-11-20 13:54:30 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:59.182" starttime="20191120 21:54:59.146"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.184" level="INFO">{"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_address":"P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF","forfeiture_role":"Mediator","extra":"nothing to do","apply_time":"2019-11-20 13:54:30 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:54:59.184" starttime="20191120 21:54:59.183"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:59.185" starttime="20191120 21:54:59.185"></status>
</kw>
<kw type="kw" name="${result} = handleForForfeitureApplicationParams.handleForForfeitureApplication">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${mediatorAddr_02}</arg>
<arg>Ok</arg>
</arguments>
<kw type="kw" name="${基金会处理没收请求所需参数} = handleForForfeitureApplicationParams.基金会处理没收请求所需参数">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${addr}</arg>
<arg>${isAgree}</arg>
</arguments>
<kw type="kw" name="${1} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HandleForForfeitureApplication</arg>
<arg>${addr}</arg>
<arg>${isAgree}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.188" level="INFO">${1} = [u'HandleForForfeitureApplication', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']</msg>
<status status="PASS" endtime="20191120 21:54:59.187" starttime="20191120 21:54:59.187"></status>
</kw>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${1}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.188" level="INFO">${one} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForForfeitureApplication', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:59.188" starttime="20191120 21:54:59.188"></status>
</kw>
<msg timestamp="20191120 21:54:59.188" level="INFO">${基金会处理没收请求所需参数} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForForfeitureApplication', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:54:59.188" starttime="20191120 21:54:59.187"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>HandleForForfeitureApplication</arg>
<arg>${基金会处理没收请求所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:54:59.190" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:54:59.190" starttime="20191120 21:54:59.189"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:54:59.190" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForForfeitureApplication', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2', u'Ok']], 'jsonrpc': ...</msg>
<status status="PASS" endtime="20191120 21:54:59.190" starttime="20191120 21:54:59.190"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.191" level="INFO">Creating Session using : alias=HandleForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:54:59.191" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:54:59.191" starttime="20191120 21:54:59.190"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.195" level="INFO">Post Request using : alias=HandleForForfeitureApplication, uri=http://127.0.0.1:8545, data={"params": ["P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "1", "1", ["HandleForForfeitureApplication", "P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2", "Ok"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:54:59.195" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:54:59.195" starttime="20191120 21:54:59.191"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.196" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6"}
 </msg>
<msg timestamp="20191120 21:54:59.196" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:54:59.196" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6'}</msg>
<status status="PASS" endtime="20191120 21:54:59.196" starttime="20191120 21:54:59.195"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:54:59.196" starttime="20191120 21:54:59.196"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:54:59.197" level="INFO">${res} = abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6</msg>
<status status="PASS" endtime="20191120 21:54:59.197" starttime="20191120 21:54:59.197"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:54:59.197" level="INFO">abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6</msg>
<status status="PASS" endtime="20191120 21:54:59.197" starttime="20191120 21:54:59.197"></status>
</kw>
<msg timestamp="20191120 21:54:59.198" level="INFO">${result} = abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6</msg>
<status status="PASS" endtime="20191120 21:54:59.197" starttime="20191120 21:54:59.189"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:55:05.199" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:55:05.200" starttime="20191120 21:54:59.198"></status>
</kw>
<msg timestamp="20191120 21:55:05.201" level="INFO">${result} = abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6</msg>
<status status="PASS" endtime="20191120 21:55:05.201" starttime="20191120 21:54:59.186"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.203" level="INFO">abf967ab50649d9d8e048d1155a72ca0b310a035713c5cb335de9d8e43fd60d6</msg>
<status status="PASS" endtime="20191120 21:55:05.204" starttime="20191120 21:55:05.203"></status>
</kw>
<kw type="kw" name="${result} = getMediatorDepositWithAddrParams.getMediatorDepositWithAddr">
<doc></doc>
<arguments>
<arg>${mediatorAddr_02}</arg>
</arguments>
<kw type="kw" name="${11} = getMediatorDepositWithAddrParams.获取某个节点的账户">
<doc></doc>
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetMediatorDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.213" level="INFO">${one} = [u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']</msg>
<status status="PASS" endtime="20191120 21:55:05.213" starttime="20191120 21:55:05.212"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.215" level="INFO">${two} = [[u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']]</msg>
<status status="PASS" endtime="20191120 21:55:05.215" starttime="20191120 21:55:05.214"></status>
</kw>
<msg timestamp="20191120 21:55:05.216" level="INFO">${11} = [[u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']]</msg>
<status status="PASS" endtime="20191120 21:55:05.216" starttime="20191120 21:55:05.209"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetMediatorDeposit</arg>
<arg>${11}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.222" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.222" starttime="20191120 21:55:05.221"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.225" level="INFO">${data} = {'params': [[u'GetMediatorDeposit', u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.224" starttime="20191120 21:55:05.223"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.227" level="INFO">Creating Session using : alias=GetMediatorDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.228" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.228" starttime="20191120 21:55:05.226"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.245" level="INFO">Post Request using : alias=GetMediatorDeposit, uri=http://127.0.0.1:8545, data={"params": [["GetMediatorDeposit", "P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.245" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.245" starttime="20191120 21:55:05.229"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.245" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"apply_enter_time\":\"2019-11-20 13:54:30 UTC\",\"apply_quit_time\":\"\",\"status\":\"Quited\",\"agree_time\":\"2019-11-20 13:54:30 UTC\",\"balance\":\"0\",\"enter_time\":\"\",\"role\":\"Mediator\"}"}
 </msg>
<msg timestamp="20191120 21:55:05.245" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.246" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":"0","enter_time":""...</msg>
<status status="PASS" endtime="20191120 21:55:05.245" starttime="20191120 21:55:05.245"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.246" starttime="20191120 21:55:05.246"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.247" level="INFO">${res} = {"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":"0","enter_time":"","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:55:05.246" starttime="20191120 21:55:05.246"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.247" level="INFO">{"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":"0","enter_time":"","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:55:05.247" starttime="20191120 21:55:05.247"></status>
</kw>
<msg timestamp="20191120 21:55:05.247" level="INFO">${result} = {"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":"0","enter_time":"","role":"Mediator"}</msg>
<status status="PASS" endtime="20191120 21:55:05.247" starttime="20191120 21:55:05.217"></status>
</kw>
<kw type="kw" name="${balance} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.247" level="INFO">To JSON using : content={"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":"0","enter_time":"","role":"Mediator"} </msg>
<msg timestamp="20191120 21:55:05.248" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.248" level="INFO">${balance} = {u'status': u'Quited', u'agree_time': u'2019-11-20 13:54:30 UTC', u'enter_time': u'', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:54:30 UTC', u'balance': u'0', u'apply_quit_time': u''}</msg>
<status status="PASS" endtime="20191120 21:55:05.248" starttime="20191120 21:55:05.247"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${balance}</arg>
<arg>balance</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.248" starttime="20191120 21:55:05.248"></status>
</kw>
<msg timestamp="20191120 21:55:05.248" level="INFO">${result} = {u'status': u'Quited', u'agree_time': u'2019-11-20 13:54:30 UTC', u'enter_time': u'', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:54:30 UTC', u'balance': u'0', u'apply_quit_time': u''}</msg>
<status status="PASS" endtime="20191120 21:55:05.248" starttime="20191120 21:55:05.206"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.249" level="INFO">{u'status': u'Quited', u'agree_time': u'2019-11-20 13:54:30 UTC', u'enter_time': u'', u'role': u'Mediator', u'apply_enter_time': u'2019-11-20 13:54:30 UTC', u'balance': u'0', u'apply_quit_time': u''}</msg>
<status status="PASS" endtime="20191120 21:55:05.249" starttime="20191120 21:55:05.249"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Be Equal">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<msg timestamp="20191120 21:55:05.249" level="INFO">Argument types are:
&lt;type 'dict'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.249" starttime="20191120 21:55:05.249"></status>
</kw>
<kw type="kw" name="${result} = getAgreeForBecomeMediatorListParams.getAgreeForBecomeMediatorList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAgreeForBecomeMediatorList</arg>
</arguments>
<msg timestamp="20191120 21:55:05.251" level="INFO">${one} = [u'GetAgreeForBecomeMediatorList']</msg>
<status status="PASS" endtime="20191120 21:55:05.251" starttime="20191120 21:55:05.250"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.251" level="INFO">${two} = [[u'GetAgreeForBecomeMediatorList']]</msg>
<status status="PASS" endtime="20191120 21:55:05.251" starttime="20191120 21:55:05.251"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAgreeForBecomeMediatorList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.252" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.252" starttime="20191120 21:55:05.252"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.253" level="INFO">${data} = {'params': [[u'GetAgreeForBecomeMediatorList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.253" starttime="20191120 21:55:05.252"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.253" level="INFO">Creating Session using : alias=GetAgreeForBecomeMediatorList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.253" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.253" starttime="20191120 21:55:05.253"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.258" level="INFO">Post Request using : alias=GetAgreeForBecomeMediatorList, uri=http://127.0.0.1:8545, data={"params": [["GetAgreeForBecomeMediatorList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.259" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.258" starttime="20191120 21:55:05.254"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.259" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":true,\"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":true}"}
 </msg>
<msg timestamp="20191120 21:55:05.259" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.259" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}'}</msg>
<status status="PASS" endtime="20191120 21:55:05.259" starttime="20191120 21:55:05.259"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.260" starttime="20191120 21:55:05.260"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.260" level="INFO">${res} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:55:05.260" starttime="20191120 21:55:05.260"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.261" level="INFO">{"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:55:05.261" starttime="20191120 21:55:05.260"></status>
</kw>
<msg timestamp="20191120 21:55:05.261" level="INFO">${result} = {"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true}</msg>
<status status="PASS" endtime="20191120 21:55:05.261" starttime="20191120 21:55:05.251"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.261" level="INFO">To JSON using : content={"P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":true,"P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":true} </msg>
<msg timestamp="20191120 21:55:05.261" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.261" level="INFO">${addressMap} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:55:05.261" starttime="20191120 21:55:05.261"></status>
</kw>
<msg timestamp="20191120 21:55:05.261" level="INFO">${result} = {u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:55:05.261" starttime="20191120 21:55:05.250"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.262" level="INFO">{u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS': True, u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2': True}</msg>
<status status="PASS" endtime="20191120 21:55:05.262" starttime="20191120 21:55:05.262"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.263" starttime="20191120 21:55:05.262"></status>
</kw>
<kw type="kw" name="${result} = getListForMediatorCandidateParams.getListForMediatorCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForMediatorCandidate</arg>
</arguments>
<msg timestamp="20191120 21:55:05.264" level="INFO">${one} = [u'GetListForMediatorCandidate']</msg>
<status status="PASS" endtime="20191120 21:55:05.264" starttime="20191120 21:55:05.263"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.264" level="INFO">${two} = [[u'GetListForMediatorCandidate']]</msg>
<status status="PASS" endtime="20191120 21:55:05.264" starttime="20191120 21:55:05.264"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForMediatorCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.265" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.265" starttime="20191120 21:55:05.265"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.266" level="INFO">${data} = {'params': [[u'GetListForMediatorCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.266" starttime="20191120 21:55:05.266"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.266" level="INFO">Creating Session using : alias=GetListForMediatorCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.266" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.267" starttime="20191120 21:55:05.266"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.272" level="INFO">Post Request using : alias=GetListForMediatorCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForMediatorCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.272" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.272" starttime="20191120 21:55:05.267"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.273" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:55:05.273" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.273" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:55:05.273" starttime="20191120 21:55:05.273"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.274" starttime="20191120 21:55:05.273"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.274" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:55:05.274" starttime="20191120 21:55:05.274"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.274" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:55:05.274" starttime="20191120 21:55:05.274"></status>
</kw>
<msg timestamp="20191120 21:55:05.275" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:55:05.275" starttime="20191120 21:55:05.264"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.275" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:55:05.275" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.275" level="INFO">${addressMap} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:55:05.275" starttime="20191120 21:55:05.275"></status>
</kw>
<msg timestamp="20191120 21:55:05.275" level="INFO">${result} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:55:05.275" starttime="20191120 21:55:05.263"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.276" level="INFO">{u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True}</msg>
<status status="PASS" endtime="20191120 21:55:05.276" starttime="20191120 21:55:05.276"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.277" starttime="20191120 21:55:05.276"></status>
</kw>
<kw type="kw" name="${result} = getListForForfeitureApplicationParams.getListForForfeitureApplication">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForForfeitureApplication</arg>
</arguments>
<msg timestamp="20191120 21:55:05.278" level="INFO">${one} = [u'GetListForForfeitureApplication']</msg>
<status status="PASS" endtime="20191120 21:55:05.278" starttime="20191120 21:55:05.277"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.278" level="INFO">${two} = [[u'GetListForForfeitureApplication']]</msg>
<status status="PASS" endtime="20191120 21:55:05.278" starttime="20191120 21:55:05.278"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForForfeitureApplication</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.279" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.279" starttime="20191120 21:55:05.279"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.280" level="INFO">${data} = {'params': [[u'GetListForForfeitureApplication']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.280" starttime="20191120 21:55:05.280"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.280" level="INFO">Creating Session using : alias=GetListForForfeitureApplication, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.281" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.281" starttime="20191120 21:55:05.280"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.285" level="INFO">Post Request using : alias=GetListForForfeitureApplication, uri=http://127.0.0.1:8545, data={"params": [["GetListForForfeitureApplication"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.286" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.285" starttime="20191120 21:55:05.281"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.286" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{}"}
 </msg>
<msg timestamp="20191120 21:55:05.286" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.286" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{}'}</msg>
<status status="PASS" endtime="20191120 21:55:05.286" starttime="20191120 21:55:05.286"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.287" starttime="20191120 21:55:05.287"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.287" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:55:05.287" starttime="20191120 21:55:05.287"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.288" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:55:05.288" starttime="20191120 21:55:05.288"></status>
</kw>
<msg timestamp="20191120 21:55:05.288" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:55:05.288" starttime="20191120 21:55:05.278"></status>
</kw>
<msg timestamp="20191120 21:55:05.288" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:55:05.288" starttime="20191120 21:55:05.277"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.289" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:55:05.289" starttime="20191120 21:55:05.288"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.289" starttime="20191120 21:55:05.289"></status>
</kw>
<kw type="kw" name="${resul} = getListForJuryCandidateParams.getListForJuryCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<msg timestamp="20191120 21:55:05.290" level="INFO">${one} = [u'GetListForJuryCandidate']</msg>
<status status="PASS" endtime="20191120 21:55:05.290" starttime="20191120 21:55:05.290"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.291" level="INFO">${two} = [[u'GetListForJuryCandidate']]</msg>
<status status="PASS" endtime="20191120 21:55:05.291" starttime="20191120 21:55:05.291"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.292" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.292" starttime="20191120 21:55:05.292"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.292" level="INFO">${data} = {'params': [[u'GetListForJuryCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.292" starttime="20191120 21:55:05.292"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.293" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.293" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.293" starttime="20191120 21:55:05.293"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.299" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForJuryCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.299" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.299" starttime="20191120 21:55:05.294"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.299" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:55:05.299" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.300" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:55:05.300" starttime="20191120 21:55:05.299"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.300" starttime="20191120 21:55:05.300"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.301" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:55:05.300" starttime="20191120 21:55:05.300"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.301" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:55:05.301" starttime="20191120 21:55:05.301"></status>
</kw>
<msg timestamp="20191120 21:55:05.301" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:55:05.301" starttime="20191120 21:55:05.291"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.302" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:55:05.302" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.302" level="INFO">${addressMap} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:55:05.302" starttime="20191120 21:55:05.301"></status>
</kw>
<msg timestamp="20191120 21:55:05.302" level="INFO">${resul} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:55:05.302" starttime="20191120 21:55:05.289"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${resul}</arg>
<arg>${mediatorAddr_02}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.303" starttime="20191120 21:55:05.302"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.303" level="INFO">{u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True}</msg>
<status status="PASS" endtime="20191120 21:55:05.303" starttime="20191120 21:55:05.303"></status>
</kw>
<kw type="kw" name="GetAllMediators.GetAllMediators">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAllMediator</arg>
</arguments>
<msg timestamp="20191120 21:55:05.304" level="INFO">${one} = [u'GetAllMediator']</msg>
<status status="PASS" endtime="20191120 21:55:05.304" starttime="20191120 21:55:05.304"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.305" level="INFO">${two} = [[u'GetAllMediator']]</msg>
<status status="PASS" endtime="20191120 21:55:05.305" starttime="20191120 21:55:05.305"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAllMediator</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.306" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.306" starttime="20191120 21:55:05.306"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.306" level="INFO">${data} = {'params': [[u'GetAllMediator']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.306" starttime="20191120 21:55:05.306"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.307" level="INFO">Creating Session using : alias=GetAllMediator, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.307" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.307" starttime="20191120 21:55:05.307"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.312" level="INFO">Post Request using : alias=GetAllMediator, uri=http://127.0.0.1:8545, data={"params": [["GetAllMediator"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.313" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.313" starttime="20191120 21:55:05.307"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.313" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS\":{\"apply_enter_time\":\"2019-11-20 13:53:30 UTC\",\"apply_quit_time\":\"2019-11-20 13:54:00 UTC\",\"status\":\"Quited\",\"agree_time\":\"2019-11-20 13:54:00 UTC\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2\":{\"apply_enter_time\":\"2019-11-20 13:54:30 UTC\",\"apply_quit_time\":\"\",\"status\":\"Quited\",\"agree_time\":\"2019-11-20 13:54:30 UTC\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"},\"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":{\"apply_enter_time\":\"2019-11-20 13:51:42 UTC\",\"apply_quit_time\":\"\",\"status\":\"Approved\",\"agree_time\":\"\",\"balance\":0,\"enter_time\":\"\",\"role\":\"Mediator\"}}"}
 </msg>
<msg timestamp="20191120 21:55:05.313" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.313" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balanc...</msg>
<status status="PASS" endtime="20191120 21:55:05.313" starttime="20191120 21:55:05.313"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.314" starttime="20191120 21:55:05.314"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.314" level="INFO">${res} = {"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1...</msg>
<status status="PASS" endtime="20191120 21:55:05.314" starttime="20191120 21:55:05.314"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.315" level="INFO">{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":0,"enter_time":"","role":"Mediator"},"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":0,"enter_time":"","role":"Mediator"},"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"}}</msg>
<status status="PASS" endtime="20191120 21:55:05.315" starttime="20191120 21:55:05.315"></status>
</kw>
<msg timestamp="20191120 21:55:05.315" level="INFO">${result} = {"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1...</msg>
<status status="PASS" endtime="20191120 21:55:05.315" starttime="20191120 21:55:05.305"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.315" level="INFO">{"midbP17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS":{"apply_enter_time":"2019-11-20 13:53:30 UTC","apply_quit_time":"2019-11-20 13:54:00 UTC","status":"Quited","agree_time":"2019-11-20 13:54:00 UTC","balance":0,"enter_time":"","role":"Mediator"},"midbP1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"},"midbP1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2":{"apply_enter_time":"2019-11-20 13:54:30 UTC","apply_quit_time":"","status":"Quited","agree_time":"2019-11-20 13:54:30 UTC","balance":0,"enter_time":"","role":"Mediator"},"midbP1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"apply_enter_time":"2019-11-20 13:51:42 UTC","apply_quit_time":"","status":"Approved","agree_time":"","balance":0,"enter_time":"","role":"Mediator"}}</msg>
<status status="PASS" endtime="20191120 21:55:05.315" starttime="20191120 21:55:05.315"></status>
</kw>
<status status="PASS" endtime="20191120 21:55:05.316" starttime="20191120 21:55:05.304"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.317" level="INFO">${two} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']</msg>
<status status="PASS" endtime="20191120 21:55:05.317" starttime="20191120 21:55:05.316"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.318" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.318" starttime="20191120 21:55:05.318"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.318" level="INFO">${data} = {'params': [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.318" starttime="20191120 21:55:05.318"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.319" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.319" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.319" starttime="20191120 21:55:05.319"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.322" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.322" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.322" starttime="20191120 21:55:05.319"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.323" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20191120 21:55:05.323" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.323" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20191120 21:55:05.323" starttime="20191120 21:55:05.322"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.323" starttime="20191120 21:55:05.323"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.324" level="INFO">${res} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.324" starttime="20191120 21:55:05.323"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.324" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.324" starttime="20191120 21:55:05.324"></status>
</kw>
<msg timestamp="20191120 21:55:05.324" level="INFO">${result} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.324" starttime="20191120 21:55:05.317"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.325" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.325" starttime="20191120 21:55:05.324"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.325" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:55:05.325" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:55:05.325" starttime="20191120 21:55:05.325"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.326" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.326" starttime="20191120 21:55:05.325"></status>
</kw>
<msg timestamp="20191120 21:55:05.326" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.326" starttime="20191120 21:55:05.316"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.327" level="INFO">10000</msg>
<status status="PASS" endtime="20191120 21:55:05.327" starttime="20191120 21:55:05.326"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${juryAddr_02}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.328" level="INFO">${two} = [u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh']</msg>
<status status="PASS" endtime="20191120 21:55:05.328" starttime="20191120 21:55:05.328"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.329" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.329" starttime="20191120 21:55:05.329"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.329" level="INFO">${data} = {'params': [u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.329" starttime="20191120 21:55:05.329"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.330" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.330" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.330" starttime="20191120 21:55:05.330"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.333" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.333" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.333" starttime="20191120 21:55:05.330"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.333" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20191120 21:55:05.333" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.334" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20191120 21:55:05.333" starttime="20191120 21:55:05.333"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.334" starttime="20191120 21:55:05.334"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.334" level="INFO">${res} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.334" starttime="20191120 21:55:05.334"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.335" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.335" starttime="20191120 21:55:05.335"></status>
</kw>
<msg timestamp="20191120 21:55:05.335" level="INFO">${result} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.335" starttime="20191120 21:55:05.328"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.335" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.335" starttime="20191120 21:55:05.335"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.336" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:55:05.336" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:55:05.336" starttime="20191120 21:55:05.336"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.337" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.336" starttime="20191120 21:55:05.336"></status>
</kw>
<msg timestamp="20191120 21:55:05.337" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.337" starttime="20191120 21:55:05.327"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.337" level="INFO">10000</msg>
<status status="PASS" endtime="20191120 21:55:05.337" starttime="20191120 21:55:05.337"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${developerAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.338" level="INFO">${two} = [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7']</msg>
<status status="PASS" endtime="20191120 21:55:05.338" starttime="20191120 21:55:05.338"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.339" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.339" starttime="20191120 21:55:05.339"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.340" level="INFO">${data} = {'params': [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.340" starttime="20191120 21:55:05.340"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.340" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.341" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.341" starttime="20191120 21:55:05.340"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.343" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.343" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.343" starttime="20191120 21:55:05.341"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.344" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20191120 21:55:05.344" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.344" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20191120 21:55:05.344" starttime="20191120 21:55:05.343"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.344" starttime="20191120 21:55:05.344"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.345" level="INFO">${res} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.345" starttime="20191120 21:55:05.345"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.345" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.345" starttime="20191120 21:55:05.345"></status>
</kw>
<msg timestamp="20191120 21:55:05.345" level="INFO">${result} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.345" starttime="20191120 21:55:05.339"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.346" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.346" starttime="20191120 21:55:05.346"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.346" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:55:05.346" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:55:05.346" starttime="20191120 21:55:05.346"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.347" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.347" starttime="20191120 21:55:05.347"></status>
</kw>
<msg timestamp="20191120 21:55:05.347" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.347" starttime="20191120 21:55:05.337"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.348" level="INFO">10000</msg>
<status status="PASS" endtime="20191120 21:55:05.348" starttime="20191120 21:55:05.348"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${developerAddr_02}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.349" level="INFO">${two} = [u'P14yBcATTVv3Q5oeY163VkFyDjrktcFDdQc']</msg>
<status status="PASS" endtime="20191120 21:55:05.349" starttime="20191120 21:55:05.349"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.350" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.350" starttime="20191120 21:55:05.350"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.351" level="INFO">${data} = {'params': [u'P14yBcATTVv3Q5oeY163VkFyDjrktcFDdQc'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:05.350" starttime="20191120 21:55:05.350"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.351" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.351" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.351" starttime="20191120 21:55:05.351"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.354" level="INFO">Post Request using : alias=wallet_getBalance, uri=http://127.0.0.1:8545, data={"params": ["P14yBcATTVv3Q5oeY163VkFyDjrktcFDdQc"], "jsonrpc": "2.0", "method": "wallet_getBalance", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.354" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.354" starttime="20191120 21:55:05.351"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.354" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20191120 21:55:05.354" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.354" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20191120 21:55:05.354" starttime="20191120 21:55:05.354"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.355" starttime="20191120 21:55:05.355"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.355" level="INFO">${res} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.355" starttime="20191120 21:55:05.355"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.356" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.356" starttime="20191120 21:55:05.356"></status>
</kw>
<msg timestamp="20191120 21:55:05.356" level="INFO">${result} = {u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.356" starttime="20191120 21:55:05.349"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.356" level="INFO">{u'PTN': u'10000'}</msg>
<status status="PASS" endtime="20191120 21:55:05.356" starttime="20191120 21:55:05.356"></status>
</kw>
<kw type="kw" name="${len} = BuiltIn.Get Length">
<doc>Returns and logs the length of the given item.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.357" level="INFO">Length is 1</msg>
<msg timestamp="20191120 21:55:05.357" level="INFO">${len} = 1</msg>
<status status="PASS" endtime="20191120 21:55:05.357" starttime="20191120 21:55:05.357"></status>
</kw>
<kw type="kw" name="${amount} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${len}==0</arg>
<arg>0</arg>
<arg>${result["${assetId}"]}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.357" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.357" starttime="20191120 21:55:05.357"></status>
</kw>
<msg timestamp="20191120 21:55:05.358" level="INFO">${amount} = 10000</msg>
<status status="PASS" endtime="20191120 21:55:05.358" starttime="20191120 21:55:05.348"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.358" level="INFO">10000</msg>
<status status="PASS" endtime="20191120 21:55:05.358" starttime="20191120 21:55:05.358"></status>
</kw>
<doc>没收mediator节点

mediator节点申请并且进入申请列表-》基金会同意并移除申请列表-》进入同意列表-》节点交够保证金-》进入候选列表（自动进入Jury候选列表）-》某节点申请没收该mediator节点并进入没收列表-》基金会同意并移除候选列表，该节点的PTN转到基金会地址。结果：同意列表有该mediator节点地址，账户余额为0</doc>
<tags>
</tags>
<status status="PASS" endtime="20191120 21:55:05.358" critical="yes" starttime="20191120 21:54:34.926"></status>
</test>
<test id="s1-t3" name="Business_03">
<kw type="kw" name="${resul} = juryPayToDepositContractParams.juryPayToDepositContract">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
<arg>10</arg>
<arg>${juryAddr_01_pubkey}</arg>
</arguments>
<kw type="kw" name="${Jury交付保证金所需参数} = juryPayToDepositContractParams.Jury交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositAmounts}</arg>
<arg>${pubkey}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryPayToDepositContract</arg>
<arg>{\"public_key\":\"${pubkey}\"}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.361" level="INFO">${one} = [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232"}']</msg>
<status status="PASS" endtime="20191120 21:55:05.361" starttime="20191120 21:55:05.361"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.362" level="INFO">${two} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbc...</msg>
<status status="PASS" endtime="20191120 21:55:05.362" starttime="20191120 21:55:05.362"></status>
</kw>
<msg timestamp="20191120 21:55:05.362" level="INFO">${Jury交付保证金所需参数} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbc...</msg>
<status status="PASS" endtime="20191120 21:55:05.362" starttime="20191120 21:55:05.360"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryPayToDepositContract</arg>
<arg>${Jury交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:05.363" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:05.363" starttime="20191120 21:55:05.363"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:05.364" level="INFO">${data} = {'params': [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738dd...</msg>
<status status="PASS" endtime="20191120 21:55:05.364" starttime="20191120 21:55:05.364"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.364" level="INFO">Creating Session using : alias=JuryPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:05.365" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.365" starttime="20191120 21:55:05.364"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.368" level="INFO">Post Request using : alias=JuryPayToDepositContract, uri=http://127.0.0.1:8545, data={"params": ["P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "10", "1", ["JuryPayToDepositContract", "{\"public_key\":\"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232\"}"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:05.369" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:05.368" starttime="20191120 21:55:05.365"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.369" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294"}
 </msg>
<msg timestamp="20191120 21:55:05.369" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:05.369" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294'}</msg>
<status status="PASS" endtime="20191120 21:55:05.369" starttime="20191120 21:55:05.369"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:05.370" starttime="20191120 21:55:05.370"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:05.370" level="INFO">${res} = 15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294</msg>
<status status="PASS" endtime="20191120 21:55:05.370" starttime="20191120 21:55:05.370"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:05.371" level="INFO">15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294</msg>
<status status="PASS" endtime="20191120 21:55:05.371" starttime="20191120 21:55:05.371"></status>
</kw>
<msg timestamp="20191120 21:55:05.371" level="INFO">${result} = 15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294</msg>
<status status="PASS" endtime="20191120 21:55:05.371" starttime="20191120 21:55:05.362"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:55:11.373" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:55:11.374" starttime="20191120 21:55:05.371"></status>
</kw>
<msg timestamp="20191120 21:55:11.375" level="INFO">${resul} = 15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294</msg>
<status status="PASS" endtime="20191120 21:55:11.375" starttime="20191120 21:55:05.360"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.377" level="INFO">15d60adab8a28f22528c9acf1e0ba692f5fba6e5957e87a15ca2a408e9e8b294</msg>
<status status="PASS" endtime="20191120 21:55:11.377" starttime="20191120 21:55:11.376"></status>
</kw>
<kw type="kw" name="${result} = getJuryBalance.getJuryBalance">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetJuryDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.384" level="INFO">${one} = [u'GetJuryDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']</msg>
<status status="PASS" endtime="20191120 21:55:11.384" starttime="20191120 21:55:11.382"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.386" level="INFO">${two} = [[u'GetJuryDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']]</msg>
<status status="PASS" endtime="20191120 21:55:11.386" starttime="20191120 21:55:11.385"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetJuryDeposit</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:11.392" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:11.391" starttime="20191120 21:55:11.390"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:11.393" level="INFO">${data} = {'params': [[u'GetJuryDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:11.393" starttime="20191120 21:55:11.392"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.395" level="INFO">Creating Session using : alias=GetJuryDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:11.395" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.395" starttime="20191120 21:55:11.394"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.411" level="INFO">Post Request using : alias=GetJuryDeposit, uri=http://127.0.0.1:8545, data={"params": [["GetJuryDeposit", "P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:11.412" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.412" starttime="20191120 21:55:11.396"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.413" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"balance\":\"10\",\"enter_time\":\"2019-11-20 13:55:00 UTC\",\"role\":\"Jury\",\"public_key\":\"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232\",\"reward_address\":\"\",\"address\":\"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv\"}"}
 </msg>
<msg timestamp="20191120 21:55:11.413" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:11.414" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"balance":"10","enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232","r...</msg>
<status status="PASS" endtime="20191120 21:55:11.413" starttime="20191120 21:55:11.412"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:11.415" starttime="20191120 21:55:11.415"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:11.417" level="INFO">${res} = {"balance":"10","enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232","reward_address":"","address":"P1MxPJjzBua3ZBYNnt...</msg>
<status status="PASS" endtime="20191120 21:55:11.417" starttime="20191120 21:55:11.416"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.418" level="INFO">{"balance":"10","enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232","reward_address":"","address":"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"}</msg>
<status status="PASS" endtime="20191120 21:55:11.418" starttime="20191120 21:55:11.417"></status>
</kw>
<msg timestamp="20191120 21:55:11.419" level="INFO">${result} = {"balance":"10","enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232","reward_address":"","address":"P1MxPJjzBua3ZBYNnt...</msg>
<status status="PASS" endtime="20191120 21:55:11.419" starttime="20191120 21:55:11.387"></status>
</kw>
<msg timestamp="20191120 21:55:11.419" level="INFO">${result} = {"balance":"10","enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232","reward_address":"","address":"P1MxPJjzBua3ZBYNnt...</msg>
<status status="PASS" endtime="20191120 21:55:11.419" starttime="20191120 21:55:11.379"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.421" level="INFO">{"balance":"10","enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232","reward_address":"","address":"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"}</msg>
<status status="PASS" endtime="20191120 21:55:11.421" starttime="20191120 21:55:11.420"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Be Equal">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<msg timestamp="20191120 21:55:11.423" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.423" starttime="20191120 21:55:11.422"></status>
</kw>
<kw type="kw" name="${resul} = getListForJuryCandidateParams.getListForJuryCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<msg timestamp="20191120 21:55:11.424" level="INFO">${one} = [u'GetListForJuryCandidate']</msg>
<status status="PASS" endtime="20191120 21:55:11.424" starttime="20191120 21:55:11.424"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.425" level="INFO">${two} = [[u'GetListForJuryCandidate']]</msg>
<status status="PASS" endtime="20191120 21:55:11.425" starttime="20191120 21:55:11.424"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:11.426" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:11.426" starttime="20191120 21:55:11.426"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:11.426" level="INFO">${data} = {'params': [[u'GetListForJuryCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:11.426" starttime="20191120 21:55:11.426"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.427" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:11.427" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.427" starttime="20191120 21:55:11.427"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.434" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForJuryCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:11.434" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.434" starttime="20191120 21:55:11.427"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.435" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:55:11.435" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:11.435" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:55:11.435" starttime="20191120 21:55:11.435"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:11.436" starttime="20191120 21:55:11.435"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:11.436" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1MxPJjzBua3ZBYNntLLwbPott...</msg>
<status status="PASS" endtime="20191120 21:55:11.436" starttime="20191120 21:55:11.436"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.436" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:55:11.436" starttime="20191120 21:55:11.436"></status>
</kw>
<msg timestamp="20191120 21:55:11.437" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1MxPJjzBua3ZBYNntLLwbPott...</msg>
<status status="PASS" endtime="20191120 21:55:11.437" starttime="20191120 21:55:11.425"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.437" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:55:11.437" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:11.437" level="INFO">${addressMap} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv': True, u'P1NTj1aLk4Zp3...</msg>
<status status="PASS" endtime="20191120 21:55:11.437" starttime="20191120 21:55:11.437"></status>
</kw>
<msg timestamp="20191120 21:55:11.438" level="INFO">${resul} = {u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv': True, u'P1NTj1aLk4Zp3...</msg>
<status status="PASS" endtime="20191120 21:55:11.438" starttime="20191120 21:55:11.423"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${resul}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:11.438" starttime="20191120 21:55:11.438"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.439" level="INFO">{u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True}</msg>
<status status="PASS" endtime="20191120 21:55:11.439" starttime="20191120 21:55:11.439"></status>
</kw>
<kw type="kw" name="getAllJury.getAllJury">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAllJury</arg>
</arguments>
<msg timestamp="20191120 21:55:11.440" level="INFO">${one} = [u'GetAllJury']</msg>
<status status="PASS" endtime="20191120 21:55:11.440" starttime="20191120 21:55:11.440"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.441" level="INFO">${two} = [[u'GetAllJury']]</msg>
<status status="PASS" endtime="20191120 21:55:11.440" starttime="20191120 21:55:11.440"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAllJury</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:11.442" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:11.442" starttime="20191120 21:55:11.441"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:11.442" level="INFO">${data} = {'params': [[u'GetAllJury']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:11.442" starttime="20191120 21:55:11.442"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.443" level="INFO">Creating Session using : alias=GetAllJury, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:11.443" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.443" starttime="20191120 21:55:11.442"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.452" level="INFO">Post Request using : alias=GetAllJury, uri=http://127.0.0.1:8545, data={"params": [["GetAllJury"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:11.452" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.452" starttime="20191120 21:55:11.443"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.453" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj\",\"reward_address\":\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\",\"address\":\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\"},\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AtOniw0xn8AIoodxAFEc2xqN35sLgK/Ft5YvW2iwaNyh\",\"reward_address\":\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\",\"address\":\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\"},\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AzBlloKKohT3AMbt4ibYWX4W1OUdNpkJfhuNx9zKYI3g\",\"reward_address\":\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\",\"address\":\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\"},\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AkJtovbqCDvM/iEeKVg4x0anid3SdUSbD2rw0Mf2Yxjj\",\"reward_address\":\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\",\"address\":\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\"},\"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv\":{\"balance\":1000000000,\"enter_time\":\"2019-11-20 13:55:00 UTC\",\"role\":\"Jury\",\"public_key\":\"Ao8P+fMaxu/gKN3dNfxBNDsdtAOYlzjd/GMb9bvLOOIy\",\"reward_address\":\"P1111111111111111111114oLvT2\",\"address\":\"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv\"},\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AwtekZO22Vhd6hu5Kexrv+u07VTJBE2Fv7pyQUQoLrYX\",\"reward_address\":\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\",\"address\":\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\"}}"}
 </msg>
<msg timestamp="20191120 21:55:11.453" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:11.453" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPck...</msg>
<status status="PASS" endtime="20191120 21:55:11.453" starttime="20191120 21:55:11.452"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:11.453" starttime="20191120 21:55:11.453"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:11.454" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcgg...</msg>
<status status="PASS" endtime="20191120 21:55:11.454" starttime="20191120 21:55:11.454"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.454" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j","address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j"},"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AtOniw0xn8AIoodxAFEc2xqN35sLgK/Ft5YvW2iwaNyh","reward_address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W","address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W"},"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AzBlloKKohT3AMbt4ibYWX4W1OUdNpkJfhuNx9zKYI3g","reward_address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX","address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX"},"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AkJtovbqCDvM/iEeKVg4x0anid3SdUSbD2rw0Mf2Yxjj","reward_address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2","address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2"},"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"balance":1000000000,"enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"Ao8P+fMaxu/gKN3dNfxBNDsdtAOYlzjd/GMb9bvLOOIy","reward_address":"P1111111111111111111114oLvT2","address":"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"},"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AwtekZO22Vhd6hu5Kexrv+u07VTJBE2Fv7pyQUQoLrYX","reward_address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx","address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx"}}</msg>
<status status="PASS" endtime="20191120 21:55:11.454" starttime="20191120 21:55:11.454"></status>
</kw>
<msg timestamp="20191120 21:55:11.454" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcgg...</msg>
<status status="PASS" endtime="20191120 21:55:11.454" starttime="20191120 21:55:11.441"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.455" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j","address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j"},"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AtOniw0xn8AIoodxAFEc2xqN35sLgK/Ft5YvW2iwaNyh","reward_address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W","address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W"},"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AzBlloKKohT3AMbt4ibYWX4W1OUdNpkJfhuNx9zKYI3g","reward_address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX","address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX"},"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AkJtovbqCDvM/iEeKVg4x0anid3SdUSbD2rw0Mf2Yxjj","reward_address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2","address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2"},"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"balance":1000000000,"enter_time":"2019-11-20 13:55:00 UTC","role":"Jury","public_key":"Ao8P+fMaxu/gKN3dNfxBNDsdtAOYlzjd/GMb9bvLOOIy","reward_address":"P1111111111111111111114oLvT2","address":"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"},"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AwtekZO22Vhd6hu5Kexrv+u07VTJBE2Fv7pyQUQoLrYX","reward_address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx","address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx"}}</msg>
<status status="PASS" endtime="20191120 21:55:11.455" starttime="20191120 21:55:11.455"></status>
</kw>
<status status="PASS" endtime="20191120 21:55:11.455" starttime="20191120 21:55:11.439"></status>
</kw>
<kw type="kw" name="${result} = applyQuitMediatorParams.applyQuitMediator">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
<arg>JuryApplyQuit</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${apply}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.456" level="INFO">${one} = [u'JuryApplyQuit']</msg>
<status status="PASS" endtime="20191120 21:55:11.456" starttime="20191120 21:55:11.456"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorAddr}</arg>
<arg>${mediatorAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.457" level="INFO">${two} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'1', u'1', [u'JuryApplyQuit']]</msg>
<status status="PASS" endtime="20191120 21:55:11.457" starttime="20191120 21:55:11.456"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>${apply}</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:11.458" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:11.458" starttime="20191120 21:55:11.458"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:11.459" level="INFO">${data} = {'params': [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'1', u'1', [u'JuryApplyQuit']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvoke', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:11.459" starttime="20191120 21:55:11.458"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.459" level="INFO">Creating Session using : alias=JuryApplyQuit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:11.459" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.459" starttime="20191120 21:55:11.459"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.464" level="INFO">Post Request using : alias=JuryApplyQuit, uri=http://127.0.0.1:8545, data={"params": ["P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv", "P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv", "1", "1", ["JuryApplyQuit"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:11.464" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:11.464" starttime="20191120 21:55:11.460"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.465" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"d59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d"}
 </msg>
<msg timestamp="20191120 21:55:11.465" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:11.465" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'd59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d'}</msg>
<status status="PASS" endtime="20191120 21:55:11.465" starttime="20191120 21:55:11.464"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:11.466" starttime="20191120 21:55:11.465"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:11.466" level="INFO">${res} = d59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d</msg>
<status status="PASS" endtime="20191120 21:55:11.466" starttime="20191120 21:55:11.466"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:11.467" level="INFO">d59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d</msg>
<status status="PASS" endtime="20191120 21:55:11.467" starttime="20191120 21:55:11.466"></status>
</kw>
<msg timestamp="20191120 21:55:11.468" level="INFO">${result} = d59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d</msg>
<status status="PASS" endtime="20191120 21:55:11.467" starttime="20191120 21:55:11.457"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:55:17.469" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:55:17.470" starttime="20191120 21:55:11.468"></status>
</kw>
<msg timestamp="20191120 21:55:17.471" level="INFO">${result} = d59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d</msg>
<status status="PASS" endtime="20191120 21:55:17.471" starttime="20191120 21:55:11.455"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.474" level="INFO">d59359e353d6fa3e14fd4cc281e87d8632ab854c3993c6dbec847064a868e79d</msg>
<status status="PASS" endtime="20191120 21:55:17.474" starttime="20191120 21:55:17.473"></status>
</kw>
<kw type="kw" name="${addressMap4} = getQuitMediatorApplyListParams.getQuitMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitApplyList</arg>
</arguments>
<msg timestamp="20191120 21:55:17.480" level="INFO">${one} = [u'GetQuitApplyList']</msg>
<status status="PASS" endtime="20191120 21:55:17.479" starttime="20191120 21:55:17.479"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.482" level="INFO">${two} = [[u'GetQuitApplyList']]</msg>
<status status="PASS" endtime="20191120 21:55:17.482" starttime="20191120 21:55:17.481"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:17.487" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:17.487" starttime="20191120 21:55:17.487"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:17.490" level="INFO">${data} = {'params': [[u'GetQuitApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:17.490" starttime="20191120 21:55:17.489"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.492" level="INFO">Creating Session using : alias=GetQuitApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:17.494" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:17.494" starttime="20191120 21:55:17.491"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.514" level="INFO">Post Request using : alias=GetQuitApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetQuitApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:17.514" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:17.514" starttime="20191120 21:55:17.495"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.515" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv\":{\"role\":\"Jury\",\"time\":\"2019-11-20 13:55:00 UTC\"}}"}
 </msg>
<msg timestamp="20191120 21:55:17.515" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:17.515" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"role":"Jury","time":"2019-11-20 13:55:00 UTC"}}'}</msg>
<status status="PASS" endtime="20191120 21:55:17.515" starttime="20191120 21:55:17.514"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:17.515" starttime="20191120 21:55:17.515"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:17.516" level="INFO">${res} = {"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"role":"Jury","time":"2019-11-20 13:55:00 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:55:17.516" starttime="20191120 21:55:17.515"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.516" level="INFO">{"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"role":"Jury","time":"2019-11-20 13:55:00 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:55:17.516" starttime="20191120 21:55:17.516"></status>
</kw>
<msg timestamp="20191120 21:55:17.516" level="INFO">${result} = {"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"role":"Jury","time":"2019-11-20 13:55:00 UTC"}}</msg>
<status status="PASS" endtime="20191120 21:55:17.516" starttime="20191120 21:55:17.483"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.517" level="INFO">To JSON using : content={"P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv":{"role":"Jury","time":"2019-11-20 13:55:00 UTC"}} </msg>
<msg timestamp="20191120 21:55:17.517" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:17.517" level="INFO">${addressMap} = {u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv': {u'role': u'Jury', u'time': u'2019-11-20 13:55:00 UTC'}}</msg>
<status status="PASS" endtime="20191120 21:55:17.517" starttime="20191120 21:55:17.517"></status>
</kw>
<msg timestamp="20191120 21:55:17.517" level="INFO">${addressMap4} = {u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv': {u'role': u'Jury', u'time': u'2019-11-20 13:55:00 UTC'}}</msg>
<status status="PASS" endtime="20191120 21:55:17.517" starttime="20191120 21:55:17.475"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${addressMap4}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.518" level="INFO">{u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv': {u'role': u'Jury', u'time': u'2019-11-20 13:55:00 UTC'}}</msg>
<status status="PASS" endtime="20191120 21:55:17.518" starttime="20191120 21:55:17.517"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${addressMap4}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:17.518" starttime="20191120 21:55:17.518"></status>
</kw>
<kw type="kw" name="${result} = handleForApplyForQuitMediatorParams.handleForApplyForQuitMediator">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${juryAddr_01}</arg>
<arg>Ok</arg>
<arg>HandleForApplyQuitJury</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${handle}</arg>
<arg>${mediatorAddr}</arg>
<arg>${isAgree}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.519" level="INFO">${one} = [u'HandleForApplyQuitJury', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'Ok']</msg>
<status status="PASS" endtime="20191120 21:55:17.519" starttime="20191120 21:55:17.519"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${foundationAddr}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.520" level="INFO">${two} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForApplyQuitJury', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'Ok']]</msg>
<status status="PASS" endtime="20191120 21:55:17.520" starttime="20191120 21:55:17.520"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>${handle}</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:17.521" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:17.521" starttime="20191120 21:55:17.521"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:17.522" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'HandleForApplyQuitJury', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'Ok']], 'jsonrpc': u'2.0', ...</msg>
<status status="PASS" endtime="20191120 21:55:17.522" starttime="20191120 21:55:17.521"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.522" level="INFO">Creating Session using : alias=HandleForApplyQuitJury, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:17.522" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:17.522" starttime="20191120 21:55:17.522"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.527" level="INFO">Post Request using : alias=HandleForApplyQuitJury, uri=http://127.0.0.1:8545, data={"params": ["P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF", "1", "1", ["HandleForApplyQuitJury", "P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv", "Ok"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:17.527" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:17.527" starttime="20191120 21:55:17.523"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.528" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311"}
 </msg>
<msg timestamp="20191120 21:55:17.541" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:17.541" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311'}</msg>
<status status="PASS" endtime="20191120 21:55:17.541" starttime="20191120 21:55:17.527"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:17.542" starttime="20191120 21:55:17.541"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:17.542" level="INFO">${res} = defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311</msg>
<status status="PASS" endtime="20191120 21:55:17.542" starttime="20191120 21:55:17.542"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:17.542" level="INFO">defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311</msg>
<status status="PASS" endtime="20191120 21:55:17.543" starttime="20191120 21:55:17.542"></status>
</kw>
<msg timestamp="20191120 21:55:17.543" level="INFO">${result} = defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311</msg>
<status status="PASS" endtime="20191120 21:55:17.543" starttime="20191120 21:55:17.520"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:55:23.545" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:55:23.546" starttime="20191120 21:55:17.543"></status>
</kw>
<msg timestamp="20191120 21:55:23.547" level="INFO">${result} = defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311</msg>
<status status="PASS" endtime="20191120 21:55:23.547" starttime="20191120 21:55:17.518"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.549" level="INFO">defa259c5b65adb1c06924673bac590b31e3e61962393b2b40325ad174362311</msg>
<status status="PASS" endtime="20191120 21:55:23.550" starttime="20191120 21:55:23.549"></status>
</kw>
<kw type="kw" name="${resul} = getListForJuryCandidateParams.getListForJuryCandidate">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetListForJuryCandidate</arg>
</arguments>
<msg timestamp="20191120 21:55:23.555" level="INFO">${one} = [u'GetListForJuryCandidate']</msg>
<status status="PASS" endtime="20191120 21:55:23.555" starttime="20191120 21:55:23.554"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.558" level="INFO">${two} = [[u'GetListForJuryCandidate']]</msg>
<status status="PASS" endtime="20191120 21:55:23.557" starttime="20191120 21:55:23.556"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetListForJuryCandidate</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:23.563" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:23.563" starttime="20191120 21:55:23.562"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:23.566" level="INFO">${data} = {'params': [[u'GetListForJuryCandidate']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:23.566" starttime="20191120 21:55:23.564"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.568" level="INFO">Creating Session using : alias=GetListForJuryCandidate, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:23.569" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.569" starttime="20191120 21:55:23.567"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.579" level="INFO">Post Request using : alias=GetListForJuryCandidate, uri=http://127.0.0.1:8545, data={"params": [["GetListForJuryCandidate"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:23.579" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.579" starttime="20191120 21:55:23.571"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.580" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":true,\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":true,\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":true,\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":true,\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":true}"}
 </msg>
<msg timestamp="20191120 21:55:23.580" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.580" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8q...</msg>
<status status="PASS" endtime="20191120 21:55:23.580" starttime="20191120 21:55:23.580"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.581" starttime="20191120 21:55:23.581"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:23.582" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:55:23.582" starttime="20191120 21:55:23.582"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.582" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true}</msg>
<status status="PASS" endtime="20191120 21:55:23.582" starttime="20191120 21:55:23.582"></status>
</kw>
<msg timestamp="20191120 21:55:23.583" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMB...</msg>
<status status="PASS" endtime="20191120 21:55:23.583" starttime="20191120 21:55:23.559"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.583" level="INFO">To JSON using : content={"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":true,"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":true,"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":true,"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":true,"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":true} </msg>
<msg timestamp="20191120 21:55:23.583" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.583" level="INFO">${addressMap} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:55:23.583" starttime="20191120 21:55:23.583"></status>
</kw>
<msg timestamp="20191120 21:55:23.584" level="INFO">${resul} = {u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3...</msg>
<status status="PASS" endtime="20191120 21:55:23.584" starttime="20191120 21:55:23.551"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${resul}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.585" starttime="20191120 21:55:23.584"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.585" level="INFO">{u'P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX': True, u'P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W': True, u'P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx': True, u'P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j': True, u'P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2': True}</msg>
<status status="PASS" endtime="20191120 21:55:23.585" starttime="20191120 21:55:23.585"></status>
</kw>
<kw type="kw" name="${result} = getQuitMediatorApplyListParams.getQuitMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetQuitApplyList</arg>
</arguments>
<msg timestamp="20191120 21:55:23.586" level="INFO">${one} = [u'GetQuitApplyList']</msg>
<status status="PASS" endtime="20191120 21:55:23.586" starttime="20191120 21:55:23.586"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.587" level="INFO">${two} = [[u'GetQuitApplyList']]</msg>
<status status="PASS" endtime="20191120 21:55:23.587" starttime="20191120 21:55:23.587"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetQuitApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:23.588" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:23.588" starttime="20191120 21:55:23.588"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:23.589" level="INFO">${data} = {'params': [[u'GetQuitApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:23.589" starttime="20191120 21:55:23.588"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.589" level="INFO">Creating Session using : alias=GetQuitApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:23.589" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.589" starttime="20191120 21:55:23.589"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.594" level="INFO">Post Request using : alias=GetQuitApplyList, uri=http://127.0.0.1:8545, data={"params": [["GetQuitApplyList"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:23.594" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.594" starttime="20191120 21:55:23.590"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.594" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{}"}
 </msg>
<msg timestamp="20191120 21:55:23.594" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.595" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{}'}</msg>
<status status="PASS" endtime="20191120 21:55:23.595" starttime="20191120 21:55:23.594"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.595" starttime="20191120 21:55:23.595"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:23.596" level="INFO">${res} = {}</msg>
<status status="PASS" endtime="20191120 21:55:23.595" starttime="20191120 21:55:23.595"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.596" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:55:23.596" starttime="20191120 21:55:23.596"></status>
</kw>
<msg timestamp="20191120 21:55:23.596" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:55:23.596" starttime="20191120 21:55:23.587"></status>
</kw>
<kw type="kw" name="${addressMap} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.596" level="INFO">To JSON using : content={} </msg>
<msg timestamp="20191120 21:55:23.597" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.597" level="INFO">${addressMap} = {}</msg>
<status status="PASS" endtime="20191120 21:55:23.597" starttime="20191120 21:55:23.596"></status>
</kw>
<msg timestamp="20191120 21:55:23.597" level="INFO">${result} = {}</msg>
<status status="PASS" endtime="20191120 21:55:23.597" starttime="20191120 21:55:23.586"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.597" level="INFO">{}</msg>
<status status="PASS" endtime="20191120 21:55:23.597" starttime="20191120 21:55:23.597"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Not Contain Key">
<doc>Fails if `key` is found from `dictionary`.</doc>
<arguments>
<arg>${result}</arg>
<arg>${juryAddr_01}</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.598" starttime="20191120 21:55:23.598"></status>
</kw>
<kw type="kw" name="${result} = getJuryBalance.getJuryBalance">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetJuryDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.599" level="INFO">${one} = [u'GetJuryDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']</msg>
<status status="PASS" endtime="20191120 21:55:23.599" starttime="20191120 21:55:23.599"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.600" level="INFO">${two} = [[u'GetJuryDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']]</msg>
<status status="PASS" endtime="20191120 21:55:23.600" starttime="20191120 21:55:23.599"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetJuryDeposit</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:23.601" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:23.601" starttime="20191120 21:55:23.601"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:23.601" level="INFO">${data} = {'params': [[u'GetJuryDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:23.601" starttime="20191120 21:55:23.601"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.602" level="INFO">Creating Session using : alias=GetJuryDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:23.602" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.602" starttime="20191120 21:55:23.602"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.607" level="INFO">Post Request using : alias=GetJuryDeposit, uri=http://127.0.0.1:8545, data={"params": [["GetJuryDeposit", "P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:23.607" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.607" starttime="20191120 21:55:23.602"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.608" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"balance is nil"}
 </msg>
<msg timestamp="20191120 21:55:23.608" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.608" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'balance is nil'}</msg>
<status status="PASS" endtime="20191120 21:55:23.608" starttime="20191120 21:55:23.607"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.608" starttime="20191120 21:55:23.608"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:23.609" level="INFO">${res} = balance is nil</msg>
<status status="PASS" endtime="20191120 21:55:23.609" starttime="20191120 21:55:23.608"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.609" level="INFO">balance is nil</msg>
<status status="PASS" endtime="20191120 21:55:23.609" starttime="20191120 21:55:23.609"></status>
</kw>
<msg timestamp="20191120 21:55:23.610" level="INFO">${result} = balance is nil</msg>
<status status="PASS" endtime="20191120 21:55:23.610" starttime="20191120 21:55:23.600"></status>
</kw>
<msg timestamp="20191120 21:55:23.610" level="INFO">${result} = balance is nil</msg>
<status status="PASS" endtime="20191120 21:55:23.610" starttime="20191120 21:55:23.598"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.611" level="INFO">balance is nil</msg>
<status status="PASS" endtime="20191120 21:55:23.611" starttime="20191120 21:55:23.611"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>balance is nil</arg>
</arguments>
<msg timestamp="20191120 21:55:23.612" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.612" starttime="20191120 21:55:23.611"></status>
</kw>
<kw type="kw" name="getAllJury.getAllJury">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetAllJury</arg>
</arguments>
<msg timestamp="20191120 21:55:23.613" level="INFO">${one} = [u'GetAllJury']</msg>
<status status="PASS" endtime="20191120 21:55:23.613" starttime="20191120 21:55:23.613"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.614" level="INFO">${two} = [[u'GetAllJury']]</msg>
<status status="PASS" endtime="20191120 21:55:23.614" starttime="20191120 21:55:23.613"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetAllJury</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:23.615" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:23.615" starttime="20191120 21:55:23.615"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:23.615" level="INFO">${data} = {'params': [[u'GetAllJury']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:23.615" starttime="20191120 21:55:23.615"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.616" level="INFO">Creating Session using : alias=GetAllJury, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:23.616" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.616" starttime="20191120 21:55:23.616"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.626" level="INFO">Post Request using : alias=GetAllJury, uri=http://127.0.0.1:8545, data={"params": [["GetAllJury"]], "jsonrpc": "2.0", "method": "contract_depositContractQuery", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:23.627" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.626" starttime="20191120 21:55:23.617"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.627" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"{\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj\",\"reward_address\":\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\",\"address\":\"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j\"},\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AtOniw0xn8AIoodxAFEc2xqN35sLgK/Ft5YvW2iwaNyh\",\"reward_address\":\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\",\"address\":\"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W\"},\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AzBlloKKohT3AMbt4ibYWX4W1OUdNpkJfhuNx9zKYI3g\",\"reward_address\":\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\",\"address\":\"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX\"},\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AkJtovbqCDvM/iEeKVg4x0anid3SdUSbD2rw0Mf2Yxjj\",\"reward_address\":\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\",\"address\":\"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2\"},\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\":{\"balance\":0,\"enter_time\":\"2019-11-20 13:51:42 UTC\",\"role\":\"Jury\",\"public_key\":\"AwtekZO22Vhd6hu5Kexrv+u07VTJBE2Fv7pyQUQoLrYX\",\"reward_address\":\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\",\"address\":\"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx\"}}"}
 </msg>
<msg timestamp="20191120 21:55:23.627" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.627" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPck...</msg>
<status status="PASS" endtime="20191120 21:55:23.627" starttime="20191120 21:55:23.627"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.628" starttime="20191120 21:55:23.628"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:23.628" level="INFO">${res} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcgg...</msg>
<status status="PASS" endtime="20191120 21:55:23.628" starttime="20191120 21:55:23.628"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.629" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j","address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j"},"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AtOniw0xn8AIoodxAFEc2xqN35sLgK/Ft5YvW2iwaNyh","reward_address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W","address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W"},"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AzBlloKKohT3AMbt4ibYWX4W1OUdNpkJfhuNx9zKYI3g","reward_address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX","address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX"},"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AkJtovbqCDvM/iEeKVg4x0anid3SdUSbD2rw0Mf2Yxjj","reward_address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2","address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2"},"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AwtekZO22Vhd6hu5Kexrv+u07VTJBE2Fv7pyQUQoLrYX","reward_address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx","address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx"}}</msg>
<status status="PASS" endtime="20191120 21:55:23.629" starttime="20191120 21:55:23.629"></status>
</kw>
<msg timestamp="20191120 21:55:23.629" level="INFO">${result} = {"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcgg...</msg>
<status status="PASS" endtime="20191120 21:55:23.629" starttime="20191120 21:55:23.614"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.629" level="INFO">{"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"A20QE9hFuX1I6U0/C3lksGDukgMjSLOPckg4k7zD5gzj","reward_address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j","address":"P17UWvaH6TF8JQcggoFCtUrnorvpSMfmE7j"},"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AtOniw0xn8AIoodxAFEc2xqN35sLgK/Ft5YvW2iwaNyh","reward_address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W","address":"P1EHLjqvHVTfXT1eXBam5hvFthnqn762F6W"},"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AzBlloKKohT3AMbt4ibYWX4W1OUdNpkJfhuNx9zKYI3g","reward_address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX","address":"P1ErVJfZVNv9KN1iRLxZxHjuKAdKZ2TNbtX"},"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AkJtovbqCDvM/iEeKVg4x0anid3SdUSbD2rw0Mf2Yxjj","reward_address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2","address":"P1J16P2Z3ggo3ukhvY2H8qa9vvhAL5SHQL2"},"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx":{"balance":0,"enter_time":"2019-11-20 13:51:42 UTC","role":"Jury","public_key":"AwtekZO22Vhd6hu5Kexrv+u07VTJBE2Fv7pyQUQoLrYX","reward_address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx","address":"P1NTj1aLk4Zp3G1LttEkTP9JMBfDDedYSnx"}}</msg>
<status status="PASS" endtime="20191120 21:55:23.630" starttime="20191120 21:55:23.629"></status>
</kw>
<status status="PASS" endtime="20191120 21:55:23.630" starttime="20191120 21:55:23.612"></status>
</kw>
<doc>jury 交付 10 ptn 才可以加入候选列表

Jury 节点交付固定保证金并进入候选列表-》申请退出并进入退出列表-》基金会同意并移除候选列表，退出列表。</doc>
<tags>
</tags>
<status status="PASS" endtime="20191120 21:55:23.630" critical="yes" starttime="20191120 21:55:05.359"></status>
</test>
<test id="s1-t4" name="Business_04">
<kw type="kw" name="${resul} = juryPayToDepositContractParams.juryPayToDepositContract">
<doc></doc>
<arguments>
<arg>${juryAddr_02}</arg>
<arg>10</arg>
<arg>${juryAddr_02_pubkey}</arg>
</arguments>
<kw type="kw" name="${Jury交付保证金所需参数} = juryPayToDepositContractParams.Jury交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositAmounts}</arg>
<arg>${pubkey}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryPayToDepositContract</arg>
<arg>{\"public_key\":\"${pubkey}\"}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.633" level="INFO">${one} = [u'JuryPayToDepositContract', u'{"public_key":"0399ac37a58bb75cbc1524892c42af057823db38052960362af63c25c82c61dacc"}']</msg>
<status status="PASS" endtime="20191120 21:55:23.633" starttime="20191120 21:55:23.633"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.634" level="INFO">${two} = [u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"0399ac37a58bb75cbc1524892c42af057823db38052960362af63c25c82...</msg>
<status status="PASS" endtime="20191120 21:55:23.634" starttime="20191120 21:55:23.634"></status>
</kw>
<msg timestamp="20191120 21:55:23.634" level="INFO">${Jury交付保证金所需参数} = [u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"0399ac37a58bb75cbc1524892c42af057823db38052960362af63c25c82...</msg>
<status status="PASS" endtime="20191120 21:55:23.634" starttime="20191120 21:55:23.632"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryPayToDepositContract</arg>
<arg>${Jury交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:23.635" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:23.635" starttime="20191120 21:55:23.635"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:23.636" level="INFO">${data} = {'params': [u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"0399ac37a58bb75cbc1524892c42af057823db3805296036...</msg>
<status status="PASS" endtime="20191120 21:55:23.636" starttime="20191120 21:55:23.636"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.636" level="INFO">Creating Session using : alias=JuryPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:23.636" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.637" starttime="20191120 21:55:23.636"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.640" level="INFO">Post Request using : alias=JuryPayToDepositContract, uri=http://127.0.0.1:8545, data={"params": ["P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh", "PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM", "10", "1", ["JuryPayToDepositContract", "{\"public_key\":\"0399ac37a58bb75cbc1524892c42af057823db38052960362af63c25c82c61dacc\"}"]], "jsonrpc": "2.0", "method": "contract_depositContractInvoke", "id": "1"}, headers={'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20191120 21:55:23.641" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191120 21:55:23.641" starttime="20191120 21:55:23.637"></status>
</kw>
<kw type="kw" name="${respJson} = RequestsLibrary.To Json">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.641" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"d33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1"}
 </msg>
<msg timestamp="20191120 21:55:23.641" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20191120 21:55:23.641" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'd33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1'}</msg>
<status status="PASS" endtime="20191120 21:55:23.641" starttime="20191120 21:55:23.641"></status>
</kw>
<kw type="kw" name="Collections.Dictionary Should Contain Key">
<doc>Fails if `key` is not found from `dictionary`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20191120 21:55:23.642" starttime="20191120 21:55:23.642"></status>
</kw>
<kw type="kw" name="${res} = Collections.Get From Dictionary">
<doc>Returns a value from the given `dictionary` based on the given `key`.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<msg timestamp="20191120 21:55:23.643" level="INFO">${res} = d33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1</msg>
<status status="PASS" endtime="20191120 21:55:23.643" starttime="20191120 21:55:23.643"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20191120 21:55:23.643" level="INFO">d33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1</msg>
<status status="PASS" endtime="20191120 21:55:23.643" starttime="20191120 21:55:23.643"></status>
</kw>
<msg timestamp="20191120 21:55:23.644" level="INFO">${result} = d33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1</msg>
<status status="PASS" endtime="20191120 21:55:23.644" starttime="20191120 21:55:23.634"></status>
</kw>
<kw type="kw" name="BuiltIn.Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6</arg>
</arguments>
<msg timestamp="20191120 21:55:29.645" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20191120 21:55:29.646" starttime="20191120 21:55:23.644"></status>
</kw>
<msg timestamp="20191120 21:55:29.647" level="INFO">${resul} = d33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1</msg>
<status status="PASS" endtime="20191120 21:55:29.647" starttime="20191120 21:55:23.631"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resul}</arg>
</arguments>
<msg timestamp="20191120 21:55:29.649" level="INFO">d33722b55f63d699e1f2bd73dc737bde0ce3cca124b1a2413275538dd69442c1</msg>
<status status="PASS" endtime="20191120 21:55:29.650" starttime="20191120 21:55:29.648"></status>
</kw>
<kw type="kw" name="${result} = getJuryBalance.getJuryBalance">
<doc></doc>
<arguments>
<arg>${juryAddr_02}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetJuryDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:55:29.656" level="INFO">${one} = [u'GetJuryDeposit', u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh']</msg>
<status status="PASS" endtime="20191120 21:55:29.655" starttime="20191120 21:55:29.654"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:29.658" level="INFO">${two} = [[u'GetJuryDeposit', u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh']]</msg>
<status status="PASS" endtime="20191120 21:55:29.658" starttime="20191120 21:55:29.657"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetJuryDeposit</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:29.664" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:29.663" starttime="20191120 21:55:29.662"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:29.666" level="INFO">${data} = {'params': [[u'GetJuryDeposit', u'P19R6yvk8UvBKEXbB4G1hTmDuGWwY5yTajh']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:29.666" starttime="20191120 21:55:29.665"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:29.668" level="INFO">Creating Session using : alias=GetJuryDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:29.670" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:29.670" starttime="20191120 21:55:29.667"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:29.676" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758cc1d50&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:29.879" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f575825b3d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:30.281" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758219d10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:30.403" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758219cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:30.403" starttime="20191120 21:55:29.671"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:30.404" starttime="20191120 21:55:29.659"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:30.405" starttime="20191120 21:55:29.651"></status>
</kw>
<doc>没收jury节点

Jury 节点交付固定保证金并进入候选列表-》某节点申请没收该jury节点并进入没收列表-》基金会同意并移除候选列表，退出列表，该节点的PTN转到基金会地址。</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:30.406" critical="yes" starttime="20191120 21:55:23.630">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758219cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t5" name="Business_05">
<kw type="kw" name="${resul} = developerPayToDepositContractParams.developerPayToDepositContract">
<doc></doc>
<arguments>
<arg>${developerAddr_01}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="${Developer交付保证金所需参数} = developerPayToDepositContractParams.Developer交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DeveloperPayToDepositContract</arg>
</arguments>
<msg timestamp="20191120 21:55:30.421" level="INFO">${one} = [u'DeveloperPayToDepositContract']</msg>
<status status="PASS" endtime="20191120 21:55:30.421" starttime="20191120 21:55:30.420"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:30.424" level="INFO">${two} = [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:55:30.423" starttime="20191120 21:55:30.422"></status>
</kw>
<msg timestamp="20191120 21:55:30.425" level="INFO">${Developer交付保证金所需参数} = [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:55:30.424" starttime="20191120 21:55:30.417"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>DeveloperPayToDepositContract</arg>
<arg>${Developer交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:30.429" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:30.429" starttime="20191120 21:55:30.428"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:30.432" level="INFO">${data} = {'params': [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvo...</msg>
<status status="PASS" endtime="20191120 21:55:30.431" starttime="20191120 21:55:30.430"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:30.434" level="INFO">Creating Session using : alias=DeveloperPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:30.434" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:30.435" starttime="20191120 21:55:30.432"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:30.440" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35090&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:30.643" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35290&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.047" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35410&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.051" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35710&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:31.051" starttime="20191120 21:55:30.436"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:31.052" starttime="20191120 21:55:30.425"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:31.053" starttime="20191120 21:55:30.413"></status>
</kw>
<doc>dev 交付 1 ptn 才可以加入合约开发者列表

Developer 节点交付固定保证金并进入列表-》申请退出并进入退出列表-》基金会同意并移除列表，退出列表。</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:31.054" critical="yes" starttime="20191120 21:55:30.407">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35710&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t6" name="Business_06">
<kw type="kw" name="${resul} = developerPayToDepositContractParams.developerPayToDepositContract">
<doc></doc>
<arguments>
<arg>${developerAddr_02}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="${Developer交付保证金所需参数} = developerPayToDepositContractParams.Developer交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DeveloperPayToDepositContract</arg>
</arguments>
<msg timestamp="20191120 21:55:31.068" level="INFO">${one} = [u'DeveloperPayToDepositContract']</msg>
<status status="PASS" endtime="20191120 21:55:31.067" starttime="20191120 21:55:31.067"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:31.070" level="INFO">${two} = [u'P14yBcATTVv3Q5oeY163VkFyDjrktcFDdQc', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:55:31.070" starttime="20191120 21:55:31.069"></status>
</kw>
<msg timestamp="20191120 21:55:31.071" level="INFO">${Developer交付保证金所需参数} = [u'P14yBcATTVv3Q5oeY163VkFyDjrktcFDdQc', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:55:31.071" starttime="20191120 21:55:31.064"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>DeveloperPayToDepositContract</arg>
<arg>${Developer交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:31.072" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:31.072" starttime="20191120 21:55:31.072"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:31.073" level="INFO">${data} = {'params': [u'P14yBcATTVv3Q5oeY163VkFyDjrktcFDdQc', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvo...</msg>
<status status="PASS" endtime="20191120 21:55:31.073" starttime="20191120 21:55:31.073"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:31.073" level="INFO">Creating Session using : alias=DeveloperPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:31.073" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:31.074" starttime="20191120 21:55:31.073"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:31.075" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f357d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.277" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35350&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.680" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35710&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.682" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb3ad0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:31.682" starttime="20191120 21:55:31.074"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:31.682" starttime="20191120 21:55:31.071"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:31.682" starttime="20191120 21:55:31.060"></status>
</kw>
<doc>没收dev节点

Developer节点交付固定保证金并进入候选列表-》某节点申请没收该Developer节点并进入没收列表-》基金会同意并移除候选列表，退出列表，该节点的PTN转到基金会地址。</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:31.682" critical="yes" starttime="20191120 21:55:31.056">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb3ad0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t7" name="Business_07">
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${mediatorAddr_02}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:31.688" level="INFO">${two} = [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2']</msg>
<status status="PASS" endtime="20191120 21:55:31.687" starttime="20191120 21:55:31.687"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:31.689" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:31.689" starttime="20191120 21:55:31.689"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:31.689" level="INFO">${data} = {'params': [u'P1Kesx2Dv4fZ84kQLVBmAu8qWs77R2Tmzf2'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:31.689" starttime="20191120 21:55:31.689"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:31.690" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:31.690" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:31.690" starttime="20191120 21:55:31.690"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:31.692" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758edaf90&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.894" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eda490&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.299" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d450&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.302" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d8d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:32.302" starttime="20191120 21:55:31.690"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:32.303" starttime="20191120 21:55:31.688"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:32.303" starttime="20191120 21:55:31.686"></status>
</kw>
<doc>创建新Token，使用新Token交付保证金，由于保证金只支持PTN，所以交保证金失败

DPT+10E7XBWEBT0K2H2GE0O

DPT+10102JC6CQU8OK204BXA</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:32.304" critical="yes" starttime="20191120 21:55:31.683">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d8d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t8" name="middle_cases">
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Mediator</arg>
</arguments>
<msg timestamp="20191120 21:55:32.317" level="INFO">Mediator</msg>
<status status="PASS" endtime="20191120 21:55:32.318" starttime="20191120 21:55:32.317"></status>
</kw>
<kw type="kw" name="${addressMap1} = getBecomeMediatorApplyListParams.getBecomeMediatorApplyList">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetBecomeMediatorApplyList</arg>
</arguments>
<msg timestamp="20191120 21:55:32.323" level="INFO">${one} = [u'GetBecomeMediatorApplyList']</msg>
<status status="PASS" endtime="20191120 21:55:32.322" starttime="20191120 21:55:32.322"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.325" level="INFO">${two} = [[u'GetBecomeMediatorApplyList']]</msg>
<status status="PASS" endtime="20191120 21:55:32.325" starttime="20191120 21:55:32.324"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetBecomeMediatorApplyList</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:32.330" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:32.330" starttime="20191120 21:55:32.329"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:32.331" level="INFO">${data} = {'params': [[u'GetBecomeMediatorApplyList']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:32.331" starttime="20191120 21:55:32.331"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.332" level="INFO">Creating Session using : alias=GetBecomeMediatorApplyList, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:32.332" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:32.332" starttime="20191120 21:55:32.332"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.334" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d590&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.535" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d1d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.939" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d390&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.942" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2de10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:32.942" starttime="20191120 21:55:32.332"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:32.943" starttime="20191120 21:55:32.326"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:32.943" starttime="20191120 21:55:32.319"></status>
</kw>
<doc>查询该阶段，保证金合约地址账户余额及各节点地址账户余额信息，及在保证金里面各节点的相关信息。</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:32.944" critical="yes" starttime="20191120 21:55:32.306">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2de10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t9" name="Business_08">
<kw type="kw" name="${mDeposit} = getMediatorDepositWithAddrParams.getMediatorDepositWithAddr">
<doc></doc>
<arguments>
<arg>${mediatorAddr_01}</arg>
</arguments>
<kw type="kw" name="${11} = getMediatorDepositWithAddrParams.获取某个节点的账户">
<doc></doc>
<arguments>
<arg>${nodeAddr}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>GetMediatorDeposit</arg>
<arg>${nodeAddr}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.962" level="INFO">${one} = [u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']</msg>
<status status="PASS" endtime="20191120 21:55:32.962" starttime="20191120 21:55:32.962"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.963" level="INFO">${two} = [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']]</msg>
<status status="PASS" endtime="20191120 21:55:32.963" starttime="20191120 21:55:32.963"></status>
</kw>
<msg timestamp="20191120 21:55:32.964" level="INFO">${11} = [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']]</msg>
<status status="PASS" endtime="20191120 21:55:32.963" starttime="20191120 21:55:32.959"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractQuery}</arg>
<arg>GetMediatorDeposit</arg>
<arg>${11}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:32.966" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:32.966" starttime="20191120 21:55:32.965"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:32.967" level="INFO">${data} = {'params': [[u'GetMediatorDeposit', u'P1HX8Mj56wSnxEPMjwPKViT8ewTM8jCEUwS']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractQuery', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:32.966" starttime="20191120 21:55:32.966"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.967" level="INFO">Creating Session using : alias=GetMediatorDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:32.968" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:32.968" starttime="20191120 21:55:32.967"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:32.970" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eda490&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.172" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eaae10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.577" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb32d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.580" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb3ad0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:33.581" starttime="20191120 21:55:32.969"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:33.581" starttime="20191120 21:55:32.964"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:33.582" starttime="20191120 21:55:32.953"></status>
</kw>
<doc>退出候选列表的两个Mediator继续交付保证金

mediator交付保证金再次进入超级节点和jury节点候选列表</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:33.583" critical="yes" starttime="20191120 21:55:32.946">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb3ad0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t10" name="PledgeTest">
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:33.600" level="INFO">${two} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM']</msg>
<status status="PASS" endtime="20191120 21:55:33.600" starttime="20191120 21:55:33.599"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:33.605" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:33.605" starttime="20191120 21:55:33.604"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:33.608" level="INFO">${data} = {'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:33.607" starttime="20191120 21:55:33.606"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:33.610" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:33.611" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:33.611" starttime="20191120 21:55:33.609"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:33.618" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2d0d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.823" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2d250&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.226" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb3210&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.229" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eaabd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:34.230" starttime="20191120 21:55:33.612"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:34.231" starttime="20191120 21:55:33.601"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:34.231" starttime="20191120 21:55:33.596"></status>
</kw>
<doc>质押流程的测试用例，包括投票、质押、分红、赎回、查询相关等操作</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:34.232" critical="yes" starttime="20191120 21:55:33.585">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eaabd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t11" name="Business_09">
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>jury</arg>
</arguments>
<msg timestamp="20191120 21:55:34.241" level="INFO">jury</msg>
<status status="PASS" endtime="20191120 21:55:34.241" starttime="20191120 21:55:34.240"></status>
</kw>
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.248" level="INFO">${two} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv']</msg>
<status status="PASS" endtime="20191120 21:55:34.248" starttime="20191120 21:55:34.247"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:34.252" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:34.252" starttime="20191120 21:55:34.252"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:34.254" level="INFO">${data} = {'params': [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:34.253" starttime="20191120 21:55:34.253"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.254" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:34.255" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:34.255" starttime="20191120 21:55:34.254"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.258" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2d910&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.460" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26690&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.863" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26750&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.866" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26c10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:34.866" starttime="20191120 21:55:34.256"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:34.867" starttime="20191120 21:55:34.249"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:34.867" starttime="20191120 21:55:34.243"></status>
</kw>
<doc>jury 和 dev 交付保证金数量不对流程</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:34.868" critical="yes" starttime="20191120 21:55:34.234">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26c10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t12" name="Business_10">
<kw type="kw" name="${resul} = juryPayToDepositContractParams.juryPayToDepositContract">
<doc></doc>
<arguments>
<arg>${juryAddr_01}</arg>
<arg>10</arg>
<arg>${juryAddr_01_pubkey}</arg>
</arguments>
<kw type="kw" name="${Jury交付保证金所需参数} = juryPayToDepositContractParams.Jury交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositAmounts}</arg>
<arg>${pubkey}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>JuryPayToDepositContract</arg>
<arg>{\"public_key\":\"${pubkey}\"}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.883" level="INFO">${one} = [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbcb38e232"}']</msg>
<status status="PASS" endtime="20191120 21:55:34.882" starttime="20191120 21:55:34.882"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${juryAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.884" level="INFO">${two} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbc...</msg>
<status status="PASS" endtime="20191120 21:55:34.883" starttime="20191120 21:55:34.883"></status>
</kw>
<msg timestamp="20191120 21:55:34.884" level="INFO">${Jury交付保证金所需参数} = [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738ddfc631bf5bbc...</msg>
<status status="PASS" endtime="20191120 21:55:34.884" starttime="20191120 21:55:34.880"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>JuryPayToDepositContract</arg>
<arg>${Jury交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:34.885" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:34.885" starttime="20191120 21:55:34.885"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:34.886" level="INFO">${data} = {'params': [u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'10', u'1', [u'JuryPayToDepositContract', u'{"public_key":"028f0ff9f31ac6efe028dddd35fc41343b1db403989738dd...</msg>
<status status="PASS" endtime="20191120 21:55:34.886" starttime="20191120 21:55:34.885"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.886" level="INFO">Creating Session using : alias=JuryPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:34.886" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:34.886" starttime="20191120 21:55:34.886"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:34.888" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26350&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.089" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e490&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.492" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e610&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.497" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e8d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:35.497" starttime="20191120 21:55:34.887"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:35.498" starttime="20191120 21:55:34.884"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:35.499" starttime="20191120 21:55:34.876"></status>
</kw>
<doc>jury 交付 10 ptn 才可以加入候选列表

Jury 节点交付固定保证金并进入候选列表-》申请退出并进入退出列表-》基金不同意并移除候选列表，退出列表。</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:35.500" critical="yes" starttime="20191120 21:55:34.870">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e8d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t13" name="Business_11">
<kw type="kw" name="${resul} = developerPayToDepositContractParams.developerPayToDepositContract">
<doc></doc>
<arguments>
<arg>${developerAddr_01}</arg>
<arg>1</arg>
</arguments>
<kw type="kw" name="${Developer交付保证金所需参数} = developerPayToDepositContractParams.Developer交付保证金所需参数">
<doc></doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositAmounts}</arg>
</arguments>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DeveloperPayToDepositContract</arg>
</arguments>
<msg timestamp="20191120 21:55:35.514" level="INFO">${one} = [u'DeveloperPayToDepositContract']</msg>
<status status="PASS" endtime="20191120 21:55:35.513" starttime="20191120 21:55:35.513"></status>
</kw>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${developerAddr}</arg>
<arg>${depositContractAddress}</arg>
<arg>${depositAmounts}</arg>
<arg>${fee}</arg>
<arg>${one}</arg>
</arguments>
<msg timestamp="20191120 21:55:35.515" level="INFO">${two} = [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:55:35.515" starttime="20191120 21:55:35.514"></status>
</kw>
<msg timestamp="20191120 21:55:35.516" level="INFO">${Developer交付保证金所需参数} = [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']]</msg>
<status status="PASS" endtime="20191120 21:55:35.515" starttime="20191120 21:55:35.511"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>DeveloperPayToDepositContract</arg>
<arg>${Developer交付保证金所需参数}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:35.518" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:35.518" starttime="20191120 21:55:35.518"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:35.520" level="INFO">${data} = {'params': [u'P15KN8LnfkJHys9A2hW3Z244icAEMgUMwY7', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM', u'1', u'1', [u'DeveloperPayToDepositContract']], 'jsonrpc': u'2.0', 'method': u'contract_depositContractInvo...</msg>
<status status="PASS" endtime="20191120 21:55:35.519" starttime="20191120 21:55:35.519"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:35.521" level="INFO">Creating Session using : alias=DeveloperPayToDepositContract, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:35.521" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:35.521" starttime="20191120 21:55:35.520"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:35.525" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35310&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.727" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e150&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.131" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e990&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.134" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1ead0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:36.134" starttime="20191120 21:55:35.522"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:36.135" starttime="20191120 21:55:35.516"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:36.136" starttime="20191120 21:55:35.508"></status>
</kw>
<doc>dev 交付 1 ptn 才可以加入合约开发者列表

Developer 节点交付固定保证金并进入列表-》申请退出并进入退出列表-》基金会不同意并移除列表，退出列表。</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:36.137" critical="yes" starttime="20191120 21:55:35.501">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1ead0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t14" name="Business_12">
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>jury</arg>
</arguments>
<msg timestamp="20191120 21:55:36.148" level="INFO">jury</msg>
<status status="PASS" endtime="20191120 21:55:36.149" starttime="20191120 21:55:36.147"></status>
</kw>
<kw type="kw" name="${result} = applyForForfeitureDepositParams.applyForForfeitureDeposit">
<doc></doc>
<arguments>
<arg>${foundationAddr}</arg>
<arg>${juryAddr_01}</arg>
<arg>Developer</arg>
<arg>nothing to do</arg>
</arguments>
<kw type="kw" name="${lala} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplyForForfeitureDeposit</arg>
<arg>${forfeitureAddr}</arg>
<arg>${role}</arg>
<arg>${extra}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.156" level="INFO">${lala} = [u'ApplyForForfeitureDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'Developer', u'nothing to do']</msg>
<status status="PASS" endtime="20191120 21:55:36.155" starttime="20191120 21:55:36.154"></status>
</kw>
<kw type="kw" name="${one} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${whoApply}</arg>
<arg>${whoApply}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${lala}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.159" level="INFO">${one} = [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'ApplyForForfeitureDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'Developer', u'nothing to do']]</msg>
<status status="PASS" endtime="20191120 21:55:36.159" starttime="20191120 21:55:36.157"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>${depositContractInvoke}</arg>
<arg>ApplyForForfeitureDeposit</arg>
<arg>${one}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:36.164" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:36.164" starttime="20191120 21:55:36.163"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:36.167" level="INFO">${data} = {'params': [u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'P12RxbLYRKT2bFY6xCWU7xRvUrojttKZpTF', u'1', u'1', [u'ApplyForForfeitureDeposit', u'P1MxPJjzBua3ZBYNntLLwbPottZxi6421cv', u'Developer', u'nothing t...</msg>
<status status="PASS" endtime="20191120 21:55:36.166" starttime="20191120 21:55:36.165"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.169" level="INFO">Creating Session using : alias=ApplyForForfeitureDeposit, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:36.170" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:36.170" starttime="20191120 21:55:36.168"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.172" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15890&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.374" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15a90&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.778" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.779" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e290&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:36.779" starttime="20191120 21:55:36.171"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:36.779" starttime="20191120 21:55:36.160"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:36.780" starttime="20191120 21:55:36.151"></status>
</kw>
<doc>没收上一个测试用例的jury dev节点，但是基金会不同意</doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:36.780" critical="yes" starttime="20191120 21:55:36.138">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e290&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<test id="s1-t15" name="PledgeTest02">
<kw type="kw" name="${amount} = getBalance.getBalance">
<doc></doc>
<arguments>
<arg>PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM</arg>
<arg>PTN</arg>
</arguments>
<kw type="kw" name="${two} = BuiltIn.Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.783" level="INFO">${two} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM']</msg>
<status status="PASS" endtime="20191120 21:55:36.783" starttime="20191120 21:55:36.783"></status>
</kw>
<kw type="kw" name="${result} = postRequest.创建公用的POST请求">
<doc></doc>
<arguments>
<arg>wallet_getBalance</arg>
<arg>wallet_getBalance</arg>
<arg>${two}</arg>
</arguments>
<kw type="kw" name="${header} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<msg timestamp="20191120 21:55:36.784" level="INFO">${header} = {'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20191120 21:55:36.784" starttime="20191120 21:55:36.784"></status>
</kw>
<kw type="kw" name="${data} = Collections.Create Dictionary">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<msg timestamp="20191120 21:55:36.785" level="INFO">${data} = {'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DR32W9vM'], 'jsonrpc': u'2.0', 'method': u'wallet_getBalance', 'id': u'1'}</msg>
<status status="PASS" endtime="20191120 21:55:36.785" starttime="20191120 21:55:36.785"></status>
</kw>
<kw type="kw" name="RequestsLibrary.Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.785" level="INFO">Creating Session using : alias=wallet_getBalance, url=http://127.0.0.1:8545, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20191120 21:55:36.786" level="INFO">Argument types are:
&lt;type 'bool'&gt;</msg>
<status status="PASS" endtime="20191120 21:55:36.786" starttime="20191120 21:55:36.785"></status>
</kw>
<kw type="kw" name="${resp} = RequestsLibrary.Post Request">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${alias}</arg>
<arg>${Url}</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<msg timestamp="20191120 21:55:36.787" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26110&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.989" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26750&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:37.392" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26e10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:37.395" level="FAIL">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15610&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</msg>
<status status="FAIL" endtime="20191120 21:55:37.395" starttime="20191120 21:55:36.786"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:37.395" starttime="20191120 21:55:36.784"></status>
</kw>
<status status="FAIL" endtime="20191120 21:55:37.396" starttime="20191120 21:55:36.782"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="FAIL" endtime="20191120 21:55:37.396" critical="yes" starttime="20191120 21:55:36.780">ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=8545): Max retries exceeded with url: /http://127.0.0.1:8545 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15610&gt;: Failed to establish a new connection: [Errno 111] Connection refused',))</status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20191120 21:55:37.399" starttime="20191120 21:53:58.023"></status>
</suite>
<statistics>
<total>
<stat fail="12" pass="3">Critical Tests</stat>
<stat fail="12" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="12" pass="3" id="s1" name="DepositContractTest">DepositContractTest</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20191120 21:55:29.676" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758cc1d50&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:29.879" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f575825b3d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:30.281" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758219d10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:30.440" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35090&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:30.643" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35290&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.047" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35410&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.075" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f357d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.277" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35350&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.680" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35710&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.692" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758edaf90&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:31.894" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eda490&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.299" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d450&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.334" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d590&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.535" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d1d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.939" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f3d390&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:32.970" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eda490&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.172" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eaae10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.577" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb32d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.618" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2d0d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:33.823" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2d250&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.226" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758eb3210&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.258" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f2d910&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.460" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26690&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.863" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26750&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:34.888" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26350&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.089" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e490&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.492" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e610&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.525" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f35310&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:35.727" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e150&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.131" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f1e990&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.172" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15890&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.374" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15a90&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.778" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f15cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.787" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26110&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:36.989" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26750&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
<msg timestamp="20191120 21:55:37.392" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f5758f26e10&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8545</msg>
</errors>
</robot>
