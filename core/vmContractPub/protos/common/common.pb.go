// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// These status codes are intended to resemble selected HTTP status codes
type PtnStatus int32

const (
	PtnStatus_UNKNOWN                  PtnStatus = 0
	PtnStatus_SUCCESS                  PtnStatus = 200
	PtnStatus_BAD_REQUEST              PtnStatus = 400
	PtnStatus_FORBIDDEN                PtnStatus = 403
	PtnStatus_NOT_FOUND                PtnStatus = 404
	PtnStatus_REQUEST_ENTITY_TOO_LARGE PtnStatus = 413
	PtnStatus_INTERNAL_SERVER_ERROR    PtnStatus = 500
	PtnStatus_NOT_IMPLEMENTED          PtnStatus = 501
	PtnStatus_SERVICE_UNAVAILABLE      PtnStatus = 503
)

var PtnStatus_name = map[int32]string{
	0:   "UNKNOWN",
	200: "SUCCESS",
	400: "BAD_REQUEST",
	403: "FORBIDDEN",
	404: "NOT_FOUND",
	413: "REQUEST_ENTITY_TOO_LARGE",
	500: "INTERNAL_SERVER_ERROR",
	501: "NOT_IMPLEMENTED",
	503: "SERVICE_UNAVAILABLE",
}

var PtnStatus_value = map[string]int32{
	"UNKNOWN":                  0,
	"SUCCESS":                  200,
	"BAD_REQUEST":              400,
	"FORBIDDEN":                403,
	"NOT_FOUND":                404,
	"REQUEST_ENTITY_TOO_LARGE": 413,
	"INTERNAL_SERVER_ERROR":    500,
	"NOT_IMPLEMENTED":          501,
	"SERVICE_UNAVAILABLE":      503,
}

func (x PtnStatus) String() string {
	return proto.EnumName(PtnStatus_name, int32(x))
}

func (PtnStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

type PtnHeaderType int32

const (
	PtnHeaderType_MESSAGE              PtnHeaderType = 0
	PtnHeaderType_CONFIG               PtnHeaderType = 1
	PtnHeaderType_CONFIG_UPDATE        PtnHeaderType = 2
	PtnHeaderType_ENDORSER_TRANSACTION PtnHeaderType = 3
	PtnHeaderType_ORDERER_TRANSACTION  PtnHeaderType = 4
	PtnHeaderType_DELIVER_SEEK_INFO    PtnHeaderType = 5
	PtnHeaderType_CHAINCODE_PACKAGE    PtnHeaderType = 6
	PtnHeaderType_PEER_RESOURCE_UPDATE PtnHeaderType = 7
)

var PtnHeaderType_name = map[int32]string{
	0: "MESSAGE",
	1: "CONFIG",
	2: "CONFIG_UPDATE",
	3: "ENDORSER_TRANSACTION",
	4: "ORDERER_TRANSACTION",
	5: "DELIVER_SEEK_INFO",
	6: "CHAINCODE_PACKAGE",
	7: "PEER_RESOURCE_UPDATE",
}

var PtnHeaderType_value = map[string]int32{
	"MESSAGE":              0,
	"CONFIG":               1,
	"CONFIG_UPDATE":        2,
	"ENDORSER_TRANSACTION": 3,
	"ORDERER_TRANSACTION":  4,
	"DELIVER_SEEK_INFO":    5,
	"CHAINCODE_PACKAGE":    6,
	"PEER_RESOURCE_UPDATE": 7,
}

func (x PtnHeaderType) String() string {
	return proto.EnumName(PtnHeaderType_name, int32(x))
}

func (PtnHeaderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

// This enum enlists indexes of the block metadata array
type PtnBlockMetadataIndex int32

const (
	PtnBlockMetadataIndex_SIGNATURES          PtnBlockMetadataIndex = 0
	PtnBlockMetadataIndex_LAST_CONFIG         PtnBlockMetadataIndex = 1
	PtnBlockMetadataIndex_TRANSACTIONS_FILTER PtnBlockMetadataIndex = 2
	PtnBlockMetadataIndex_ORDERER             PtnBlockMetadataIndex = 3
)

var PtnBlockMetadataIndex_name = map[int32]string{
	0: "SIGNATURES",
	1: "LAST_CONFIG",
	2: "TRANSACTIONS_FILTER",
	3: "ORDERER",
}

var PtnBlockMetadataIndex_value = map[string]int32{
	"SIGNATURES":          0,
	"LAST_CONFIG":         1,
	"TRANSACTIONS_FILTER": 2,
	"ORDERER":             3,
}

func (x PtnBlockMetadataIndex) String() string {
	return proto.EnumName(PtnBlockMetadataIndex_name, int32(x))
}

func (PtnBlockMetadataIndex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

// LastConfig is the encoded value for the Metadata message which is encoded in the LAST_CONFIGURATION block metadata index
type PtnLastConfig struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnLastConfig) Reset()         { *m = PtnLastConfig{} }
func (m *PtnLastConfig) String() string { return proto.CompactTextString(m) }
func (*PtnLastConfig) ProtoMessage()    {}
func (*PtnLastConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *PtnLastConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnLastConfig.Unmarshal(m, b)
}
func (m *PtnLastConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnLastConfig.Marshal(b, m, deterministic)
}
func (m *PtnLastConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnLastConfig.Merge(m, src)
}
func (m *PtnLastConfig) XXX_Size() int {
	return xxx_messageInfo_PtnLastConfig.Size(m)
}
func (m *PtnLastConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnLastConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PtnLastConfig proto.InternalMessageInfo

func (m *PtnLastConfig) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// Metadata is a common structure to be used to encode block metadata
type PtnMetadata struct {
	Value                []byte                  `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Signatures           []*PtnMetadataSignature `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PtnMetadata) Reset()         { *m = PtnMetadata{} }
func (m *PtnMetadata) String() string { return proto.CompactTextString(m) }
func (*PtnMetadata) ProtoMessage()    {}
func (*PtnMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *PtnMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnMetadata.Unmarshal(m, b)
}
func (m *PtnMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnMetadata.Marshal(b, m, deterministic)
}
func (m *PtnMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnMetadata.Merge(m, src)
}
func (m *PtnMetadata) XXX_Size() int {
	return xxx_messageInfo_PtnMetadata.Size(m)
}
func (m *PtnMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_PtnMetadata proto.InternalMessageInfo

func (m *PtnMetadata) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PtnMetadata) GetSignatures() []*PtnMetadataSignature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type PtnMetadataSignature struct {
	SignatureHeader      []byte   `protobuf:"bytes,1,opt,name=signature_header,json=signatureHeader,proto3" json:"signature_header,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnMetadataSignature) Reset()         { *m = PtnMetadataSignature{} }
func (m *PtnMetadataSignature) String() string { return proto.CompactTextString(m) }
func (*PtnMetadataSignature) ProtoMessage()    {}
func (*PtnMetadataSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *PtnMetadataSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnMetadataSignature.Unmarshal(m, b)
}
func (m *PtnMetadataSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnMetadataSignature.Marshal(b, m, deterministic)
}
func (m *PtnMetadataSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnMetadataSignature.Merge(m, src)
}
func (m *PtnMetadataSignature) XXX_Size() int {
	return xxx_messageInfo_PtnMetadataSignature.Size(m)
}
func (m *PtnMetadataSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnMetadataSignature.DiscardUnknown(m)
}

var xxx_messageInfo_PtnMetadataSignature proto.InternalMessageInfo

func (m *PtnMetadataSignature) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

func (m *PtnMetadataSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type PtnHeader struct {
	ChannelHeader        []byte   `protobuf:"bytes,1,opt,name=channel_header,json=channelHeader,proto3" json:"channel_header,omitempty"`
	SignatureHeader      []byte   `protobuf:"bytes,2,opt,name=signature_header,json=signatureHeader,proto3" json:"signature_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnHeader) Reset()         { *m = PtnHeader{} }
func (m *PtnHeader) String() string { return proto.CompactTextString(m) }
func (*PtnHeader) ProtoMessage()    {}
func (*PtnHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *PtnHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnHeader.Unmarshal(m, b)
}
func (m *PtnHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnHeader.Marshal(b, m, deterministic)
}
func (m *PtnHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnHeader.Merge(m, src)
}
func (m *PtnHeader) XXX_Size() int {
	return xxx_messageInfo_PtnHeader.Size(m)
}
func (m *PtnHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PtnHeader proto.InternalMessageInfo

func (m *PtnHeader) GetChannelHeader() []byte {
	if m != nil {
		return m.ChannelHeader
	}
	return nil
}

func (m *PtnHeader) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

// Header is a generic replay prevention and identity message to include in a signed payload
type PtnChannelHeader struct {
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Version indicates message protocol version
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Timestamp is the local time when the message was created
	// by the sender
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Identifier of the channel this message is bound for
	ChannelId string `protobuf:"bytes,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// An unique identifier that is used end-to-end.
	//  -  set by higher layers such as end user or SDK
	//  -  passed to the endorser (which will check for uniqueness)
	//  -  as the header is passed along unchanged, it will be
	//     be retrieved by the committer (uniqueness check here as well)
	//  -  to be stored in the ledger
	TxId string `protobuf:"bytes,5,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// The epoch in which this header was generated, where epoch is defined based on block height
	// Epoch in which the response has been generated. This field identifies a
	// logical window of time. A proposal response is accepted by a peer only if
	// two conditions hold:
	// 1. the epoch specified in the message is the current epoch
	// 2. this message has been only seen once during this epoch (i.e. it hasn't
	//    been replayed)
	Epoch uint64 `protobuf:"varint,6,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Extension that may be attached based on the header type
	Extension []byte `protobuf:"bytes,7,opt,name=extension,proto3" json:"extension,omitempty"`
	// If mutual TLS is employed, this represents
	// the hash of the client's TLS certificate
	TlsCertHash          []byte   `protobuf:"bytes,8,opt,name=tls_cert_hash,json=tlsCertHash,proto3" json:"tls_cert_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnChannelHeader) Reset()         { *m = PtnChannelHeader{} }
func (m *PtnChannelHeader) String() string { return proto.CompactTextString(m) }
func (*PtnChannelHeader) ProtoMessage()    {}
func (*PtnChannelHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *PtnChannelHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnChannelHeader.Unmarshal(m, b)
}
func (m *PtnChannelHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnChannelHeader.Marshal(b, m, deterministic)
}
func (m *PtnChannelHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnChannelHeader.Merge(m, src)
}
func (m *PtnChannelHeader) XXX_Size() int {
	return xxx_messageInfo_PtnChannelHeader.Size(m)
}
func (m *PtnChannelHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnChannelHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PtnChannelHeader proto.InternalMessageInfo

func (m *PtnChannelHeader) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *PtnChannelHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PtnChannelHeader) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PtnChannelHeader) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *PtnChannelHeader) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *PtnChannelHeader) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *PtnChannelHeader) GetExtension() []byte {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PtnChannelHeader) GetTlsCertHash() []byte {
	if m != nil {
		return m.TlsCertHash
	}
	return nil
}

type PtnSignatureHeader struct {
	// Creator of the message, a marshaled msp.SerializedIdentity
	Creator []byte `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Arbitrary number that may only be used once. Can be used to detect replay attacks.
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnSignatureHeader) Reset()         { *m = PtnSignatureHeader{} }
func (m *PtnSignatureHeader) String() string { return proto.CompactTextString(m) }
func (*PtnSignatureHeader) ProtoMessage()    {}
func (*PtnSignatureHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{5}
}

func (m *PtnSignatureHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnSignatureHeader.Unmarshal(m, b)
}
func (m *PtnSignatureHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnSignatureHeader.Marshal(b, m, deterministic)
}
func (m *PtnSignatureHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnSignatureHeader.Merge(m, src)
}
func (m *PtnSignatureHeader) XXX_Size() int {
	return xxx_messageInfo_PtnSignatureHeader.Size(m)
}
func (m *PtnSignatureHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnSignatureHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PtnSignatureHeader proto.InternalMessageInfo

func (m *PtnSignatureHeader) GetCreator() []byte {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *PtnSignatureHeader) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

// Payload is the message contents (and header to allow for signing)
type PtnPayload struct {
	// Header is included to provide identity and prevent replay
	Header *PtnHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Data, the encoding of which is defined by the type in the header
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnPayload) Reset()         { *m = PtnPayload{} }
func (m *PtnPayload) String() string { return proto.CompactTextString(m) }
func (*PtnPayload) ProtoMessage()    {}
func (*PtnPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{6}
}

func (m *PtnPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnPayload.Unmarshal(m, b)
}
func (m *PtnPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnPayload.Marshal(b, m, deterministic)
}
func (m *PtnPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnPayload.Merge(m, src)
}
func (m *PtnPayload) XXX_Size() int {
	return xxx_messageInfo_PtnPayload.Size(m)
}
func (m *PtnPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnPayload.DiscardUnknown(m)
}

var xxx_messageInfo_PtnPayload proto.InternalMessageInfo

func (m *PtnPayload) GetHeader() *PtnHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PtnPayload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Envelope wraps a Payload with a signature so that the message may be authenticated
type PtnEnvelope struct {
	// A marshaled Payload
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// A signature by the creator specified in the Payload header
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnEnvelope) Reset()         { *m = PtnEnvelope{} }
func (m *PtnEnvelope) String() string { return proto.CompactTextString(m) }
func (*PtnEnvelope) ProtoMessage()    {}
func (*PtnEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{7}
}

func (m *PtnEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnEnvelope.Unmarshal(m, b)
}
func (m *PtnEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnEnvelope.Marshal(b, m, deterministic)
}
func (m *PtnEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnEnvelope.Merge(m, src)
}
func (m *PtnEnvelope) XXX_Size() int {
	return xxx_messageInfo_PtnEnvelope.Size(m)
}
func (m *PtnEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_PtnEnvelope proto.InternalMessageInfo

func (m *PtnEnvelope) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PtnEnvelope) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// This is finalized block structure to be shared among the orderer and peer
// Note that the BlockHeader chains to the previous BlockHeader, and the BlockData hash is embedded
// in the BlockHeader.  This makes it natural and obvious that the Data is included in the hash, but
// the Metadata is not.
type PtnBlock struct {
	Header               *PtnBlockHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data                 *PtnBlockData     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata             *PtnBlockMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PtnBlock) Reset()         { *m = PtnBlock{} }
func (m *PtnBlock) String() string { return proto.CompactTextString(m) }
func (*PtnBlock) ProtoMessage()    {}
func (*PtnBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{8}
}

func (m *PtnBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnBlock.Unmarshal(m, b)
}
func (m *PtnBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnBlock.Marshal(b, m, deterministic)
}
func (m *PtnBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnBlock.Merge(m, src)
}
func (m *PtnBlock) XXX_Size() int {
	return xxx_messageInfo_PtnBlock.Size(m)
}
func (m *PtnBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnBlock.DiscardUnknown(m)
}

var xxx_messageInfo_PtnBlock proto.InternalMessageInfo

func (m *PtnBlock) GetHeader() *PtnBlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PtnBlock) GetData() *PtnBlockData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PtnBlock) GetMetadata() *PtnBlockMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// BlockHeader is the element of the block which forms the block chain
// The block header is hashed using the configured chain hashing algorithm
// over the ASN.1 encoding of the BlockHeader
type PtnBlockHeader struct {
	Number               uint64   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	PreviousHash         []byte   `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	DataHash             []byte   `protobuf:"bytes,3,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnBlockHeader) Reset()         { *m = PtnBlockHeader{} }
func (m *PtnBlockHeader) String() string { return proto.CompactTextString(m) }
func (*PtnBlockHeader) ProtoMessage()    {}
func (*PtnBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{9}
}

func (m *PtnBlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnBlockHeader.Unmarshal(m, b)
}
func (m *PtnBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnBlockHeader.Marshal(b, m, deterministic)
}
func (m *PtnBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnBlockHeader.Merge(m, src)
}
func (m *PtnBlockHeader) XXX_Size() int {
	return xxx_messageInfo_PtnBlockHeader.Size(m)
}
func (m *PtnBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PtnBlockHeader proto.InternalMessageInfo

func (m *PtnBlockHeader) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *PtnBlockHeader) GetPreviousHash() []byte {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *PtnBlockHeader) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

type PtnBlockData struct {
	Data                 [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnBlockData) Reset()         { *m = PtnBlockData{} }
func (m *PtnBlockData) String() string { return proto.CompactTextString(m) }
func (*PtnBlockData) ProtoMessage()    {}
func (*PtnBlockData) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{10}
}

func (m *PtnBlockData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnBlockData.Unmarshal(m, b)
}
func (m *PtnBlockData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnBlockData.Marshal(b, m, deterministic)
}
func (m *PtnBlockData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnBlockData.Merge(m, src)
}
func (m *PtnBlockData) XXX_Size() int {
	return xxx_messageInfo_PtnBlockData.Size(m)
}
func (m *PtnBlockData) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnBlockData.DiscardUnknown(m)
}

var xxx_messageInfo_PtnBlockData proto.InternalMessageInfo

func (m *PtnBlockData) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PtnBlockMetadata struct {
	Metadata             [][]byte `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnBlockMetadata) Reset()         { *m = PtnBlockMetadata{} }
func (m *PtnBlockMetadata) String() string { return proto.CompactTextString(m) }
func (*PtnBlockMetadata) ProtoMessage()    {}
func (*PtnBlockMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{11}
}

func (m *PtnBlockMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnBlockMetadata.Unmarshal(m, b)
}
func (m *PtnBlockMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnBlockMetadata.Marshal(b, m, deterministic)
}
func (m *PtnBlockMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnBlockMetadata.Merge(m, src)
}
func (m *PtnBlockMetadata) XXX_Size() int {
	return xxx_messageInfo_PtnBlockMetadata.Size(m)
}
func (m *PtnBlockMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnBlockMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_PtnBlockMetadata proto.InternalMessageInfo

func (m *PtnBlockMetadata) GetMetadata() [][]byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterEnum("common.PtnStatus", PtnStatus_name, PtnStatus_value)
	proto.RegisterEnum("common.PtnHeaderType", PtnHeaderType_name, PtnHeaderType_value)
	proto.RegisterEnum("common.PtnBlockMetadataIndex", PtnBlockMetadataIndex_name, PtnBlockMetadataIndex_value)
	proto.RegisterType((*PtnLastConfig)(nil), "common.PtnLastConfig")
	proto.RegisterType((*PtnMetadata)(nil), "common.PtnMetadata")
	proto.RegisterType((*PtnMetadataSignature)(nil), "common.PtnMetadataSignature")
	proto.RegisterType((*PtnHeader)(nil), "common.PtnHeader")
	proto.RegisterType((*PtnChannelHeader)(nil), "common.PtnChannelHeader")
	proto.RegisterType((*PtnSignatureHeader)(nil), "common.PtnSignatureHeader")
	proto.RegisterType((*PtnPayload)(nil), "common.PtnPayload")
	proto.RegisterType((*PtnEnvelope)(nil), "common.PtnEnvelope")
	proto.RegisterType((*PtnBlock)(nil), "common.PtnBlock")
	proto.RegisterType((*PtnBlockHeader)(nil), "common.PtnBlockHeader")
	proto.RegisterType((*PtnBlockData)(nil), "common.PtnBlockData")
	proto.RegisterType((*PtnBlockMetadata)(nil), "common.PtnBlockMetadata")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 972 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0x5d, 0x6f, 0xe3, 0x44,
	0x14, 0x6d, 0xe2, 0x7c, 0x34, 0x37, 0xfd, 0x70, 0xa7, 0xed, 0xae, 0x55, 0x76, 0x45, 0x65, 0xb4,
	0x52, 0xb7, 0x12, 0x89, 0x54, 0x78, 0xe0, 0x81, 0x17, 0xc7, 0x9e, 0xb6, 0x56, 0x53, 0xdb, 0x8c,
	0x9d, 0x45, 0x20, 0x81, 0xe5, 0x26, 0xb3, 0x49, 0x20, 0x99, 0x89, 0xe2, 0x49, 0xd5, 0xfd, 0x03,
	0x3c, 0x23, 0xc1, 0x13, 0x12, 0x7f, 0x83, 0x3f, 0xc0, 0x0b, 0x3f, 0x08, 0xc4, 0x2b, 0x1a, 0x8f,
	0xed, 0xa6, 0x51, 0x25, 0xde, 0x7c, 0x8e, 0x4f, 0xee, 0x3d, 0x73, 0xcf, 0x1d, 0x07, 0x76, 0x86,
	0x7c, 0x3e, 0xe7, 0xac, 0xb3, 0x58, 0x72, 0xc1, 0x51, 0x43, 0xa1, 0x93, 0x8f, 0xc7, 0x9c, 0x8f,
	0x67, 0xb4, 0x9b, 0xb1, 0x77, 0xab, 0xf7, 0x5d, 0x31, 0x9d, 0xd3, 0x54, 0x24, 0xf3, 0x85, 0x12,
	0x9a, 0x6f, 0x60, 0x37, 0x10, 0xac, 0x9f, 0xa4, 0xc2, 0xe6, 0xec, 0xfd, 0x74, 0x8c, 0x8e, 0xa0,
	0x3e, 0x65, 0x23, 0xfa, 0x60, 0x54, 0x4e, 0x2b, 0x67, 0x35, 0xa2, 0x80, 0x99, 0x40, 0x3b, 0x10,
	0xec, 0x96, 0x8a, 0x64, 0x94, 0x88, 0x44, 0x8a, 0xee, 0x93, 0xd9, 0x8a, 0x66, 0xa2, 0x1d, 0xa2,
	0x00, 0xfa, 0x12, 0x20, 0x9d, 0x8e, 0x59, 0x22, 0x56, 0x4b, 0x9a, 0x1a, 0xd5, 0x53, 0xed, 0xac,
	0x7d, 0xf1, 0xaa, 0x93, 0xfb, 0x5a, 0xfb, 0x79, 0x58, 0x88, 0xc8, 0x9a, 0xde, 0x8c, 0xe1, 0xe8,
	0x39, 0x0d, 0x7a, 0x0b, 0x7a, 0xa9, 0x8a, 0x27, 0x34, 0x19, 0xd1, 0x65, 0xde, 0x76, 0xbf, 0xe4,
	0xaf, 0x33, 0x1a, 0xbd, 0x82, 0x56, 0x49, 0x19, 0xd5, 0x4c, 0xf3, 0x48, 0x98, 0xdf, 0x41, 0x2b,
	0x10, 0x2c, 0x97, 0xbe, 0x81, 0xbd, 0xe1, 0x24, 0x61, 0x8c, 0xce, 0x9e, 0xd6, 0xdc, 0xcd, 0xd9,
	0x5c, 0xf6, 0x5c, 0xf3, 0xea, 0xb3, 0xcd, 0xcd, 0x9f, 0xaa, 0xa0, 0x07, 0x82, 0xd9, 0x4f, 0x7e,
	0x8f, 0xa0, 0x26, 0x3e, 0x2c, 0xd4, 0x9c, 0xea, 0x24, 0x7b, 0x46, 0x06, 0x34, 0xef, 0xe9, 0x32,
	0x9d, 0x72, 0x96, 0x95, 0xaa, 0x93, 0x02, 0xa2, 0x2f, 0xa0, 0x55, 0xe6, 0x63, 0x68, 0xa7, 0x95,
	0xb3, 0xf6, 0xc5, 0x49, 0x47, 0x25, 0xd8, 0x29, 0x12, 0xec, 0x44, 0x85, 0x82, 0x3c, 0x8a, 0xd1,
	0x6b, 0x80, 0xe2, 0x38, 0xd3, 0x91, 0x51, 0x3b, 0xad, 0x9c, 0xb5, 0x48, 0x2b, 0x67, 0xdc, 0x11,
	0x3a, 0x84, 0xba, 0x78, 0x90, 0x6f, 0xea, 0xd9, 0x9b, 0x9a, 0x78, 0x70, 0x47, 0x32, 0x44, 0xba,
	0xe0, 0xc3, 0x89, 0xd1, 0x50, 0x49, 0x67, 0x40, 0xce, 0x90, 0x3e, 0x08, 0xca, 0x32, 0x7f, 0x4d,
	0x35, 0xc3, 0x92, 0x40, 0x26, 0xec, 0x8a, 0x59, 0x1a, 0x0f, 0xe9, 0x52, 0xc4, 0x93, 0x24, 0x9d,
	0x18, 0xdb, 0x99, 0xa2, 0x2d, 0x66, 0xa9, 0x4d, 0x97, 0xe2, 0x3a, 0x49, 0x27, 0xa6, 0x03, 0x28,
	0x10, 0x2c, 0xdc, 0xc8, 0xc6, 0x80, 0xe6, 0x70, 0x49, 0x13, 0xc1, 0x8b, 0x49, 0x17, 0x50, 0xfa,
	0x60, 0x9c, 0x0d, 0x8b, 0xc4, 0x14, 0x30, 0x6f, 0x00, 0x02, 0xc1, 0x82, 0xe4, 0xc3, 0x8c, 0x27,
	0x23, 0xf4, 0x16, 0x1a, 0x6b, 0x31, 0xb5, 0x2f, 0x0e, 0xd6, 0xd6, 0x4a, 0x35, 0x20, 0xb9, 0x40,
	0x8e, 0x5c, 0x2e, 0x50, 0x5e, 0x2d, 0x7b, 0x36, 0x71, 0xb6, 0xbe, 0x98, 0xdd, 0xd3, 0x19, 0x57,
	0x09, 0x2c, 0x54, 0xe1, 0xc2, 0x4b, 0x0e, 0xff, 0x67, 0x83, 0x7e, 0xab, 0xc0, 0x76, 0x20, 0x58,
	0x6f, 0xc6, 0x87, 0x3f, 0xa2, 0xce, 0x86, 0xa5, 0x17, 0x6b, 0x96, 0x32, 0xc5, 0x86, 0xaf, 0xb3,
	0x35, 0x5f, 0xed, 0x8b, 0xa3, 0x4d, 0xb5, 0x93, 0x88, 0x44, 0xb9, 0x45, 0x9f, 0xc3, 0xf6, 0x3c,
	0xbf, 0x06, 0xf9, 0x16, 0x18, 0x9b, 0xea, 0xe2, 0x9a, 0x90, 0x52, 0x69, 0xfe, 0x00, 0x7b, 0x4f,
	0x3b, 0xa3, 0x17, 0xd0, 0x60, 0xab, 0xf9, 0x5d, 0xee, 0xb0, 0x46, 0x72, 0x84, 0x3e, 0x81, 0xdd,
	0xc5, 0x92, 0xde, 0x4f, 0xf9, 0x2a, 0x55, 0x21, 0xaa, 0x83, 0xee, 0x14, 0xa4, 0x4c, 0x11, 0x7d,
	0x04, 0x2d, 0x59, 0x56, 0x09, 0xb4, 0x4c, 0xb0, 0x2d, 0x89, 0x2c, 0x62, 0x13, 0x76, 0xd6, 0x7d,
	0x97, 0x33, 0xaf, 0x9c, 0x6a, 0xe5, 0xcc, 0x3b, 0xd9, 0x75, 0x78, 0xe2, 0x16, 0x9d, 0xac, 0x9d,
	0x4c, 0x69, 0x4b, 0x7c, 0xfe, 0x67, 0x25, 0xbb, 0x9f, 0xa1, 0x48, 0xc4, 0x2a, 0x45, 0x6d, 0x68,
	0x0e, 0xbc, 0x1b, 0xcf, 0xff, 0xda, 0xd3, 0xb7, 0xd0, 0x0e, 0x34, 0xc3, 0x81, 0x6d, 0xe3, 0x30,
	0xd4, 0xff, 0xaa, 0x20, 0x1d, 0xda, 0x3d, 0xcb, 0x89, 0x09, 0xfe, 0x6a, 0x80, 0xc3, 0x48, 0xff,
	0x59, 0x43, 0x7b, 0xd0, 0xba, 0xf4, 0x49, 0xcf, 0x75, 0x1c, 0xec, 0xe9, 0xbf, 0x64, 0xd8, 0xf3,
	0xa3, 0xf8, 0xd2, 0x1f, 0x78, 0x8e, 0xfe, 0xab, 0x86, 0x5e, 0x83, 0x91, 0xab, 0x63, 0xec, 0x45,
	0x6e, 0xf4, 0x4d, 0x1c, 0xf9, 0x7e, 0xdc, 0xb7, 0xc8, 0x15, 0xd6, 0x7f, 0xd7, 0xd0, 0x09, 0x1c,
	0xbb, 0x5e, 0x84, 0x89, 0x67, 0xf5, 0xe3, 0x10, 0x93, 0x77, 0x98, 0xc4, 0x98, 0x10, 0x9f, 0xe8,
	0x7f, 0x6b, 0xe8, 0x08, 0xf6, 0x65, 0x29, 0xf7, 0x36, 0xe8, 0xe3, 0x5b, 0xec, 0x45, 0xd8, 0xd1,
	0xff, 0xd1, 0x90, 0x01, 0x87, 0x52, 0xe8, 0xda, 0x38, 0x1e, 0x78, 0xd6, 0x3b, 0xcb, 0xed, 0x5b,
	0xbd, 0x3e, 0xd6, 0xff, 0xd5, 0xce, 0xff, 0xa8, 0x64, 0x1f, 0x54, 0x95, 0x40, 0x24, 0xaf, 0x7b,
	0x1b, 0x9a, 0xb7, 0x38, 0x0c, 0xad, 0x2b, 0xac, 0x6f, 0x21, 0x80, 0x86, 0xed, 0x7b, 0x97, 0xee,
	0x95, 0x5e, 0x41, 0x07, 0xb0, 0xab, 0x9e, 0xe3, 0x41, 0xe0, 0x58, 0x11, 0xd6, 0xab, 0xc8, 0x80,
	0x23, 0xec, 0x39, 0x3e, 0x09, 0x31, 0x89, 0x23, 0x62, 0x79, 0xa1, 0x65, 0x47, 0xae, 0xef, 0xe9,
	0x1a, 0x7a, 0x09, 0x87, 0x3e, 0x71, 0x30, 0xd9, 0x78, 0x51, 0x43, 0xc7, 0x70, 0xe0, 0xe0, 0xbe,
	0x2b, 0x4d, 0x87, 0x18, 0xdf, 0xc4, 0xae, 0x77, 0xe9, 0xeb, 0x75, 0x49, 0xdb, 0xd7, 0x96, 0xeb,
	0xd9, 0xbe, 0x83, 0xe3, 0xc0, 0xb2, 0x6f, 0x64, 0xff, 0x86, 0x6c, 0x10, 0x60, 0x4c, 0x62, 0x82,
	0x43, 0x7f, 0x40, 0xa4, 0x7d, 0xd5, 0xba, 0x79, 0xfe, 0x3d, 0x1c, 0x6f, 0xc6, 0xe5, 0xca, 0x4f,
	0x3f, 0xda, 0x03, 0x08, 0xdd, 0x2b, 0xcf, 0x8a, 0x06, 0x04, 0x87, 0xfa, 0x16, 0xda, 0x87, 0x76,
	0xdf, 0x0a, 0xa3, 0xb8, 0x3c, 0xc7, 0x4b, 0x38, 0x5c, 0xb3, 0x14, 0xc6, 0x97, 0x6e, 0x3f, 0xc2,
	0x44, 0xaf, 0xca, 0x93, 0xe7, 0x9e, 0x75, 0xad, 0x17, 0xca, 0xa5, 0xe3, 0x82, 0xa7, 0xf9, 0x2a,
	0x7f, 0xdb, 0x1b, 0x4f, 0xc5, 0x64, 0x75, 0x27, 0x61, 0x77, 0x91, 0xcc, 0x66, 0x54, 0x70, 0x46,
	0xbb, 0x63, 0xfe, 0xe9, 0x23, 0x18, 0xf2, 0x25, 0xed, 0xde, 0xcf, 0x6d, 0xce, 0xc4, 0x32, 0x19,
	0x8a, 0x60, 0x75, 0xa7, 0xfe, 0xc8, 0xd2, 0xae, 0xaa, 0x71, 0xd7, 0xc8, 0xe0, 0x67, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0xc1, 0x3f, 0x53, 0xe9, 0xfd, 0x06, 0x00, 0x00,
}
