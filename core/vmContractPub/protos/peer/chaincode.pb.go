// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chaincode.proto

package peer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Confidentiality Levels
type ConfidentialityLevel int32

const (
	ConfidentialityLevel_PUBLIC       ConfidentialityLevel = 0
	ConfidentialityLevel_CONFIDENTIAL ConfidentialityLevel = 1
)

var ConfidentialityLevel_name = map[int32]string{
	0: "PUBLIC",
	1: "CONFIDENTIAL",
}

var ConfidentialityLevel_value = map[string]int32{
	"PUBLIC":       0,
	"CONFIDENTIAL": 1,
}

func (x ConfidentialityLevel) String() string {
	return proto.EnumName(ConfidentialityLevel_name, int32(x))
}

func (ConfidentialityLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{0}
}

type PtnChaincodeSpec_Type int32

const (
	PtnChaincodeSpec_UNDEFINED PtnChaincodeSpec_Type = 0
	PtnChaincodeSpec_GOLANG    PtnChaincodeSpec_Type = 1
	PtnChaincodeSpec_NODE      PtnChaincodeSpec_Type = 2
	PtnChaincodeSpec_CAR       PtnChaincodeSpec_Type = 3
	PtnChaincodeSpec_JAVA      PtnChaincodeSpec_Type = 4
)

var PtnChaincodeSpec_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "GOLANG",
	2: "NODE",
	3: "CAR",
	4: "JAVA",
}

var PtnChaincodeSpec_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"GOLANG":    1,
	"NODE":      2,
	"CAR":       3,
	"JAVA":      4,
}

func (x PtnChaincodeSpec_Type) String() string {
	return proto.EnumName(PtnChaincodeSpec_Type_name, int32(x))
}

func (PtnChaincodeSpec_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{2, 0}
}

type PtnChaincodeDeploymentSpec_ExecutionEnvironment int32

const (
	PtnChaincodeDeploymentSpec_DOCKER PtnChaincodeDeploymentSpec_ExecutionEnvironment = 0
	PtnChaincodeDeploymentSpec_SYSTEM PtnChaincodeDeploymentSpec_ExecutionEnvironment = 1
)

var PtnChaincodeDeploymentSpec_ExecutionEnvironment_name = map[int32]string{
	0: "DOCKER",
	1: "SYSTEM",
}

var PtnChaincodeDeploymentSpec_ExecutionEnvironment_value = map[string]int32{
	"DOCKER": 0,
	"SYSTEM": 1,
}

func (x PtnChaincodeDeploymentSpec_ExecutionEnvironment) String() string {
	return proto.EnumName(PtnChaincodeDeploymentSpec_ExecutionEnvironment_name, int32(x))
}

func (PtnChaincodeDeploymentSpec_ExecutionEnvironment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{3, 0}
}

//ChaincodeID contains the path as specified by the deploy transaction
//that created it as well as the hashCode that is generated by the
//system for the path. From the user level (ie, CLI, REST API and so on)
//deploy transaction is expected to provide the path and other requests
//are expected to provide the hashCode. The other value will be ignored.
//Internally, the structure could contain both values. For instance, the
//hashCode will be set when first generated using the path
type PtnChaincodeID struct {
	//deploy transaction will use the path
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	//all other requests will use the name (really a hashcode) generated by
	//the deploy transaction
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//user friendly version name for the chaincode
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnChaincodeID) Reset()         { *m = PtnChaincodeID{} }
func (m *PtnChaincodeID) String() string { return proto.CompactTextString(m) }
func (*PtnChaincodeID) ProtoMessage()    {}
func (*PtnChaincodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{0}
}

func (m *PtnChaincodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnChaincodeID.Unmarshal(m, b)
}
func (m *PtnChaincodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnChaincodeID.Marshal(b, m, deterministic)
}
func (m *PtnChaincodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnChaincodeID.Merge(m, src)
}
func (m *PtnChaincodeID) XXX_Size() int {
	return xxx_messageInfo_PtnChaincodeID.Size(m)
}
func (m *PtnChaincodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnChaincodeID.DiscardUnknown(m)
}

var xxx_messageInfo_PtnChaincodeID proto.InternalMessageInfo

func (m *PtnChaincodeID) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PtnChaincodeID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PtnChaincodeID) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Carries the chaincode function and its arguments.
// UnmarshalJSON in transaction.go converts the string-based REST/JSON input to
// the []byte-based current ChaincodeInput structure.
type PtnChaincodeInput struct {
	Args                 [][]byte          `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Decorations          map[string][]byte `protobuf:"bytes,2,rep,name=decorations,proto3" json:"decorations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PtnChaincodeInput) Reset()         { *m = PtnChaincodeInput{} }
func (m *PtnChaincodeInput) String() string { return proto.CompactTextString(m) }
func (*PtnChaincodeInput) ProtoMessage()    {}
func (*PtnChaincodeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{1}
}

func (m *PtnChaincodeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnChaincodeInput.Unmarshal(m, b)
}
func (m *PtnChaincodeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnChaincodeInput.Marshal(b, m, deterministic)
}
func (m *PtnChaincodeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnChaincodeInput.Merge(m, src)
}
func (m *PtnChaincodeInput) XXX_Size() int {
	return xxx_messageInfo_PtnChaincodeInput.Size(m)
}
func (m *PtnChaincodeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnChaincodeInput.DiscardUnknown(m)
}

var xxx_messageInfo_PtnChaincodeInput proto.InternalMessageInfo

func (m *PtnChaincodeInput) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *PtnChaincodeInput) GetDecorations() map[string][]byte {
	if m != nil {
		return m.Decorations
	}
	return nil
}

// Carries the chaincode specification. This is the actual metadata required for
// defining a chaincode.
type PtnChaincodeSpec struct {
	Type                 PtnChaincodeSpec_Type `protobuf:"varint,1,opt,name=type,proto3,enum=protos.PtnChaincodeSpec_Type" json:"type,omitempty"`
	ChaincodeId          *PtnChaincodeID       `protobuf:"bytes,2,opt,name=chaincode_id,json=chaincodeId,proto3" json:"chaincode_id,omitempty"`
	Input                *PtnChaincodeInput    `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Timeout              int32                 `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Memory               int64                 `protobuf:"varint,5,opt,name=Memory,proto3" json:"Memory,omitempty"`
	CpuQuota             int64                 `protobuf:"varint,6,opt,name=CpuQuota,proto3" json:"CpuQuota,omitempty"`
	CpuShare             int64                 `protobuf:"varint,7,opt,name=CpuShare,proto3" json:"CpuShare,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PtnChaincodeSpec) Reset()         { *m = PtnChaincodeSpec{} }
func (m *PtnChaincodeSpec) String() string { return proto.CompactTextString(m) }
func (*PtnChaincodeSpec) ProtoMessage()    {}
func (*PtnChaincodeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{2}
}

func (m *PtnChaincodeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnChaincodeSpec.Unmarshal(m, b)
}
func (m *PtnChaincodeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnChaincodeSpec.Marshal(b, m, deterministic)
}
func (m *PtnChaincodeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnChaincodeSpec.Merge(m, src)
}
func (m *PtnChaincodeSpec) XXX_Size() int {
	return xxx_messageInfo_PtnChaincodeSpec.Size(m)
}
func (m *PtnChaincodeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnChaincodeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PtnChaincodeSpec proto.InternalMessageInfo

func (m *PtnChaincodeSpec) GetType() PtnChaincodeSpec_Type {
	if m != nil {
		return m.Type
	}
	return PtnChaincodeSpec_UNDEFINED
}

func (m *PtnChaincodeSpec) GetChaincodeId() *PtnChaincodeID {
	if m != nil {
		return m.ChaincodeId
	}
	return nil
}

func (m *PtnChaincodeSpec) GetInput() *PtnChaincodeInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *PtnChaincodeSpec) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *PtnChaincodeSpec) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *PtnChaincodeSpec) GetCpuQuota() int64 {
	if m != nil {
		return m.CpuQuota
	}
	return 0
}

func (m *PtnChaincodeSpec) GetCpuShare() int64 {
	if m != nil {
		return m.CpuShare
	}
	return 0
}

// Specify the deployment of a chaincode.
// TODO: Define `codePackage`.
type PtnChaincodeDeploymentSpec struct {
	ChaincodeSpec *PtnChaincodeSpec `protobuf:"bytes,1,opt,name=chaincode_spec,json=chaincodeSpec,proto3" json:"chaincode_spec,omitempty"`
	// Controls when the chaincode becomes executable.
	//    google.protobuf.Timestamp effective_date = 2;
	CodePackage          []byte                                          `protobuf:"bytes,3,opt,name=code_package,json=codePackage,proto3" json:"code_package,omitempty"`
	ExecEnv              PtnChaincodeDeploymentSpec_ExecutionEnvironment `protobuf:"varint,4,opt,name=exec_env,json=execEnv,proto3,enum=protos.PtnChaincodeDeploymentSpec_ExecutionEnvironment" json:"exec_env,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *PtnChaincodeDeploymentSpec) Reset()         { *m = PtnChaincodeDeploymentSpec{} }
func (m *PtnChaincodeDeploymentSpec) String() string { return proto.CompactTextString(m) }
func (*PtnChaincodeDeploymentSpec) ProtoMessage()    {}
func (*PtnChaincodeDeploymentSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{3}
}

func (m *PtnChaincodeDeploymentSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnChaincodeDeploymentSpec.Unmarshal(m, b)
}
func (m *PtnChaincodeDeploymentSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnChaincodeDeploymentSpec.Marshal(b, m, deterministic)
}
func (m *PtnChaincodeDeploymentSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnChaincodeDeploymentSpec.Merge(m, src)
}
func (m *PtnChaincodeDeploymentSpec) XXX_Size() int {
	return xxx_messageInfo_PtnChaincodeDeploymentSpec.Size(m)
}
func (m *PtnChaincodeDeploymentSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnChaincodeDeploymentSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PtnChaincodeDeploymentSpec proto.InternalMessageInfo

func (m *PtnChaincodeDeploymentSpec) GetChaincodeSpec() *PtnChaincodeSpec {
	if m != nil {
		return m.ChaincodeSpec
	}
	return nil
}

func (m *PtnChaincodeDeploymentSpec) GetCodePackage() []byte {
	if m != nil {
		return m.CodePackage
	}
	return nil
}

func (m *PtnChaincodeDeploymentSpec) GetExecEnv() PtnChaincodeDeploymentSpec_ExecutionEnvironment {
	if m != nil {
		return m.ExecEnv
	}
	return PtnChaincodeDeploymentSpec_DOCKER
}

// Carries the chaincode function and its arguments.
type PtnChaincodeInvocationSpec struct {
	ChaincodeSpec *PtnChaincodeSpec `protobuf:"bytes,1,opt,name=chaincode_spec,json=chaincodeSpec,proto3" json:"chaincode_spec,omitempty"`
	// This field can contain a user-specified ID generation algorithm
	// If supplied, this will be used to generate a ID
	// If not supplied (left empty), sha256base64 will be used
	// The algorithm consists of two parts:
	//  1, a hash function
	//  2, a decoding used to decode user (string) input to bytes
	// Currently, SHA256 with BASE64 is supported (e.g. idGenerationAlg='sha256base64')
	IdGenerationAlg      string   `protobuf:"bytes,2,opt,name=id_generation_alg,json=idGenerationAlg,proto3" json:"id_generation_alg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtnChaincodeInvocationSpec) Reset()         { *m = PtnChaincodeInvocationSpec{} }
func (m *PtnChaincodeInvocationSpec) String() string { return proto.CompactTextString(m) }
func (*PtnChaincodeInvocationSpec) ProtoMessage()    {}
func (*PtnChaincodeInvocationSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{4}
}

func (m *PtnChaincodeInvocationSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtnChaincodeInvocationSpec.Unmarshal(m, b)
}
func (m *PtnChaincodeInvocationSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtnChaincodeInvocationSpec.Marshal(b, m, deterministic)
}
func (m *PtnChaincodeInvocationSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtnChaincodeInvocationSpec.Merge(m, src)
}
func (m *PtnChaincodeInvocationSpec) XXX_Size() int {
	return xxx_messageInfo_PtnChaincodeInvocationSpec.Size(m)
}
func (m *PtnChaincodeInvocationSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PtnChaincodeInvocationSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PtnChaincodeInvocationSpec proto.InternalMessageInfo

func (m *PtnChaincodeInvocationSpec) GetChaincodeSpec() *PtnChaincodeSpec {
	if m != nil {
		return m.ChaincodeSpec
	}
	return nil
}

func (m *PtnChaincodeInvocationSpec) GetIdGenerationAlg() string {
	if m != nil {
		return m.IdGenerationAlg
	}
	return ""
}

func init() {
	proto.RegisterEnum("protos.ConfidentialityLevel", ConfidentialityLevel_name, ConfidentialityLevel_value)
	proto.RegisterEnum("protos.PtnChaincodeSpec_Type", PtnChaincodeSpec_Type_name, PtnChaincodeSpec_Type_value)
	proto.RegisterEnum("protos.PtnChaincodeDeploymentSpec_ExecutionEnvironment", PtnChaincodeDeploymentSpec_ExecutionEnvironment_name, PtnChaincodeDeploymentSpec_ExecutionEnvironment_value)
	proto.RegisterType((*PtnChaincodeID)(nil), "protos.PtnChaincodeID")
	proto.RegisterType((*PtnChaincodeInput)(nil), "protos.PtnChaincodeInput")
	proto.RegisterMapType((map[string][]byte)(nil), "protos.PtnChaincodeInput.DecorationsEntry")
	proto.RegisterType((*PtnChaincodeSpec)(nil), "protos.PtnChaincodeSpec")
	proto.RegisterType((*PtnChaincodeDeploymentSpec)(nil), "protos.PtnChaincodeDeploymentSpec")
	proto.RegisterType((*PtnChaincodeInvocationSpec)(nil), "protos.PtnChaincodeInvocationSpec")
}

func init() { proto.RegisterFile("chaincode.proto", fileDescriptor_97136ef4b384cc22) }

var fileDescriptor_97136ef4b384cc22 = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0x8d, 0xf9, 0x4c, 0xc6, 0x84, 0x38, 0xab, 0x28, 0x72, 0x23, 0x55, 0xa2, 0x9c, 0x50, 0xa4,
	0x82, 0x4a, 0x2b, 0xf5, 0xe3, 0x90, 0x96, 0xd8, 0x4e, 0x44, 0x4b, 0x80, 0x2e, 0x49, 0xa5, 0xf6,
	0x82, 0x1c, 0x33, 0x05, 0x2b, 0x66, 0xd7, 0x32, 0x6b, 0x2b, 0xbe, 0xf7, 0xd2, 0x1f, 0xd4, 0x5f,
	0xd3, 0x3f, 0x53, 0xed, 0x9a, 0x90, 0xd0, 0x92, 0x5b, 0x4f, 0x9e, 0x79, 0xf3, 0xf6, 0xed, 0xcc,
	0xdb, 0x5d, 0xc3, 0x9e, 0x37, 0x73, 0x7d, 0xe6, 0xf1, 0x09, 0x36, 0xc3, 0x88, 0x0b, 0x4e, 0x4a,
	0xea, 0xb3, 0xa8, 0x53, 0xa8, 0x0e, 0x05, 0xb3, 0xee, 0xaa, 0x5d, 0x9b, 0x10, 0x28, 0x84, 0xae,
	0x98, 0x99, 0x5a, 0x4d, 0x6b, 0xec, 0x50, 0x15, 0x4b, 0x8c, 0xb9, 0x73, 0x34, 0x73, 0x19, 0x26,
	0x63, 0x62, 0x42, 0x39, 0xc1, 0x68, 0xe1, 0x73, 0x66, 0xe6, 0x15, 0x7c, 0x97, 0xd6, 0x7f, 0x69,
	0xb0, 0xbf, 0x26, 0xca, 0xc2, 0x58, 0x48, 0x0d, 0x37, 0x9a, 0x2e, 0x4c, 0xad, 0x96, 0x6f, 0x54,
	0xa8, 0x8a, 0x49, 0x0f, 0xf4, 0x09, 0x7a, 0x3c, 0x72, 0x85, 0xcf, 0xd9, 0xc2, 0xcc, 0xd5, 0xf2,
	0x0d, 0xbd, 0x7d, 0x9c, 0xb5, 0xb8, 0x68, 0xfe, 0xa3, 0xd1, 0xb4, 0xef, 0xc9, 0x0e, 0x13, 0x51,
	0x4a, 0x1f, 0x2e, 0x3f, 0x3a, 0x01, 0xe3, 0x6f, 0x02, 0x31, 0x20, 0x7f, 0x83, 0xe9, 0x72, 0x18,
	0x19, 0x92, 0x03, 0x28, 0x26, 0x6e, 0x10, 0x67, 0xc3, 0x54, 0x68, 0x96, 0xbc, 0xcb, 0xbd, 0xd1,
	0xea, 0xbf, 0x73, 0x60, 0x3c, 0xdc, 0x73, 0x14, 0xa2, 0x47, 0x5e, 0x40, 0x41, 0xa4, 0x21, 0x2a,
	0x85, 0x6a, 0xfb, 0xe9, 0xa6, 0xde, 0x24, 0xaf, 0x79, 0x99, 0x86, 0x48, 0x15, 0x95, 0xbc, 0x85,
	0xca, 0xca, 0xee, 0xb1, 0x3f, 0x51, 0x1b, 0xe9, 0xed, 0xc3, 0x8d, 0x63, 0xd9, 0x54, 0x5f, 0x71,
	0xbb, 0x13, 0xd2, 0x82, 0xa2, 0x2f, 0x27, 0x55, 0x96, 0xea, 0xed, 0x27, 0x8f, 0x5a, 0x41, 0x33,
	0x9e, 0x3c, 0x05, 0xe1, 0xcf, 0x91, 0xc7, 0xc2, 0x2c, 0xd4, 0xb4, 0x46, 0x91, 0xde, 0xa5, 0xe4,
	0x10, 0x4a, 0x17, 0x38, 0xe7, 0x51, 0x6a, 0x16, 0x6b, 0x5a, 0x23, 0x4f, 0x97, 0x19, 0x39, 0x82,
	0x6d, 0x2b, 0x8c, 0x3f, 0xc7, 0x5c, 0xb8, 0x66, 0x49, 0x55, 0x56, 0xf9, 0xb2, 0x36, 0x9a, 0xb9,
	0x11, 0x9a, 0xe5, 0x55, 0x4d, 0xe5, 0xf5, 0x13, 0x28, 0xc8, 0x19, 0xc9, 0x2e, 0xec, 0x5c, 0xf5,
	0x6d, 0xe7, 0xac, 0xdb, 0x77, 0x6c, 0x63, 0x8b, 0x00, 0x94, 0xce, 0x07, 0xbd, 0x4e, 0xff, 0xdc,
	0xd0, 0xc8, 0x36, 0x14, 0xfa, 0x03, 0xdb, 0x31, 0x72, 0xa4, 0x0c, 0x79, 0xab, 0x43, 0x8d, 0xbc,
	0x84, 0x3e, 0x76, 0xbe, 0x74, 0x8c, 0x42, 0xfd, 0x47, 0x0e, 0x8e, 0x1e, 0x8e, 0x61, 0x63, 0x18,
	0xf0, 0x74, 0x8e, 0x4c, 0x28, 0x9f, 0xdf, 0x43, 0xf5, 0xde, 0xb4, 0x45, 0x88, 0x9e, 0x72, 0x5c,
	0x6f, 0x9b, 0x8f, 0x39, 0x4e, 0x77, 0xbd, 0xb5, 0x83, 0x7a, 0x06, 0x15, 0xb5, 0x36, 0x74, 0xbd,
	0x1b, 0x77, 0x8a, 0xca, 0xc1, 0x0a, 0xd5, 0x25, 0x36, 0xcc, 0x20, 0x42, 0x61, 0x1b, 0x6f, 0xd1,
	0x1b, 0x23, 0x4b, 0x94, 0x5b, 0xd5, 0xf6, 0xeb, 0x4d, 0xea, 0xeb, 0x9d, 0x35, 0x9d, 0x5b, 0xf4,
	0x62, 0x79, 0xa5, 0x1c, 0x96, 0xf8, 0x11, 0x67, 0xb2, 0x40, 0xcb, 0x52, 0xc8, 0x61, 0x49, 0xbd,
	0x09, 0x07, 0x9b, 0x08, 0xd2, 0x17, 0x7b, 0x60, 0x7d, 0x72, 0x68, 0xe6, 0xd1, 0xe8, 0xeb, 0xe8,
	0xd2, 0xb9, 0x30, 0xb4, 0xfa, 0x4f, 0x6d, 0xdd, 0x86, 0x2e, 0x4b, 0xb8, 0xa7, 0x6e, 0xec, 0xff,
	0xb1, 0xe1, 0x18, 0xf6, 0xfd, 0xc9, 0x78, 0x8a, 0x0c, 0xb3, 0x77, 0x30, 0x76, 0x83, 0xe9, 0xf2,
	0xdd, 0xee, 0xf9, 0x93, 0xf3, 0x15, 0xde, 0x09, 0xa6, 0xc7, 0xaf, 0xe0, 0xc0, 0xe2, 0xec, 0xbb,
	0x3f, 0x41, 0x26, 0x7c, 0x37, 0xf0, 0x45, 0xda, 0xc3, 0x04, 0x03, 0xd9, 0xef, 0xf0, 0xea, 0xb4,
	0xd7, 0xb5, 0x8c, 0x2d, 0x62, 0x40, 0xc5, 0x1a, 0xf4, 0xcf, 0xba, 0xb6, 0xd3, 0xbf, 0xec, 0x76,
	0x7a, 0x86, 0x76, 0x3a, 0x00, 0x7d, 0xd9, 0x4b, 0x88, 0x18, 0x7d, 0xfb, 0x30, 0xf5, 0xc5, 0x2c,
	0xbe, 0x6e, 0x7a, 0x7c, 0xde, 0x0a, 0xdd, 0x20, 0x40, 0xc1, 0x19, 0xb6, 0xa6, 0xfc, 0xf9, 0x7d,
	0xe2, 0xf1, 0x08, 0x5b, 0xc9, 0xdc, 0xe2, 0x4c, 0x44, 0xae, 0x27, 0x86, 0xf1, 0x75, 0x2b, 0x53,
	0x68, 0x49, 0x85, 0xeb, 0xec, 0x5f, 0xf4, 0xf2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0xa7,
	0x7b, 0x7a, 0xa5, 0x04, 0x00, 0x00,
}
